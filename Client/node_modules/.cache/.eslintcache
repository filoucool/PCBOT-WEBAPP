[{"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\index.js":"1","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\serviceWorker.js":"2","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\App.js":"3","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\routes.js":"4","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\globalStyles.js":"5","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\BaseOptionChart.js":"6","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\ScrollToTop.js":"7","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\index.js":"8","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\LogoOnlyLayout.js":"9","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SensorData.js":"10","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SystemHealth.js":"11","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\EventViewer.js":"12","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Settings.js":"13","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\DashboardApp.js":"14","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Page404.js":"15","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\LiveCamera.js":"16","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\palette.js":"17","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\typography.js":"18","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shape.js":"19","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shadows.js":"20","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\index.js":"21","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Logo.js":"22","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Page.js":"23","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\blog.js":"24","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRamUsage.js":"25","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGpuTemp.js":"26","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDataTabs.js":"27","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppSuccessReports.js":"28","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRessourceMonitor.js":"29","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\HealthGrid.js":"30","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCpuTemp.js":"31","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCurrentTask.js":"32","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppLatestEvent.js":"33","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppErrorReports.js":"34","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTask.js":"35","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTime.js":"36","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\index.js":"37","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardNavbar.js":"38","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardSidebar.js":"39","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\index.js":"40","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\index.js":"41","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\index.js":"42","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatNumber.js":"43","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\mockImages.js":"44","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatTime.js":"45","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Autocomplete.js":"46","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\NotificationsPopover.js":"47","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\SidebarConfig.js":"48","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\index.js":"49","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\MotionContainer.js":"50","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppWeeklySales.js":"51","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSort.js":"52","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTrafficBySite.js":"53","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppBugsOverTime.js":"54","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTasks.js":"55","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewUsers.js":"56","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewsUpdate.js":"57","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\index.js":"58","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\MenuPopover.js":"59","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Scrollbar.js":"60","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\Wrap.js":"61","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\index.js":"62","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceOut.js":"63","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceIn.js":"64","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppItemOrders.js":"65","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppConversionRates.js":"66","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js":"67","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppWarningsReports.js":"68","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostCard.js":"69","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\NavSection.js":"70","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\LanguagePopover.js":"71","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\AccountPopover.js":"72","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\Searchbar.js":"73","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\index.js":"74","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\SvgIconStyle.js":"75","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\account.js":"76","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\MHidden.js":"77","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\IconButton.js":"78","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Typography.js":"79","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Backdrop.js":"80","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Tooltip.js":"81","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Button.js":"82","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Input.js":"83","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Paper.js":"84","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Lists.js":"85","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Card.js":"86","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorGrid.js":"87","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorSensor.js":"88","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasGrid.js":"89","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasSensor.js":"90","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageSensor.js":"91","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageGrid.js":"92","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageGrid.js":"93","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageSensor.js":"94","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumidityGrid.js":"95","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTemperatureGrids.js":"96","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTempSensor.js":"97","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumiditySensor.js":"98","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\services\\db.services.js":"99","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\http-common.js":"100","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\index.js":"101","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\serviceWorker.js":"102","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\App.js":"103","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\routes.js":"104","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\globalStyles.js":"105","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\ScrollToTop.js":"106","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\charts\\BaseOptionChart.js":"107","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\index.js":"108","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\SystemHealth.js":"109","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\LogoOnlyLayout.js":"110","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Settings.js":"111","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\SensorData.js":"112","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\EventViewer.js":"113","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\LiveCamera.js":"114","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\DashboardApp.js":"115","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Page404.js":"116","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\shape.js":"117","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\shadows.js":"118","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\typography.js":"119","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\palette.js":"120","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\index.js":"121","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\Page.js":"122","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\Logo.js":"123","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppRamUsage.js":"124","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppCpuTemp.js":"125","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\HealthGrid.js":"126","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppGpuTemp.js":"127","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppDataTabs.js":"128","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppCurrentTask.js":"129","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppLatestEvent.js":"130","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppRessourceMonitor.js":"131","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppErrorReports.js":"132","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppSuccessReports.js":"133","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppDistributionOfTask.js":"134","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppDistributionOfTime.js":"135","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\services\\db.services.js":"136","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\_mocks_\\blog.js":"137","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\index.js":"138","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\DashboardSidebar.js":"139","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\index.js":"140","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\DashboardNavbar.js":"141","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\index.js":"142","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\index.js":"143","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\http-common.js":"144","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\utils\\formatNumber.js":"145","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\utils\\mockImages.js":"146","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\utils\\formatTime.js":"147","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Autocomplete.js":"148","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\IconButton.js":"149","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\charts\\index.js":"150","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\SidebarConfig.js":"151","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\MotionContainer.js":"152","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\NotificationsPopover.js":"153","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\BlogPostsSort.js":"154","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppWeeklySales.js":"155","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js":"156","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\BlogPostCard.js":"157","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppBugsOverTime.js":"158","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppTrafficBySite.js":"159","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppTasks.js":"160","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\MenuPopover.js":"161","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\Scrollbar.js":"162","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\SvgIconStyle.js":"163","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppNewUsers.js":"164","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppNewsUpdate.js":"165","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\index.js":"166","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppItemOrders.js":"167","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppWarningsReports.js":"168","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\AccountPopover.js":"169","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppConversionRates.js":"170","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\LanguagePopover.js":"171","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\Searchbar.js":"172","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\@material-extend\\index.js":"173","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\Wrap.js":"174","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\_mocks_\\account.js":"175","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\bounce\\index.js":"176","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\@material-extend\\MHidden.js":"177","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\NavSection.js":"178","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\bounce\\BounceOut.js":"179","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\bounce\\BounceIn.js":"180","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Typography.js":"181","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Backdrop.js":"182","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Tooltip.js":"183","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Button.js":"184","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Paper.js":"185","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Input.js":"186","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Lists.js":"187","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Card.js":"188","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppPhotoresistorGrid.js":"189","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppPhotoresistorSensor.js":"190","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppGasGrid.js":"191","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppGasSensor.js":"192","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppAmperageSensor.js":"193","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppAmperageGrid.js":"194","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppVoltageGrid.js":"195","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppVoltageSensor.js":"196","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppHumidityGrid.js":"197","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppTemperatureGrids.js":"198","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppHumiditySensor.js":"199","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppTempSensor.js":"200"},{"size":523,"mtime":1640791616047,"results":"201","hashOfConfig":"202"},{"size":5040,"mtime":1631941131000,"results":"203","hashOfConfig":"202"},{"size":808,"mtime":1645982043811,"results":"204","hashOfConfig":"202"},{"size":1453,"mtime":1640791686564,"results":"205","hashOfConfig":"202"},{"size":1876,"mtime":1631941131000,"results":"206","hashOfConfig":"202"},{"size":5404,"mtime":1631941131000,"results":"207","hashOfConfig":"202"},{"size":321,"mtime":1631941131000,"results":"208","hashOfConfig":"202"},{"size":1028,"mtime":1631941131000,"results":"209","hashOfConfig":"202"},{"size":778,"mtime":1631941131000,"results":"210","hashOfConfig":"202"},{"size":874,"mtime":1640496585146,"results":"211","hashOfConfig":"202"},{"size":1331,"mtime":1640504959330,"results":"212","hashOfConfig":"202"},{"size":6172,"mtime":1640489679429,"results":"213","hashOfConfig":"202"},{"size":23573,"mtime":1646005799893,"results":"214","hashOfConfig":"202"},{"size":2205,"mtime":1640793482839,"results":"215","hashOfConfig":"202"},{"size":1855,"mtime":1631941131000,"results":"216","hashOfConfig":"202"},{"size":2175,"mtime":1640791537583,"results":"217","hashOfConfig":"202"},{"size":2881,"mtime":1631941131000,"results":"218","hashOfConfig":"202"},{"size":2082,"mtime":1631941131000,"results":"219","hashOfConfig":"202"},{"size":179,"mtime":1631941131000,"results":"220","hashOfConfig":"202"},{"size":3936,"mtime":1631941131000,"results":"221","hashOfConfig":"202"},{"size":1218,"mtime":1631941131000,"results":"222","hashOfConfig":"202"},{"size":345,"mtime":1640294322675,"results":"223","hashOfConfig":"202"},{"size":536,"mtime":1631941131000,"results":"224","hashOfConfig":"202"},{"size":1922,"mtime":1631941131000,"results":"225","hashOfConfig":"202"},{"size":2010,"mtime":1640504805880,"results":"226","hashOfConfig":"202"},{"size":2049,"mtime":1640504792615,"results":"227","hashOfConfig":"202"},{"size":2427,"mtime":1645937965533,"results":"228","hashOfConfig":"202"},{"size":1607,"mtime":1646063821460,"results":"229","hashOfConfig":"202"},{"size":2383,"mtime":1640405888795,"results":"230","hashOfConfig":"202"},{"size":6005,"mtime":1640505782157,"results":"231","hashOfConfig":"202"},{"size":1961,"mtime":1640504771146,"results":"232","hashOfConfig":"202"},{"size":1475,"mtime":1640405882383,"results":"233","hashOfConfig":"202"},{"size":2719,"mtime":1640405333329,"results":"234","hashOfConfig":"202"},{"size":1581,"mtime":1646063825483,"results":"235","hashOfConfig":"202"},{"size":2058,"mtime":1640405809481,"results":"236","hashOfConfig":"202"},{"size":1922,"mtime":1640405561867,"results":"237","hashOfConfig":"202"},{"size":719,"mtime":1631941131000,"results":"238","hashOfConfig":"202"},{"size":2269,"mtime":1640754703101,"results":"239","hashOfConfig":"202"},{"size":2371,"mtime":1640368601180,"results":"240","hashOfConfig":"202"},{"size":92,"mtime":1631941131000,"results":"241","hashOfConfig":"202"},{"size":182,"mtime":1631941131000,"results":"242","hashOfConfig":"202"},{"size":963,"mtime":1640405762930,"results":"243","hashOfConfig":"202"},{"size":599,"mtime":1631941131000,"results":"244","hashOfConfig":"202"},{"size":348,"mtime":1631941131000,"results":"245","hashOfConfig":"202"},{"size":509,"mtime":1631941131000,"results":"246","hashOfConfig":"202"},{"size":272,"mtime":1631941131000,"results":"247","hashOfConfig":"202"},{"size":7455,"mtime":1631941131000,"results":"248","hashOfConfig":"202"},{"size":1214,"mtime":1640296144609,"results":"249","hashOfConfig":"202"},{"size":64,"mtime":1631941131000,"results":"250","hashOfConfig":"202"},{"size":616,"mtime":1631941131000,"results":"251","hashOfConfig":"202"},{"size":1517,"mtime":1631941131000,"results":"252","hashOfConfig":"202"},{"size":574,"mtime":1631941131000,"results":"253","hashOfConfig":"202"},{"size":2072,"mtime":1631941131000,"results":"254","hashOfConfig":"202"},{"size":1513,"mtime":1643395005934,"results":"255","hashOfConfig":"202"},{"size":2041,"mtime":1631941131000,"results":"256","hashOfConfig":"202"},{"size":1491,"mtime":1631941131000,"results":"257","hashOfConfig":"202"},{"size":2415,"mtime":1631941131000,"results":"258","hashOfConfig":"202"},{"size":50,"mtime":1631941131000,"results":"259","hashOfConfig":"202"},{"size":1464,"mtime":1631941131000,"results":"260","hashOfConfig":"202"},{"size":1478,"mtime":1631941131000,"results":"261","hashOfConfig":"202"},{"size":445,"mtime":1631941131000,"results":"262","hashOfConfig":"202"},{"size":57,"mtime":1631941131000,"results":"263","hashOfConfig":"202"},{"size":686,"mtime":1631941131000,"results":"264","hashOfConfig":"202"},{"size":1573,"mtime":1631941131000,"results":"265","hashOfConfig":"202"},{"size":1516,"mtime":1631941131000,"results":"266","hashOfConfig":"202"},{"size":1344,"mtime":1631941131000,"results":"267","hashOfConfig":"202"},{"size":2241,"mtime":1631941131000,"results":"268","hashOfConfig":"202"},{"size":1615,"mtime":1646063824150,"results":"269","hashOfConfig":"202"},{"size":5136,"mtime":1631941131000,"results":"270","hashOfConfig":"202"},{"size":4846,"mtime":1640364929149,"results":"271","hashOfConfig":"202"},{"size":2035,"mtime":1631941131000,"results":"272","hashOfConfig":"202"},{"size":2989,"mtime":1631941131000,"results":"273","hashOfConfig":"202"},{"size":2322,"mtime":1631941131000,"results":"274","hashOfConfig":"202"},{"size":48,"mtime":1631941131000,"results":"275","hashOfConfig":"202"},{"size":886,"mtime":1631941131000,"results":"276","hashOfConfig":"202"},{"size":244,"mtime":1631941131000,"results":"277","hashOfConfig":"202"},{"size":829,"mtime":1631941131000,"results":"278","hashOfConfig":"202"},{"size":564,"mtime":1631941131000,"results":"279","hashOfConfig":"202"},{"size":344,"mtime":1631941131000,"results":"280","hashOfConfig":"202"},{"size":748,"mtime":1631941131000,"results":"281","hashOfConfig":"202"},{"size":339,"mtime":1631941131000,"results":"282","hashOfConfig":"202"},{"size":1041,"mtime":1631941131000,"results":"283","hashOfConfig":"202"},{"size":1587,"mtime":1631941131000,"results":"284","hashOfConfig":"202"},{"size":294,"mtime":1631941131000,"results":"285","hashOfConfig":"202"},{"size":693,"mtime":1631941131000,"results":"286","hashOfConfig":"202"},{"size":796,"mtime":1631941131000,"results":"287","hashOfConfig":"202"},{"size":4486,"mtime":1646062211838,"results":"288","hashOfConfig":"202"},{"size":1909,"mtime":1640690905806,"results":"289","hashOfConfig":"202"},{"size":5158,"mtime":1646062498888,"results":"290","hashOfConfig":"202"},{"size":1957,"mtime":1640494307528,"results":"291","hashOfConfig":"202"},{"size":1992,"mtime":1640490427512,"results":"292","hashOfConfig":"202"},{"size":4209,"mtime":1646061749511,"results":"293","hashOfConfig":"202"},{"size":4223,"mtime":1646062130021,"results":"294","hashOfConfig":"202"},{"size":1999,"mtime":1640489363109,"results":"295","hashOfConfig":"202"},{"size":4215,"mtime":1646061923961,"results":"296","hashOfConfig":"202"},{"size":4243,"mtime":1646061665473,"results":"297","hashOfConfig":"202"},{"size":1962,"mtime":1640484017738,"results":"298","hashOfConfig":"202"},{"size":1938,"mtime":1640488675671,"results":"299","hashOfConfig":"202"},{"size":626,"mtime":1645982187799,"results":"300","hashOfConfig":"202"},{"size":166,"mtime":1645982094583,"results":"301","hashOfConfig":"202"},{"size":546,"mtime":1646095584910,"results":"302","hashOfConfig":"303"},{"size":5175,"mtime":1646095584930,"results":"304","hashOfConfig":"303"},{"size":837,"mtime":1646095584886,"results":"305","hashOfConfig":"303"},{"size":1495,"mtime":1646095584929,"results":"306","hashOfConfig":"303"},{"size":1951,"mtime":1646095584931,"results":"307","hashOfConfig":"303"},{"size":335,"mtime":1646095584893,"results":"308","hashOfConfig":"303"},{"size":5648,"mtime":1646095584909,"results":"309","hashOfConfig":"303"},{"size":1070,"mtime":1646095584932,"results":"310","hashOfConfig":"303"},{"size":1371,"mtime":1646095584919,"results":"311","hashOfConfig":"303"},{"size":812,"mtime":1646095584911,"results":"312","hashOfConfig":"303"},{"size":24256,"mtime":1646095584918,"results":"313","hashOfConfig":"303"},{"size":900,"mtime":1646095584918,"results":"314","hashOfConfig":"303"},{"size":4998,"mtime":1646179160633,"results":"315","hashOfConfig":"303"},{"size":2233,"mtime":1646095584916,"results":"316","hashOfConfig":"303"},{"size":2276,"mtime":1646095584915,"results":"317","hashOfConfig":"303"},{"size":1909,"mtime":1646095584917,"results":"318","hashOfConfig":"303"},{"size":188,"mtime":1646095584936,"results":"319","hashOfConfig":"303"},{"size":4001,"mtime":1646095584936,"results":"320","hashOfConfig":"303"},{"size":2183,"mtime":1646095584936,"results":"321","hashOfConfig":"303"},{"size":3003,"mtime":1646095584936,"results":"322","hashOfConfig":"303"},{"size":1265,"mtime":1646095584914,"results":"323","hashOfConfig":"303"},{"size":559,"mtime":1646095584893,"results":"324","hashOfConfig":"303"},{"size":358,"mtime":1646095584892,"results":"325","hashOfConfig":"303"},{"size":2010,"mtime":1646095584925,"results":"326","hashOfConfig":"303"},{"size":2045,"mtime":1646095584920,"results":"327","hashOfConfig":"303"},{"size":6005,"mtime":1646095584928,"results":"328","hashOfConfig":"303"},{"size":2049,"mtime":1646095584923,"results":"329","hashOfConfig":"303"},{"size":2497,"mtime":1646095584921,"results":"330","hashOfConfig":"303"},{"size":1525,"mtime":1646095584921,"results":"331","hashOfConfig":"303"},{"size":2822,"mtime":1646095584924,"results":"332","hashOfConfig":"303"},{"size":2466,"mtime":1646095584925,"results":"333","hashOfConfig":"303"},{"size":1635,"mtime":1646095584922,"results":"334","hashOfConfig":"303"},{"size":1661,"mtime":1646095584926,"results":"335","hashOfConfig":"303"},{"size":2125,"mtime":1646095584921,"results":"336","hashOfConfig":"303"},{"size":1985,"mtime":1646103946013,"results":"337","hashOfConfig":"303"},{"size":626,"mtime":1646095584930,"results":"338","hashOfConfig":"303"},{"size":1971,"mtime":1646095584887,"results":"339","hashOfConfig":"303"},{"size":747,"mtime":1646095584935,"results":"340","hashOfConfig":"303"},{"size":2463,"mtime":1646095584913,"results":"341","hashOfConfig":"303"},{"size":94,"mtime":1646095584904,"results":"342","hashOfConfig":"303"},{"size":2349,"mtime":1646095584912,"results":"343","hashOfConfig":"303"},{"size":976,"mtime":1646095584897,"results":"344","hashOfConfig":"303"},{"size":185,"mtime":1646095584899,"results":"345","hashOfConfig":"303"},{"size":166,"mtime":1646095584910,"results":"346","hashOfConfig":"303"},{"size":623,"mtime":1646095584938,"results":"347","hashOfConfig":"303"},{"size":353,"mtime":1646095584938,"results":"348","hashOfConfig":"303"},{"size":530,"mtime":1646095584938,"results":"349","hashOfConfig":"303"},{"size":285,"mtime":1646095584932,"results":"350","hashOfConfig":"303"},{"size":590,"mtime":1646095584934,"results":"351","hashOfConfig":"303"},{"size":65,"mtime":1646095584909,"results":"352","hashOfConfig":"303"},{"size":1260,"mtime":1646095584914,"results":"353","hashOfConfig":"303"},{"size":643,"mtime":1646095584904,"results":"354","hashOfConfig":"303"},{"size":7728,"mtime":1646095584913,"results":"355","hashOfConfig":"303"},{"size":596,"mtime":1646095584899,"results":"356","hashOfConfig":"303"},{"size":1568,"mtime":1646095584897,"results":"357","hashOfConfig":"303"},{"size":2322,"mtime":1646095584898,"results":"358","hashOfConfig":"303"},{"size":5319,"mtime":1646095584898,"results":"359","hashOfConfig":"303"},{"size":1573,"mtime":1646095584920,"results":"360","hashOfConfig":"303"},{"size":2145,"mtime":1646095584897,"results":"361","hashOfConfig":"303"},{"size":2131,"mtime":1646095584896,"results":"362","hashOfConfig":"303"},{"size":1519,"mtime":1646095584892,"results":"363","hashOfConfig":"303"},{"size":1541,"mtime":1646095584894,"results":"364","hashOfConfig":"303"},{"size":916,"mtime":1646095584894,"results":"365","hashOfConfig":"303"},{"size":1542,"mtime":1646095584896,"results":"366","hashOfConfig":"303"},{"size":2503,"mtime":1646095584896,"results":"367","hashOfConfig":"303"},{"size":52,"mtime":1646095584906,"results":"368","hashOfConfig":"303"},{"size":1567,"mtime":1646095584895,"results":"369","hashOfConfig":"303"},{"size":1668,"mtime":1646095584928,"results":"370","hashOfConfig":"303"},{"size":3109,"mtime":1646095584912,"results":"371","hashOfConfig":"303"},{"size":1396,"mtime":1646095584895,"results":"372","hashOfConfig":"303"},{"size":2115,"mtime":1646095584913,"results":"373","hashOfConfig":"303"},{"size":2411,"mtime":1646095584914,"results":"374","hashOfConfig":"303"},{"size":49,"mtime":1646095584890,"results":"375","hashOfConfig":"303"},{"size":467,"mtime":1646095584905,"results":"376","hashOfConfig":"303"},{"size":253,"mtime":1646095584887,"results":"377","hashOfConfig":"303"},{"size":59,"mtime":1646095584906,"results":"378","hashOfConfig":"303"},{"size":867,"mtime":1646095584889,"results":"379","hashOfConfig":"303"},{"size":5015,"mtime":1646095584893,"results":"380","hashOfConfig":"303"},{"size":726,"mtime":1646095584906,"results":"381","hashOfConfig":"303"},{"size":1641,"mtime":1646095584905,"results":"382","hashOfConfig":"303"},{"size":360,"mtime":1646095584935,"results":"383","hashOfConfig":"303"},{"size":774,"mtime":1646095584933,"results":"384","hashOfConfig":"303"},{"size":355,"mtime":1646095584935,"results":"385","hashOfConfig":"303"},{"size":1083,"mtime":1646095584933,"results":"386","hashOfConfig":"303"},{"size":311,"mtime":1646095584934,"results":"387","hashOfConfig":"303"},{"size":1652,"mtime":1646095584934,"results":"388","hashOfConfig":"303"},{"size":728,"mtime":1646095584934,"results":"389","hashOfConfig":"303"},{"size":830,"mtime":1646095584933,"results":"390","hashOfConfig":"303"},{"size":4486,"mtime":1646095584924,"results":"391","hashOfConfig":"303"},{"size":1909,"mtime":1646095584925,"results":"392","hashOfConfig":"303"},{"size":5158,"mtime":1646095584922,"results":"393","hashOfConfig":"303"},{"size":1957,"mtime":1646095584923,"results":"394","hashOfConfig":"303"},{"size":2076,"mtime":1646095584920,"results":"395","hashOfConfig":"303"},{"size":4358,"mtime":1646095584919,"results":"396","hashOfConfig":"303"},{"size":4344,"mtime":1646095584927,"results":"397","hashOfConfig":"303"},{"size":2083,"mtime":1646095584927,"results":"398","hashOfConfig":"303"},{"size":4350,"mtime":1646095584923,"results":"399","hashOfConfig":"303"},{"size":4380,"mtime":1646095584926,"results":"400","hashOfConfig":"303"},{"size":2019,"mtime":1646095584924,"results":"401","hashOfConfig":"303"},{"size":2046,"mtime":1646095584926,"results":"402","hashOfConfig":"303"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},"1ag39r7",{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"405"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"405"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"405"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"405"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"405"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"405"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"405"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"405"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"405"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"405"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"405"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"405"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"405"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"405"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"405"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"405"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"405"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"405"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"405"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"405"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"405"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"405"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"405"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"405"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},"1y8h0b5",{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"631"},{"filePath":"657","messages":"658","suppressedMessages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"631"},{"filePath":"664","messages":"665","suppressedMessages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"631"},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"631"},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"631"},{"filePath":"679","messages":"680","suppressedMessages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"685","messages":"686","suppressedMessages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"697","messages":"698","suppressedMessages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"700","messages":"701","suppressedMessages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"703","messages":"704","suppressedMessages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"631"},{"filePath":"706","messages":"707","suppressedMessages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"631"},{"filePath":"710","messages":"711","suppressedMessages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"631"},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"631"},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"631"},{"filePath":"720","messages":"721","suppressedMessages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"631"},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"631"},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"631"},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738","usedDeprecatedRules":"631"},{"filePath":"739","messages":"740","suppressedMessages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"631"},{"filePath":"743","messages":"744","suppressedMessages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"746","messages":"747","suppressedMessages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"749","messages":"750","suppressedMessages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"752","messages":"753","suppressedMessages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"631"},{"filePath":"759","messages":"760","suppressedMessages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"631"},{"filePath":"766","messages":"767","suppressedMessages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"769","messages":"770","suppressedMessages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"772","messages":"773","suppressedMessages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"775","messages":"776","suppressedMessages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"778","messages":"779","suppressedMessages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"781","messages":"782","suppressedMessages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"784","messages":"785","suppressedMessages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"787","messages":"788","suppressedMessages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"790","messages":"791","suppressedMessages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"793","messages":"794","suppressedMessages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"796","messages":"797","suppressedMessages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"805","messages":"806","suppressedMessages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"808","messages":"809","suppressedMessages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"811","messages":"812","suppressedMessages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"814","messages":"815","suppressedMessages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"817","messages":"818","suppressedMessages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"820","messages":"821","suppressedMessages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"823","messages":"824","suppressedMessages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"826","messages":"827","suppressedMessages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"829","messages":"830","suppressedMessages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"832","messages":"833","suppressedMessages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"835","messages":"836","suppressedMessages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"838","messages":"839","suppressedMessages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"841","messages":"842","suppressedMessages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"844","messages":"845","suppressedMessages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"631"},{"filePath":"848","messages":"849","suppressedMessages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"851","messages":"852","suppressedMessages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"854","messages":"855","suppressedMessages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"857","messages":"858","suppressedMessages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"860","messages":"861","suppressedMessages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"863","messages":"864","suppressedMessages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"866","messages":"867","suppressedMessages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"869","messages":"870","suppressedMessages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"872","messages":"873","suppressedMessages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"875","messages":"876","suppressedMessages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"878","messages":"879","suppressedMessages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"881","messages":"882","suppressedMessages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"884","messages":"885","suppressedMessages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"887","messages":"888","suppressedMessages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"890","messages":"891","suppressedMessages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"893","messages":"894","suppressedMessages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"896","messages":"897","suppressedMessages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"899","messages":"900","suppressedMessages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"902","messages":"903","suppressedMessages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"905","messages":"906","suppressedMessages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"631"},{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"631"},{"filePath":"912","messages":"913","suppressedMessages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"631"},{"filePath":"915","messages":"916","suppressedMessages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"631"},{"filePath":"919","messages":"920","suppressedMessages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"631"},{"filePath":"922","messages":"923","suppressedMessages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"631"},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"631"},{"filePath":"930","messages":"931","suppressedMessages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"631"},{"filePath":"934","messages":"935","suppressedMessages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"631"},{"filePath":"938","messages":"939","suppressedMessages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"631"},{"filePath":"942","messages":"943","suppressedMessages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"631"},{"filePath":"946","messages":"947","suppressedMessages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"631"},{"filePath":"950","messages":"951","suppressedMessages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"631"},"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\index.js",[],["954","955","956","957","958","959"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\serviceWorker.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\App.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\routes.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\globalStyles.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\BaseOptionChart.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\ScrollToTop.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\LogoOnlyLayout.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SensorData.js",["960","961","962","963","964","965","966","967","968"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../components/_dashboard/blog';\n//\nimport POSTS from '../_mocks_/blog';\nimport DataTabs from './Widgets/AppDataTabs';\n\nexport default function SensorData() {\n  return (\n    <Page title=\"Sensor Data\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Sensor Data\n          </Typography>\n        </Stack>\n        <DataTabs />\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SystemHealth.js",["969","970","971","972"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\n\nimport CpuTemp from './Widgets/AppCpuTemp';\nimport RamUsage from './Widgets/AppRamUsage';\nimport GpuTemp from './Widgets/AppGpuTemp';\nimport HealthGrid from './Widgets/HealthGrid';\n\nexport default function SystemHealth() {\n  return (\n    <Page title=\"System Health\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            System Health and Monitoring\n          </Typography>\n        </Stack>\n        <Grid container spacing={{ xs: 1, sm: 2, lg: 3 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n          <Grid item xs={12} md={6} lg={2.6}>\n            <CpuTemp />\n          </Grid>\n          <Grid item xs={12} md={6} lg={2.6}>\n            <GpuTemp />\n          </Grid>\n          <Grid item xs={12} md={6} lg={2.6}>\n            <RamUsage />\n          </Grid>\n          <Grid item xs={8}>\n            <HealthGrid />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\EventViewer.js",["973","974","975","976","977","978"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  { id: 'Event', label: 'Event', minWidth: 300 },\n  {\n    id: 'Type',\n    label: 'Type',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'Severity',\n    label: 'Severity',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'datetime',\n    label: 'Date/Time',\n    minWidth: 170,\n    align: 'right'\n  }\n];\n\nfunction createData(Event, Type, Severity, datetime) {\n  return { Event, Type, Severity, datetime };\n}\n\nconst rows = [\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  )\n];\n\n// ----------------------------------------------------------------------\n\nexport default function EventViewer() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Page title=\"Event Viewer\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Event Viewer\n          </Typography>\n        </Stack>\n        <Paper sx={{ width: '100%', overflow: 'hidden' }} style={{ backgroundColor: '#1f2833' }}>\n          <TableContainer sx={{ minHeight: 693 }}>\n            <Table stickyHeader aria-label=\"sticky table\" style={{ backgroundColor: '#c5c6c7' }}>\n              <TableHead style={{ backgroundColor: '#c5c6c7' }}>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{\n                        minWidth: column.minWidth,\n                        color: '#fff',\n                        backgroundColor: '#45a29e',\n                        fontWeight: 'bolder'\n                      }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell\n                          key={column.id}\n                          align={column.align}\n                          style={{\n                            minWidth: column.minWidth,\n                            color: '#45a29e',\n                            backgroundColor: '#1f2833',\n                            fontSize: '1.2em',\n                            fontFamily: 'monospace'\n                          }}\n                        >\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            style={{\n              color: '#45a29e',\n              backgroundColor: '#1f2833',\n              fontSize: '1.2em',\n              fontFamily: 'monospace'\n            }}\n          />\n        </Paper>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Settings.js",["979","980","981","982","983","984","985","986","987","988","989","990"],"/* eslint-disable react/no-unused-state */\nimport { Icon } from '@iconify/react';\nimport { Link } from 'react-router-dom';\nimport React, { Component, useState, useEffect } from 'react';\nimport Axios from 'axios';\n\n// material\nimport {\n  Grid,\n  Button,\n  Container,\n  Stack,\n  Typography,\n  Slider,\n  Divider,\n  FormGroup,\n  FormControlLabel,\n  Switch,\n  TextField\n} from '@mui/material';\n// components\nimport Tooltip from '@mui/material/Tooltip';\nimport { Box, maxHeight } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport DataService from '../services/db.services';\nimport Page from '../components/Page';\n\nconst marks = [\n  {\n    value: 0,\n    label: '0%'\n  },\n  {\n    value: 20,\n    label: '20%'\n  },\n  {\n    value: 40,\n    label: '40%'\n  },\n  {\n    value: 60,\n    label: '60%'\n  },\n  {\n    value: 80,\n    label: '80%'\n  },\n  {\n    value: 100,\n    label: '100%'\n  }\n];\n\nexport default function Settings() {\n  const [PCBLEDS, setPCBLEDS] = useState(''); // PCB leds on/off\n  const [FRONTLEDS, setFRONTLEDS] = useState(''); // front leds on/off\n  const [COMMLEDS, setCOMMLEDS] = useState(''); // communication Ai on/off\n  const [BEACONLED, setBEACONLED] = useState(''); // beacon led on/off\n\n  const [CONVAI, setCONVAI] = useState(''); // conversationnal ai on/off\n  const [ORECOGN, setORECOGN] = useState(''); // object recognition on/off\n  const [HRECOGN, setHRECOGN] = useState(''); // human recognition on/off\n  const [EMAPPING, setEMAPPING] = useState(''); // environement mapping on/off\n\n  const [FCOLLISION, setFCOLLISION] = useState(''); // front collision sensing on/off\n  const [SCOLLISION, setSCOLLISION] = useState(''); // side collision sensing on/off\n  const [FEDGESENSNG, setFEDGESENSNG] = useState(''); // front edge sensing on/off\n  const [BEDGESENSNG, setBEDGESENSNG] = useState(''); // back edge sensing on/off\n\n  const [GAS, setGAS] = useState(''); // front collision sensing on/off\n  const [TEMPERATURE, setTEMPERATURE] = useState(''); // side collision sensing on/off\n  const [HUMIDITY, setHUMIDITY] = useState(''); // front edge sensing on/off\n  const [TILT, setTILT] = useState(''); // back edge sensing on/off\n  const [PHOTORES, setPHOTORES] = useState(''); // front collision sensing on/off\n  const [FLAME, setFLAME] = useState(''); // side collision sensing on/off\n  const [SMOKE, setSMOKE] = useState(''); // front edge sensing on/off\n  const [GPS, setGPS] = useState(''); // back edge sensing on/off\n\n  const sumbitSettings = () => {\n    // eslint-disable-next-line prettier/prettier\n    Axios.post(\"http://localhost:3001/api/SubtmitSettings\", {\n      FLED: FRONTLEDS,\n      PCBLED: PCBLEDS,\n      COMMLED: COMMLEDS,\n      BEACON: BEACONLED,\n\n      CONVAII: CONVAI,\n      ORECOGNN: ORECOGN,\n      HRECOGNN: HRECOGN,\n      EMAPPINGG: EMAPPING,\n\n      FCOLLISIONN: FCOLLISION,\n      SCOLLISIONN: SCOLLISION,\n      FEDGESENSNGG: FEDGESENSNG,\n      BEDGESENSNGG: BEDGESENSNG,\n\n      GASS: GAS,\n      TEMPERATUREE: TEMPERATURE,\n      HUMIDITYY: HUMIDITY,\n      TILTT: TILT,\n      PHOTORESS: PHOTORES,\n      FLAMEE: FLAME,\n      SMOKEE: SMOKE,\n      GPSS: GPS\n    }).then(() => {\n      alert('success!');\n    });\n  };\n\n  return (\n    <Page title=\"Settings\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={0}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Settings\n          </Typography>\n        </Stack>\n        <Container maxWidth=\"xl\">\n          <Grid paddingTop={1}>\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Lights & Leds\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Front Lights 12V\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setFRONTLEDS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    color=\"red\"\n                    style={{ color: '#fff', alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Top Pcb Status LEDs\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setPCBLEDS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Serial Communication LEDs\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setCOMMLEDS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Beacon LED\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setBEACONLED(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid paddingTop={1}>\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Artificial Intelligence\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Conversational AI\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setCONVAI(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Object Recognition\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setORECOGN(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Human Recognition\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setHRECOGN(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Environment Mapping\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setEMAPPING(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid paddingTop={1}>\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Collision & Edge Detection\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Front Collision Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setFCOLLISION(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Side Collision Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setSCOLLISION(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Front Edge Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setFEDGESENSNG(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Back Edge Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setBEDGESENSNG(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid\n            paddingTop={1}\n            style={{\n              overflow: 'hidden'\n            }}\n          >\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Sensors\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Gas\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setGAS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Temperature\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setTEMPERATURE(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Humidity\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setHUMIDITY(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Tilt\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setTILT(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Photoresistor\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setPHOTORES(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Flame\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setFLAME(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Smoke\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setSMOKE(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    GPS\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setGPS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid container paddingTop={2}>\n            <Divider orientation=\"horizontal\" flexItem />\n\n            <Grid item xs={12} style={{ color: '#fff' }} align=\"center\">\n              <Button\n                onClick={sumbitSettings}\n                color=\"primary\"\n                variant=\"contained\"\n                style={{\n                  color: '#fff',\n                  fontWeight: 'bolder',\n                  fontSize: '1.1em',\n                  backgroundColor: '#45a29e',\n                  maxWidth: '300px',\n                  maxHeight: '30px',\n                  minWidth: '150px',\n                  minHeight: '55px',\n                  top: '38px',\n                  boxShadow: 'none'\n                }}\n              >\n                Submit Changes\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\DashboardApp.js",["991"],"// material\nimport { Box, Grid, Container, Typography, Stack, item } from '@mui/material';\n\n// components\nimport Page from '../components/Page';\nimport { AppWebsiteVisits, AppWarningsReports } from '../components/_dashboard/app';\nimport AppSuccessReports from './Widgets/AppSuccessReports';\nimport CurrentTask from './Widgets/AppCurrentTask';\nimport LinearWithValueLabel from './Widgets/AppRessourceMonitor';\nimport AppErrorReports from './Widgets/AppErrorReports';\nimport AppLatestEvent from './Widgets/AppLatestEvent';\nimport AppDistributionOfTime from './Widgets/AppDistributionOfTime';\nimport AppDistributionOfTask from './Widgets/AppDistributionOfTask';\n// ----------------------------------------------------------------------\n\nexport default function DashboardApp() {\n  return (\n    <Page title=\"Dashboard\">\n      <Container maxWidth=\"xl\">\n        <Box sx={{ pb: 5 }}>\n          <Typography style={{ color: '#66fcf1' }} variant=\"h4\">\n            Hi Félix, Here's whats happening!\n          </Typography>\n        </Box>\n\n        <Grid container spacing={{ xs: 1, sm: 2, lg: 3 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n          <Grid item xs={1} sm={1} md={1}>\n            <Stack spacing={2}>\n              <item>\n                <AppErrorReports />\n              </item>\n              <item>\n                <AppWarningsReports />\n              </item>\n              <item>\n                <AppSuccessReports />\n              </item>\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <AppLatestEvent />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={3}>\n            <Stack spacing={2}>\n              <item>\n                <LinearWithValueLabel />\n              </item>\n              <item>\n                <CurrentTask />\n              </item>\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={9}>\n            <AppWebsiteVisits />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <AppDistributionOfTime />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <AppDistributionOfTask />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Page404.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\LiveCamera.js",["992","993","994","995","996","997","998"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Grid, Button, Container, Stack, Typography, TextField, Divider } from '@mui/material';\n// components\nimport { Joystick } from 'react-joystick-component';\n\nimport SendIcon from '@mui/icons-material/Send';\nimport Page from '../components/Page';\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../components/_dashboard/blog';\nimport Image from './dummy.png'; // Import using relative path\n\nexport default function LiveCamera() {\n  return (\n    <Page title=\"Live View\">\n      <Container maxWidth=\"xl\" overflow=\"hidden\" minHeight=\"1800px\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={0}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Live View\n          </Typography>\n        </Stack>\n        <Grid container columns={{ xs: 8, sm: 8, md: 8, lg: 8 }} minHeight=\"769px\">\n          <Grid\n            item\n            xs={8}\n            style={{\n              minWidth: '1296px',\n              minHeight: '729px',\n              maxHeight: '729px',\n              backgroundImage: `url(${Image})`\n            }}\n          >\n            <Grid xs={1} style={{ top: '525px', left: '3.6%', position: 'relative' }}>\n              <Joystick size={150} baseColor=\"#45a29e\" stickColor=\"#c5c6c7\" />\n            </Grid>\n            <Grid xs={1} style={{ top: '81%', left: '57.5%', position: 'relative' }}>\n              <TextField\n                style={{\n                  maxWidth: '500px',\n                  minWidth: '450px'\n                }}\n                color=\"primary\"\n                textInputStyle={{ color: 'green' }}\n                label=\"Command\"\n              />\n            </Grid>\n            <Grid xs={1} style={{ top: '75%', left: '88.5%', position: 'relative' }}>\n              <Button variant=\"contained\" endIcon={<SendIcon />} style={{ boxShadow: 'none' }}>\n                Send Command\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\palette.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\typography.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shape.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shadows.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Logo.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Page.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\blog.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRamUsage.js",["999"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: 'Robot Sensors',\r\n    type: 'line',\r\n    data: [30, 52, 59, 36, 25, 36, 30, 45, 35, 64, 39]\r\n  }\r\n];\r\n\r\nexport default function RamUsage() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader title=\"Ram Usage  over Time\" style={{ color: '#45a29e', textAlign: 'center' }} />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGpuTemp.js",["1000"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: 'Robot Sensors',\r\n    type: 'line',\r\n    data: [36, 30, 45, 35, 64, 52, 30, 25, 59, 36, 39]\r\n  }\r\n];\r\n\r\nexport default function GpuTemp() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Graphics Card Temperature over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'center' }}\r\n      />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDataTabs.js",["1001","1002","1003","1004"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport SendIcon from '@mui/icons-material/Send';\nimport Refresh from '@iconify/icons-eva/refresh-fill';\nimport { Button, Icon } from '@mui/material';\nimport AppTempSensor from './AppTempSensor';\nimport AppHumiditySensor from './AppHumiditySensor';\nimport AppTemperatureGrids from './AppTemperatureGrids';\nimport AppHumidityGrids from './AppHumidityGrid';\nimport AppVoltageSensor from './AppVoltageSensor';\nimport AppVoltageGrids from './AppVoltageGrid';\nimport AppAmperageGrids from './AppAmperageGrid';\nimport AppAmperageSensor from './AppAmperageSensor';\nimport AppGassSensor from './AppGasSensor';\nimport AppGasGrids from './AppGasGrid';\nimport AppPhotoresistorSensor from './AppPhotoresistorSensor';\nimport AppPhotoresistorGrid from './AppPhotoresistorGrid';\n\nexport default function DataTabs() {\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab label=\"Temperature\" value=\"1\" />\n            <Tab label=\"Humidity\" value=\"2\" />\n            <Tab label=\"Voltage\" value=\"3\" />\n            <Tab label=\"Amperage\" value=\"4\" />\n            <Tab label=\"Gas\" value=\"5\" />\n            <Tab label=\"Photoresistor\" value=\"6\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"1\">\n          <AppTempSensor />\n          <AppTemperatureGrids />\n        </TabPanel>\n        <TabPanel value=\"2\">\n          <AppHumiditySensor />\n          <AppHumidityGrids />\n        </TabPanel>\n        <TabPanel value=\"3\">\n          <AppVoltageSensor />\n          <AppVoltageGrids />\n        </TabPanel>\n        <TabPanel value=\"4\">\n          <AppAmperageSensor />\n          <AppAmperageGrids />\n        </TabPanel>\n        <TabPanel value=\"5\">\n          <AppGassSensor />\n          <AppGasGrids />\n        </TabPanel>\n        <TabPanel value=\"6\">\n          <AppPhotoresistorSensor />\n          <AppPhotoresistorGrid />\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppSuccessReports.js",["1005"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRessourceMonitor.js",["1006","1007","1008","1009"],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nimport { Icon } from '@iconify/react';\nimport bugFilled from '@iconify/icons-ant-design/bug-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../utils/formatNumber';\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress\n          variant=\"determinate\"\n          {...props}\n          style={{ padding: '15px' }}\n          color=\"inherit\"\n        />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography\n          style={{ color: '#66fcf1' }}\n          variant=\"body2\"\n          color=\"text.secondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  padding: theme.spacing(2.3, 2.7),\n  color: '#66fcf1',\n  backgroundColor: '#1f2833'\n}));\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired\n};\n\nexport default function LinearWithValueLabel() {\n  return (\n    <RootStyle>\n      <Typography\n        variant=\"h5\"\n        sx={{ opacity: 1 }}\n        style={{ fontWeight: 'bold', textAlign: 'Left' }}\n      >\n        Ressource Monitor\n      </Typography>\n      <Box sx={{ width: '100%' }}>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n          CPU:\n        </Typography>\n        <LinearProgressWithLabel value={40} />\n      </Box>\n      <Box sx={{ width: '100%' }}>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n          GPU:\n        </Typography>\n        <LinearProgressWithLabel value={90} />\n      </Box>\n      <Box sx={{ width: '100%' }}>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n          RAM:\n        </Typography>\n        <LinearProgressWithLabel value={30} />\n      </Box>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\HealthGrid.js",["1010","1011","1012","1013","1014","1015"],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Page from '../../components/Page';\r\n\r\nconst ram1 = 6.2;\r\nconst ram2 = 5.8;\r\nconst cpu1 = 43;\r\nconst cpu2 = 51;\r\nconst gpu1 = 48;\r\nconst gpu2 = 57;\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '33%',\r\n  height: '129px',\r\n  backgroundColor: 'transparent',\r\n  overflow: 'hidden'\r\n}));\r\nexport default function HealthGrid() {\r\n  return (\r\n    <Page overflow=\"hidden\">\r\n      <Container maxWidth=\"xl\" overflow=\"hidden\">\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2 }}\r\n          columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}\r\n          overflow=\"hidden\"\r\n        >\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Cpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {cpu1}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Gpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {gpu1}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Ram Usage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {ram1}Gb\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Cpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {cpu2}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Gpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {gpu2}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Ram usage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {ram2}Gb\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCpuTemp.js",["1016"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: 'Robot Sensors',\n    type: 'line',\n    data: [35, 64, 52, 59, 30, 25, 36, 36, 30, 45, 39]\n  }\n];\n\nexport default function CpuTemp() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 10,\n            color: '#ff4747',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 60,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#47edff',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Processor Temperature over Time\"\n        style={{ color: '#45a29e', textAlign: 'center' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCurrentTask.js",["1017","1018","1019","1020"],"import { Icon } from '@iconify/react';\nimport alerttrianglefill from '@iconify/icons-eva/alert-triangle-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, CircularProgress, Typography } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'Left',\n  padding: theme.spacing(4.4, 3),\n  color: '#66fcf1',\n  backgroundColor: '#1f2833'\n}));\n\n// ----------------------------------------------------------------------\nconst current = 'Moving to Target location';\nconst next = 'Analysing Target';\n\nexport default function CurrentTask() {\n  return (\n    <RootStyle>\n      <Typography variant=\"h5\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n        Current Task:\n      </Typography>\n\n      <Typography variant=\"h4\" style={{ color: '#45a29e', padding: (5, 5) }}>\n        {current}{' '}\n        <CircularProgress\n          variant=\"indeterminate\"\n          disableShrink\n          size={18}\n          thickness={4}\n          style={{ color: '#66fcf1' }}\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n        Next Task:\n      </Typography>\n\n      <Typography variant=\"h4\" style={{ color: '#45a29e', padding: (5, 5) }}>\n        {next}\n      </Typography>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppLatestEvent.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppErrorReports.js",["1021"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTask.js",["1022"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Card, CardHeader } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_HEIGHT = 392;\nconst LEGEND_HEIGHT = 72;\n\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\n  height: CHART_HEIGHT,\n  marginTop: theme.spacing(2),\n  '& .apexcharts-canvas svg': {\n    height: CHART_HEIGHT\n  },\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\n    overflow: 'visible'\n  },\n  '& .apexcharts-legend': {\n    height: LEGEND_HEIGHT,\n    alignContent: 'center',\n    position: 'relative !important',\n    borderTop: `solid 1px ${theme.palette.divider}`,\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [{ name: 'Series 1', data: [80, 50, 30, 40, 100, 20] }];\n\nexport default function AppDistributionOfTask() {\n  const theme = useTheme();\n\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: {\n      width: 2,\n      colors: ['#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1']\n    },\n    fill: {\n      opacity: 0.7,\n      colors: ['#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e']\n    },\n    legend: { floating: true, horizontalAlign: 'center' },\n    xaxis: {\n      categories: ['Standby', 'Talking', 'Confused', 'Thinking', 'Moving', 'In Error'],\n      labels: {\n        style: {\n          colors: ['#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e']\n        }\n      }\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', color: '#66fcf1', boxShadow: 'none' }}>\n      <CardHeader title=\"Distribution of Tasks\" />\n      <ChartWrapperStyle dir=\"ltr\">\n        <ReactApexChart type=\"radar\" series={CHART_DATA} options={chartOptions} height={380} />\n      </ChartWrapperStyle>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTime.js",["1023"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Card, CardHeader } from '@mui/material';\n// utils\nimport { fNumber } from '../../utils/formatNumber';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_HEIGHT = 372;\nconst LEGEND_HEIGHT = 0;\n\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\n  height: CHART_HEIGHT,\n  marginTop: theme.spacing(5),\n  '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\n    overflow: 'visible'\n  },\n  '& .apexcharts-legend': {\n    height: LEGEND_HEIGHT,\n    alignContent: 'center',\n    position: 'relative !important',\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [4344, 5435, 1443, 4443];\n\nexport default function AppDistributionOfTime() {\n  const chartOptions = merge(BaseOptionChart(), {\n    colors: ['#45a29e', '#91dbd5', '#1bf5e3', '#28bdb2'],\n    labels: ['Path Finding', 'Moving', 'Standby', 'Turning'],\n    legend: { show: false },\n    dataLabels: { enabled: true },\n    tooltip: {\n      fillSeriesColor: false,\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: (seriesName) => `${seriesName}`\n        }\n      }\n    },\n    plotOptions: {\n      pie: { donut: { labels: { show: false } } }\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', color: '#66fcf1', boxShadow: 'none' }}>\n      <CardHeader title=\"Distribution of Time\" />\n      <ChartWrapperStyle dir=\"ltr\">\n        <ReactApexChart type=\"pie\" series={CHART_DATA} options={chartOptions} height={360} />\n      </ChartWrapperStyle>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardNavbar.js",["1024","1025","1026","1027","1028"],"import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Icon } from '@iconify/react';\nimport BellFill from '@iconify/icons-eva/bell-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Stack, AppBar, Toolbar, IconButton, Badge } from '@mui/material';\n// components\nimport { useNavigate } from 'react-router-dom';\nimport { MHidden } from '../../components/@material-extend';\n//\nimport Searchbar from './Searchbar';\nimport AccountPopover from './AccountPopover';\nimport LanguagePopover from './LanguagePopover';\nimport NotificationsPopover from './NotificationsPopover';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\nconst APPBAR_MOBILE = 64;\nconst APPBAR_DESKTOP = 92;\n\nconst RootStyle = styled(AppBar)(({ theme }) => ({\n  boxShadow: 'none',\n  backdropFilter: 'blur(6px)',\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n  backgroundColor: '#1f2833',\n  [theme.breakpoints.up('lg')]: {\n    width: `calc(100% - ${DRAWER_WIDTH + 1}px)`\n  }\n}));\n\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\n  minHeight: APPBAR_MOBILE,\n  [theme.breakpoints.up('lg')]: {\n    minHeight: APPBAR_DESKTOP,\n    padding: theme.spacing(0, 5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardNavbar.propTypes = {\n  onOpenSidebar: PropTypes.func\n};\n\nexport default function DashboardNavbar({ onOpenSidebar }) {\n  const navigate = useNavigate();\n\n  function handleClick() {\n    navigate('/dashboard/EventViewer');\n  }\n  return (\n    <RootStyle>\n      <ToolbarStyle>\n        <MHidden width=\"lgUp\">\n          <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\n            <Icon icon={BellFill} />\n          </IconButton>\n        </MHidden>\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={{ xs: 0.5, sm: 1.5 }}>\n          <IconButton\n            aria-label=\"Notifications\"\n            onClick={() => {\n              handleClick();\n            }}\n          >\n            <Badge badgeContent={99} color=\"secondary\">\n              <Icon icon={BellFill} />\n            </Badge>\n          </IconButton>\n        </Stack>\n      </ToolbarStyle>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardSidebar.js",["1029","1030","1031","1032","1033"],"import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\n// components\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\nimport { MHidden } from '../../components/@material-extend';\n//\nimport sidebarConfig from './SidebarConfig';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH,\n    backgroundColor: 'red'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\n\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: '100%',\n        '& .simplebar-content': { height: '100%', display: 'flex', flexDirection: 'column' }\n      }}\n    >\n      <Box sx={{ px: 2.5, py: 3 }}>\n        <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\n          <Logo />\n        </Box>\n      </Box>\n\n      <NavSection navConfig={sidebarConfig} />\n\n      <Box sx={{ flexGrow: 1 }} />\n    </Scrollbar>\n  );\n  return (\n    <RootStyle style={{ backgroundColor: '#1f2833' }}>\n      <MHidden width=\"lgUp\">\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      <MHidden width=\"lgDown\">\n        <Drawer\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: DRAWER_WIDTH,\n              bgcolor: '#1f2833'\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatNumber.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\mockImages.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatTime.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Autocomplete.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\NotificationsPopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\SidebarConfig.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\MotionContainer.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppWeeklySales.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSort.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTrafficBySite.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppBugsOverTime.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTasks.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewUsers.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewsUpdate.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\MenuPopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Scrollbar.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\Wrap.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceOut.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceIn.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppItemOrders.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppConversionRates.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppWarningsReports.js",["1034"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostCard.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\NavSection.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\LanguagePopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\AccountPopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\Searchbar.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\SvgIconStyle.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\account.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\MHidden.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\IconButton.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Typography.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Backdrop.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Tooltip.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Button.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Input.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Paper.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Lists.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Card.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorGrid.js",["1035","1036","1037","1038","1039","1040","1041","1042","1043"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorSensor.js",["1044","1045","1046"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography, Button } from '@mui/material';\r\n//\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Luminosity (Lm)',\r\n    type: 'line',\r\n    data: [400, 725, 536, 730, 645, 735, 564, 552, 659, 536, 639]\r\n  }\r\n];\r\n\r\nexport default function AppPhotoresistorSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 1,\r\n            color: '#fff',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 100,\r\n            color: '#000000',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Luminosity (Lm) over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'Left' }}\r\n      />\r\n\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasGrid.js",["1047","1048","1049","1050","1051","1052"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasSensor.js",["1053"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Gas 1',\r\n    type: 'line',\r\n    data: [1100, 8000, 11000, 12500, 13500, 9500, 3500, 17400, 6300, 3200, 15500]\r\n  },\r\n  {\r\n    name: ' Gas 2',\r\n    type: 'line',\r\n    data: [17400, 6300, 3200, 1100, 8000, 11000, 12500, 13500, 9500, 3500, 15500]\r\n  },\r\n  {\r\n    name: ' Gas 3',\r\n    type: 'line',\r\n    data: [3500, 15500, 17400, 12500, 13500, 9500, 6300, 3200, 1100, 8000, 11000]\r\n  },\r\n  {\r\n    name: ' Gas 4',\r\n    type: 'line',\r\n    data: [12500, 13500, 9500, 6300, 3500, 15500, 17400, 3200, 1100, 8000, 11000]\r\n  },\r\n  {\r\n    name: ' Gas 5',\r\n    type: 'line',\r\n    data: [9500, 6300, 3200, 1100, 8000, 3500, 15500, 17400, 12500, 13500, 11000]\r\n  }\r\n];\r\n\r\nexport default function AppGasSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    legend: { show: false },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader title=\"Gas Particles (%)\" style={{ color: '#45a29e', textAlign: 'Left' }} />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageSensor.js",["1054"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Power Draw (mW)',\n    type: 'line',\n    data: [12500, 13500, 9500, 3500, 15500, 17400, 6300, 3200, 1100, 8000, 11000]\n  }\n];\n\nexport default function AppAmperageSensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 0,\n            color: '#ff4747',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 70,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#4cd93d',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Power Draw (mW) over Time\"\n        style={{ color: '#45a29e', textAlign: 'Left' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageGrid.js",["1055","1056","1057","1058","1059","1060"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageGrid.js",["1061","1062","1063","1064","1065","1066"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageSensor.js",["1067"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Voltage (mV)',\n    type: 'line',\n    data: [13500, 13500, 13500, 13500, 13500, 13400, 13300, 13200, 13100, 13000, 11000]\n  }\n];\n\nexport default function AppVoltageSensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 0,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 10,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '#ff4747',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Battery Voltage (mV) over Time\"\n        style={{ color: '#45a29e', textAlign: 'Left' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumidityGrid.js",["1068","1069","1070","1071","1072","1073"],"import {\n  Grid,\n  Button,\n  Container,\n  Stack,\n  Typography,\n  TextField,\n  Divider,\n  Card\n} from '@mui/material';\n// components\n\nimport { alpha, styled } from '@mui/material/styles';\nimport Axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Page from '../../components/Page';\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  color: '#000000',\n  width: '25%',\n  height: '169px',\n  backgroundColor: 'transparent'\n}));\nexport default function AppHumidityGrids() {\n  const [MIN, setMIN] = useState('');\n  const [AVG, setAVG] = useState('');\n  const [MAX, setMAX] = useState('');\n  const [CURRENT, setCURRENT] = useState('');\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/getHumidity').then((response) => {\n      setAVG(response.data.at(0).AVERAGE);\n      setMIN(response.data.at(0).MINIMUM);\n      setMAX(response.data.at(0).MAXIMUM);\n      setCURRENT(response.data.at(0).CURRENT);\n    });\n  }, []);\n  return (\n    <Page>\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Current Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {CURRENT}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Minimum Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {MIN}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Average Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {AVG}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Maximum Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {MAX}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTemperatureGrids.js",["1074","1075","1076","1077","1078","1079"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTempSensor.js",["1080"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Temperature (C)',\n    type: 'line',\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n  }\n];\n\nexport default function AppTempSensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 10,\n            color: '#ff4747',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 60,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#47edff',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Temperature (C) over Time\"\n        style={{ color: '#45a29e', textAlign: 'Left' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumiditySensor.js",["1081"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Humidity (%)',\n    type: 'line',\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n  }\n];\n\nexport default function AppHumiditySensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 10,\n            color: '#47edff',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 60,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#ff4747',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader title=\"Humidity (%) over Time\" style={{ color: '#45a29e', textAlign: 'Left' }} />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\services\\db.services.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\http-common.js",[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\index.js",[],[],["1082","1083","1084","1085","1086"],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\serviceWorker.js",[],["1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\App.js",[],["1100"],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\routes.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\globalStyles.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\ScrollToTop.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\charts\\BaseOptionChart.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\SystemHealth.js",["1101","1102","1103","1104"],[],"import { Icon } from '@iconify/react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\r\n// components\r\nimport Page from '../components/Page';\r\n\r\nimport CpuTemp from './Widgets/AppCpuTemp';\r\nimport RamUsage from './Widgets/AppRamUsage';\r\nimport GpuTemp from './Widgets/AppGpuTemp';\r\nimport HealthGrid from './Widgets/HealthGrid';\r\n\r\nexport default function SystemHealth() {\r\n  return (\r\n    <Page title=\"System Health\">\r\n      <Container maxWidth=\"xl\">\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\r\n            System Health and Monitoring\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container spacing={{ xs: 1, sm: 2, lg: 3 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <Grid item xs={12} md={6} lg={2.6}>\r\n            <CpuTemp />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={2.6}>\r\n            <GpuTemp />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={2.6}>\r\n            <RamUsage />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <HealthGrid />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\LogoOnlyLayout.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Settings.js",["1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116"],["1117"],"/* eslint-disable react/no-unused-state */\r\nimport { Icon } from '@iconify/react';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\n// material\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  Slider,\r\n  Divider,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField\r\n} from '@mui/material';\r\n// components\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { Box, maxHeight } from '@mui/system';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport DataService from '../services/db.services';\r\nimport Page from '../components/Page';\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: '0%'\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20%'\r\n  },\r\n  {\r\n    value: 40,\r\n    label: '40%'\r\n  },\r\n  {\r\n    value: 60,\r\n    label: '60%'\r\n  },\r\n  {\r\n    value: 80,\r\n    label: '80%'\r\n  },\r\n  {\r\n    value: 100,\r\n    label: '100%'\r\n  }\r\n];\r\n\r\nexport default function Settings() {\r\n  const [PCBLEDS, setPCBLEDS] = useState(''); // PCB leds on/off\r\n  const [FRONTLEDS, setFRONTLEDS] = useState(''); // front leds on/off\r\n  const [COMMLEDS, setCOMMLEDS] = useState(''); // communication Ai on/off\r\n  const [BEACONLED, setBEACONLED] = useState(''); // beacon led on/off\r\n\r\n  const [CONVAI, setCONVAI] = useState(''); // conversationnal ai on/off\r\n  const [ORECOGN, setORECOGN] = useState(''); // object recognition on/off\r\n  const [HRECOGN, setHRECOGN] = useState(''); // human recognition on/off\r\n  const [EMAPPING, setEMAPPING] = useState(''); // environement mapping on/off\r\n\r\n  const [FCOLLISION, setFCOLLISION] = useState(''); // front collision sensing on/off\r\n  const [SCOLLISION, setSCOLLISION] = useState(''); // side collision sensing on/off\r\n  const [FEDGESENSNG, setFEDGESENSNG] = useState(''); // front edge sensing on/off\r\n  const [BEDGESENSNG, setBEDGESENSNG] = useState(''); // back edge sensing on/off\r\n\r\n  const [GAS, setGAS] = useState(''); // front collision sensing on/off\r\n  const [TEMPERATURE, setTEMPERATURE] = useState(''); // side collision sensing on/off\r\n  const [HUMIDITY, setHUMIDITY] = useState(''); // front edge sensing on/off\r\n  const [TILT, setTILT] = useState(''); // back edge sensing on/off\r\n  const [PHOTORES, setPHOTORES] = useState(''); // front collision sensing on/off\r\n  const [FLAME, setFLAME] = useState(''); // side collision sensing on/off\r\n  const [SMOKE, setSMOKE] = useState(''); // front edge sensing on/off\r\n  const [GPS, setGPS] = useState(''); // back edge sensing on/off\r\n\r\n  const sumbitSettings = () => {\r\n    // eslint-disable-next-line prettier/prettier\r\n    Axios.post(\"http://localhost:3001/api/SubtmitSettings\", {\r\n      FLED: FRONTLEDS,\r\n      PCBLED: PCBLEDS,\r\n      COMMLED: COMMLEDS,\r\n      BEACON: BEACONLED,\r\n\r\n      CONVAII: CONVAI,\r\n      ORECOGNN: ORECOGN,\r\n      HRECOGNN: HRECOGN,\r\n      EMAPPINGG: EMAPPING,\r\n\r\n      FCOLLISIONN: FCOLLISION,\r\n      SCOLLISIONN: SCOLLISION,\r\n      FEDGESENSNGG: FEDGESENSNG,\r\n      BEDGESENSNGG: BEDGESENSNG,\r\n\r\n      GASS: GAS,\r\n      TEMPERATUREE: TEMPERATURE,\r\n      HUMIDITYY: HUMIDITY,\r\n      TILTT: TILT,\r\n      PHOTORESS: PHOTORES,\r\n      FLAMEE: FLAME,\r\n      SMOKEE: SMOKE,\r\n      GPSS: GPS\r\n    }).then(() => {\r\n      alert('success!');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Settings\">\r\n      <Container maxWidth=\"xl\">\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={0}>\r\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\r\n            Settings\r\n          </Typography>\r\n        </Stack>\r\n        <Container maxWidth=\"xl\">\r\n          <Grid paddingTop={1}>\r\n            <Divider>\r\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                Lights & Leds\r\n              </Typography>\r\n            </Divider>\r\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Front Lights 12V\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setFRONTLEDS(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    color=\"red\"\r\n                    style={{ color: '#fff', alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Top Pcb Status LEDs\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setPCBLEDS(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Serial Communication LEDs\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setCOMMLEDS(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Beacon LED\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setBEACONLED(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid paddingTop={1}>\r\n            <Divider>\r\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                Artificial Intelligence\r\n              </Typography>\r\n            </Divider>\r\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Conversational AI\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setCONVAI(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Object Recognition\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setORECOGN(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Human Recognition\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setHRECOGN(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Environment Mapping\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setEMAPPING(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid paddingTop={1}>\r\n            <Divider>\r\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                Collision & Edge Detection\r\n              </Typography>\r\n            </Divider>\r\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Front Collision Sensing\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setFCOLLISION(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Side Collision Sensing\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setSCOLLISION(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Front Edge Sensing\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setFEDGESENSNG(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item xs={2} style={{ color: '#fff' }}>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  disableTouchListener\r\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\r\n                >\r\n                  <FormGroup>\r\n                    <Typography\r\n                      variant=\"h7\"\r\n                      gutterBottom\r\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                    >\r\n                      Back Edge Sensing\r\n                    </Typography>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          onChange={(e) => {\r\n                            setBEDGESENSNG(e.target.checked);\r\n                          }}\r\n                        />\r\n                      }\r\n                      label=\"OFF/ON\"\r\n                      style={{ alignSelf: 'center' }}\r\n                    />\r\n                  </FormGroup>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            paddingTop={1}\r\n            style={{\r\n              overflow: 'hidden'\r\n            }}\r\n          >\r\n            <Divider>\r\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                Sensors\r\n              </Typography>\r\n            </Divider>\r\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Gas\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setGAS(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Temperature\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setTEMPERATURE(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Humidity\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setHUMIDITY(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Tilt\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setTILT(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Photoresistor\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setPHOTORES(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Flame\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setFLAME(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    Smoke\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setSMOKE(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={1} style={{ color: '#fff' }}>\r\n                <FormGroup>\r\n                  <Typography\r\n                    variant=\"h7\"\r\n                    gutterBottom\r\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\r\n                  >\r\n                    GPS\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        onChange={(e) => {\r\n                          setGPS(e.target.checked);\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"OFF/ON\"\r\n                    style={{ alignSelf: 'center' }}\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container paddingTop={2}>\r\n            <Divider orientation=\"horizontal\" flexItem />\r\n\r\n            <Grid item xs={12} style={{ color: '#fff' }} align=\"center\">\r\n              <Button\r\n                onClick={sumbitSettings}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{\r\n                  color: '#fff',\r\n                  fontWeight: 'bolder',\r\n                  fontSize: '1.1em',\r\n                  backgroundColor: '#45a29e',\r\n                  maxWidth: '300px',\r\n                  maxHeight: '30px',\r\n                  minWidth: '150px',\r\n                  minHeight: '55px',\r\n                  top: '38px',\r\n                  boxShadow: 'none'\r\n                }}\r\n              >\r\n                Submit Changes\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\SensorData.js",["1118","1119","1120","1121","1122","1123","1124","1125","1126"],[],"import { Icon } from '@iconify/react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\r\n// components\r\nimport Page from '../components/Page';\r\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../components/_dashboard/blog';\r\n//\r\nimport POSTS from '../_mocks_/blog';\r\nimport DataTabs from './Widgets/AppDataTabs';\r\n\r\nexport default function SensorData() {\r\n  return (\r\n    <Page title=\"Sensor Data\">\r\n      <Container maxWidth=\"xl\">\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\r\n            Sensor Data\r\n          </Typography>\r\n        </Stack>\r\n        <DataTabs />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\EventViewer.js",["1127","1128","1129","1130","1131","1132","1133"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\LiveCamera.js",["1134","1135","1136","1137","1138","1139","1140"],[],"import { Icon } from '@iconify/react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { Grid, Button, Container, Stack, Typography, TextField, Divider } from '@mui/material';\r\n// components\r\nimport { Joystick } from 'react-joystick-component';\r\n\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Page from '../components/Page';\r\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../components/_dashboard/blog';\r\nimport Image from './dummy.png'; // Import using relative path\r\n\r\nexport default function LiveCamera() {\r\n  return (\r\n    <Page title=\"Live View\">\r\n      <Container maxWidth=\"xl\" overflow=\"hidden\" minHeight=\"1800px\">\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={0}>\r\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\r\n            Live View\r\n          </Typography>\r\n        </Stack>\r\n        <Grid container columns={{ xs: 8, sm: 8, md: 8, lg: 8 }} minHeight=\"769px\">\r\n          <Grid\r\n            item\r\n            xs={8}\r\n            style={{\r\n              minWidth: '1296px',\r\n              minHeight: '729px',\r\n              maxHeight: '729px',\r\n              backgroundImage: `url(${Image})`\r\n            }}\r\n          >\r\n            <Grid xs={1} style={{ top: '525px', left: '3.6%', position: 'relative' }}>\r\n              <Joystick size={150} baseColor=\"#45a29e\" stickColor=\"#c5c6c7\" />\r\n            </Grid>\r\n            <Grid xs={1} style={{ top: '81%', left: '57.5%', position: 'relative' }}>\r\n              <TextField\r\n                style={{\r\n                  maxWidth: '500px',\r\n                  minWidth: '450px'\r\n                }}\r\n                color=\"primary\"\r\n                textInputStyle={{ color: 'green' }}\r\n                label=\"Command\"\r\n              />\r\n            </Grid>\r\n            <Grid xs={1} style={{ top: '75%', left: '88.5%', position: 'relative' }}>\r\n              <Button variant=\"contained\" endIcon={<SendIcon />} style={{ boxShadow: 'none' }}>\r\n                Send Command\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\DashboardApp.js",["1141"],[],"// material\r\nimport { Box, Grid, Container, Typography, Stack, item } from '@mui/material';\r\n\r\n// components\r\nimport Page from '../components/Page';\r\nimport { AppWebsiteVisits, AppWarningsReports } from '../components/_dashboard/app';\r\nimport AppSuccessReports from './Widgets/AppSuccessReports';\r\nimport CurrentTask from './Widgets/AppCurrentTask';\r\nimport LinearWithValueLabel from './Widgets/AppRessourceMonitor';\r\nimport AppErrorReports from './Widgets/AppErrorReports';\r\nimport AppLatestEvent from './Widgets/AppLatestEvent';\r\nimport AppDistributionOfTime from './Widgets/AppDistributionOfTime';\r\nimport AppDistributionOfTask from './Widgets/AppDistributionOfTask';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DashboardApp() {\r\n  return (\r\n    <Page title=\"Dashboard\">\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ pb: 5 }}>\r\n          <Typography style={{ color: '#66fcf1' }} variant=\"h4\">\r\n            Hi Félix, Here's whats happening!\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={{ xs: 1, sm: 2, lg: 3 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <Grid item xs={1} sm={1} md={1}>\r\n            <Stack spacing={2}>\r\n              <item>\r\n                <AppErrorReports />\r\n              </item>\r\n              <item>\r\n                <AppWarningsReports />\r\n              </item>\r\n              <item>\r\n                <AppSuccessReports />\r\n              </item>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppLatestEvent />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={3}>\r\n            <Stack spacing={2}>\r\n              <item>\r\n                <LinearWithValueLabel />\r\n              </item>\r\n              <item>\r\n                <CurrentTask />\r\n              </item>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={9}>\r\n            <AppWebsiteVisits />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppDistributionOfTime />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppDistributionOfTask />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Page404.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\shape.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\shadows.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\typography.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\palette.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\Page.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\Logo.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppRamUsage.js",["1142"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppCpuTemp.js",["1143"],[],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: 'Robot Sensors',\r\n    type: 'line',\r\n    data: [35, 64, 52, 59, 30, 25, 36, 36, 30, 45, 39]\r\n  }\r\n];\r\n\r\nexport default function CpuTemp() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Processor Temperature over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'center' }}\r\n      />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\HealthGrid.js",["1144","1145","1146","1147","1148","1149"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppGpuTemp.js",["1150"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppDataTabs.js",["1151","1152","1153","1154"],[],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Refresh from '@iconify/icons-eva/refresh-fill';\r\nimport { Button, Icon } from '@mui/material';\r\nimport AppTempSensor from './AppTempSensor';\r\nimport AppHumiditySensor from './AppHumiditySensor';\r\nimport AppTemperatureGrids from './AppTemperatureGrids';\r\nimport AppHumidityGrids from './AppHumidityGrid';\r\nimport AppVoltageSensor from './AppVoltageSensor';\r\nimport AppVoltageGrids from './AppVoltageGrid';\r\nimport AppAmperageGrids from './AppAmperageGrid';\r\nimport AppAmperageSensor from './AppAmperageSensor';\r\nimport AppGassSensor from './AppGasSensor';\r\nimport AppGasGrids from './AppGasGrid';\r\nimport AppPhotoresistorSensor from './AppPhotoresistorSensor';\r\nimport AppPhotoresistorGrid from './AppPhotoresistorGrid';\r\n\r\nexport default function DataTabs() {\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', typography: 'body1' }}>\r\n      <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n            <Tab label=\"Temperature\" value=\"1\" />\r\n            <Tab label=\"Humidity\" value=\"2\" />\r\n            <Tab label=\"Voltage\" value=\"3\" />\r\n            <Tab label=\"Amperage\" value=\"4\" />\r\n            <Tab label=\"Gas\" value=\"5\" />\r\n            <Tab label=\"Photoresistor\" value=\"6\" />\r\n          </TabList>\r\n        </Box>\r\n        <TabPanel value=\"1\">\r\n          <AppTempSensor />\r\n          <AppTemperatureGrids />\r\n        </TabPanel>\r\n        <TabPanel value=\"2\">\r\n          <AppHumiditySensor />\r\n          <AppHumidityGrids />\r\n        </TabPanel>\r\n        <TabPanel value=\"3\">\r\n          <AppVoltageSensor />\r\n          <AppVoltageGrids />\r\n        </TabPanel>\r\n        <TabPanel value=\"4\">\r\n          <AppAmperageSensor />\r\n          <AppAmperageGrids />\r\n        </TabPanel>\r\n        <TabPanel value=\"5\">\r\n          <AppGassSensor />\r\n          <AppGasGrids />\r\n        </TabPanel>\r\n        <TabPanel value=\"6\">\r\n          <AppPhotoresistorSensor />\r\n          <AppPhotoresistorGrid />\r\n        </TabPanel>\r\n      </TabContext>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppCurrentTask.js",["1155","1156","1157","1158"],[],"import { Icon } from '@iconify/react';\r\nimport alerttrianglefill from '@iconify/icons-eva/alert-triangle-fill';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, CircularProgress, Typography } from '@mui/material';\r\n// utils\r\nimport { fShortenNumber } from '../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'Left',\r\n  padding: theme.spacing(4.4, 3),\r\n  color: '#66fcf1',\r\n  backgroundColor: '#1f2833'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\nconst current = 'Moving to Target location';\r\nconst next = 'Analysing Target';\r\n\r\nexport default function CurrentTask() {\r\n  return (\r\n    <RootStyle>\r\n      <Typography variant=\"h5\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n        Current Task:\r\n      </Typography>\r\n\r\n      <Typography variant=\"h4\" style={{ color: '#45a29e', padding: (5, 5) }}>\r\n        {current}{' '}\r\n        <CircularProgress\r\n          variant=\"indeterminate\"\r\n          disableShrink\r\n          size={18}\r\n          thickness={4}\r\n          style={{ color: '#66fcf1' }}\r\n        />\r\n      </Typography>\r\n\r\n      <Typography variant=\"h5\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n        Next Task:\r\n      </Typography>\r\n\r\n      <Typography variant=\"h4\" style={{ color: '#45a29e', padding: (5, 5) }}>\r\n        {next}\r\n      </Typography>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppLatestEvent.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppRessourceMonitor.js",["1159","1160","1161","1162"],[],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport bugFilled from '@iconify/icons-ant-design/bug-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card } from '@mui/material';\r\n// utils\r\nimport { fShortenNumber } from '../../utils/formatNumber';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          {...props}\r\n          style={{ padding: '15px' }}\r\n          color=\"inherit\"\r\n        />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography\r\n          style={{ color: '#66fcf1' }}\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  padding: theme.spacing(2.3, 2.7),\r\n  color: '#66fcf1',\r\n  backgroundColor: '#1f2833'\r\n}));\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default function LinearWithValueLabel() {\r\n  return (\r\n    <RootStyle>\r\n      <Typography\r\n        variant=\"h5\"\r\n        sx={{ opacity: 1 }}\r\n        style={{ fontWeight: 'bold', textAlign: 'Left' }}\r\n      >\r\n        Ressource Monitor\r\n      </Typography>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n          CPU:\r\n        </Typography>\r\n        <LinearProgressWithLabel value={40} />\r\n      </Box>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n          GPU:\r\n        </Typography>\r\n        <LinearProgressWithLabel value={90} />\r\n      </Box>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n          RAM:\r\n        </Typography>\r\n        <LinearProgressWithLabel value={30} />\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppErrorReports.js",["1163"],[],"import { Icon } from '@iconify/react';\r\nimport bugFilled from '@iconify/icons-ant-design/bug-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { fShortenNumber } from '../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  padding: theme.spacing(3, 0),\r\n  color: '#000000',\r\n  backgroundColor: 'red'\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(1.5),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(2),\r\n  color: '#000000'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppErrorReports() {\r\n  const [ERRORS, setERRORS] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getEventCount').then((response) => {\r\n      setERRORS(response.data.at(0).ERRORS);\r\n    });\r\n  }, []);\r\n  return (\r\n    <RootStyle>\r\n      <IconWrapperStyle>\r\n        <Icon icon={bugFilled} width={48} height={48} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\">{fShortenNumber(ERRORS)}</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n        Reported Errors\r\n      </Typography>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppSuccessReports.js",["1164"],[],"import { Icon } from '@iconify/react';\r\nimport alerttrianglefill from '@iconify/icons-eva/alert-triangle-fill';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { fShortenNumber } from '../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  padding: theme.spacing(3, 0),\r\n  color: '#000000',\r\n  backgroundColor: 'green'\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(1),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(2),\r\n  color: '#000000'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppSuccessReports() {\r\n  const [SUCCESS, setSUCCESS] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getEventCount').then((response) => {\r\n      setSUCCESS(response.data.at(0).SUCCESS);\r\n    });\r\n  }, []);\r\n  return (\r\n    <RootStyle>\r\n      <IconWrapperStyle>\r\n        <Icon icon={alerttrianglefill} width={48} height={48} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\">{fShortenNumber(SUCCESS)}</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n        Reported Success\r\n      </Typography>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppDistributionOfTask.js",["1165"],[],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Card, CardHeader } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_HEIGHT = 392;\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\r\n  height: CHART_HEIGHT,\r\n  marginTop: theme.spacing(2),\r\n  '& .apexcharts-canvas svg': {\r\n    height: CHART_HEIGHT\r\n  },\r\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\r\n    overflow: 'visible'\r\n  },\r\n  '& .apexcharts-legend': {\r\n    height: LEGEND_HEIGHT,\r\n    alignContent: 'center',\r\n    position: 'relative !important',\r\n    borderTop: `solid 1px ${theme.palette.divider}`,\r\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [{ name: 'Series 1', data: [80, 50, 30, 40, 100, 20] }];\r\n\r\nexport default function AppDistributionOfTask() {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: {\r\n      width: 2,\r\n      colors: ['#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1']\r\n    },\r\n    fill: {\r\n      opacity: 0.7,\r\n      colors: ['#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e']\r\n    },\r\n    legend: { floating: true, horizontalAlign: 'center' },\r\n    xaxis: {\r\n      categories: ['Standby', 'Talking', 'Confused', 'Thinking', 'Moving', 'In Error'],\r\n      labels: {\r\n        style: {\r\n          colors: ['#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e']\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', color: '#66fcf1', boxShadow: 'none' }}>\r\n      <CardHeader title=\"Distribution of Tasks\" />\r\n      <ChartWrapperStyle dir=\"ltr\">\r\n        <ReactApexChart type=\"radar\" series={CHART_DATA} options={chartOptions} height={380} />\r\n      </ChartWrapperStyle>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppDistributionOfTime.js",["1166"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\services\\db.services.js",[],["1167","1168","1169","1170","1171","1172","1173"],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\_mocks_\\blog.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\DashboardSidebar.js",["1174","1175","1176","1177","1178"],["1179"],"import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport NavSection from '../../components/NavSection';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\nimport sidebarConfig from './SidebarConfig';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 280;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('lg')]: {\r\n    flexShrink: 0,\r\n    width: DRAWER_WIDTH,\r\n    backgroundColor: 'red'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nDashboardSidebar.propTypes = {\r\n  isOpenSidebar: PropTypes.bool,\r\n  onCloseSidebar: PropTypes.func\r\n};\r\n\r\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: '100%',\r\n        '& .simplebar-content': { height: '100%', display: 'flex', flexDirection: 'column' }\r\n      }}\r\n    >\r\n      <Box sx={{ px: 2.5, py: 3 }}>\r\n        <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\r\n          <Logo />\r\n        </Box>\r\n      </Box>\r\n\r\n      <NavSection navConfig={sidebarConfig} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n    </Scrollbar>\r\n  );\r\n  return (\r\n    <RootStyle style={{ backgroundColor: '#1f2833' }}>\r\n      <MHidden width=\"lgUp\">\r\n        <Drawer\r\n          open={isOpenSidebar}\r\n          onClose={onCloseSidebar}\r\n          PaperProps={{\r\n            sx: { width: DRAWER_WIDTH }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n\r\n      <MHidden width=\"lgDown\">\r\n        <Drawer\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: DRAWER_WIDTH,\r\n              bgcolor: '#1f2833'\r\n            }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\DashboardNavbar.js",["1180","1181","1182","1183","1184"],[],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport BellFill from '@iconify/icons-eva/bell-fill';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Stack, AppBar, Toolbar, IconButton, Badge } from '@mui/material';\r\n// components\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\nimport Searchbar from './Searchbar';\r\nimport AccountPopover from './AccountPopover';\r\nimport LanguagePopover from './LanguagePopover';\r\nimport NotificationsPopover from './NotificationsPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 280;\r\nconst APPBAR_MOBILE = 64;\r\nconst APPBAR_DESKTOP = 92;\r\n\r\nconst RootStyle = styled(AppBar)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  backdropFilter: 'blur(6px)',\r\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n  backgroundColor: '#1f2833',\r\n  [theme.breakpoints.up('lg')]: {\r\n    width: `calc(100% - ${DRAWER_WIDTH + 1}px)`\r\n  }\r\n}));\r\n\r\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\r\n  minHeight: APPBAR_MOBILE,\r\n  [theme.breakpoints.up('lg')]: {\r\n    minHeight: APPBAR_DESKTOP,\r\n    padding: theme.spacing(0, 5)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nDashboardNavbar.propTypes = {\r\n  onOpenSidebar: PropTypes.func\r\n};\r\n\r\nexport default function DashboardNavbar({ onOpenSidebar }) {\r\n  const navigate = useNavigate();\r\n\r\n  function handleClick() {\r\n    navigate('/dashboard/EventViewer');\r\n  }\r\n  return (\r\n    <RootStyle>\r\n      <ToolbarStyle>\r\n        <MHidden width=\"lgUp\">\r\n          <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\r\n            <Icon icon={BellFill} />\r\n          </IconButton>\r\n        </MHidden>\r\n\r\n        <Box sx={{ flexGrow: 1 }} />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={{ xs: 0.5, sm: 1.5 }}>\r\n          <IconButton\r\n            aria-label=\"Notifications\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n          >\r\n            <Badge badgeContent={99} color=\"secondary\">\r\n              <Icon icon={BellFill} />\r\n            </Badge>\r\n          </IconButton>\r\n        </Stack>\r\n      </ToolbarStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\http-common.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\utils\\formatNumber.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\utils\\mockImages.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\utils\\formatTime.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Autocomplete.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\IconButton.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\charts\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\SidebarConfig.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\MotionContainer.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\NotificationsPopover.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\BlogPostsSort.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppWeeklySales.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\blog\\BlogPostCard.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppBugsOverTime.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppTrafficBySite.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppTasks.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\MenuPopover.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\Scrollbar.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\SvgIconStyle.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppNewUsers.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppNewsUpdate.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppItemOrders.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppWarningsReports.js",["1185"],[],"import { Icon } from '@iconify/react';\r\nimport alerttrianglefill from '@iconify/icons-eva/alert-triangle-fill';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { fShortenNumber } from '../../utils/formatNumber';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  padding: theme.spacing(3, 0),\r\n  color: '#000000',\r\n  backgroundColor: '#eed202'\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(1),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(2),\r\n  color: '#000000'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWarningsReports() {\r\n  const [WARNINGS, setWARNINGS] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getEventCount').then((response) => {\r\n      setWARNINGS(response.data.at(0).WARNINGS);\r\n    });\r\n  }, []);\r\n  return (\r\n    <RootStyle>\r\n      <IconWrapperStyle>\r\n        <Icon icon={alerttrianglefill} width={48} height={48} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\">{fShortenNumber(WARNINGS)}</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\r\n        Reported warnings\r\n      </Typography>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\AccountPopover.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\_dashboard\\app\\AppConversionRates.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\LanguagePopover.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\layouts\\dashboard\\Searchbar.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\@material-extend\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\Wrap.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\_mocks_\\account.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\bounce\\index.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\@material-extend\\MHidden.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\NavSection.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\bounce\\BounceOut.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\components\\animate\\variants\\bounce\\BounceIn.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Typography.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Backdrop.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Tooltip.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Button.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Paper.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Input.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Lists.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\theme\\overrides\\Card.js",[],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppPhotoresistorGrid.js",["1186","1187","1188","1189","1190","1191","1192","1193","1194"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card,\r\n  Icon\r\n} from '@mui/material';\r\n// components\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Refresh from '@iconify/icons-eva/refresh-fill';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '25%',\r\n  height: '169px',\r\n  backgroundColor: 'transparent'\r\n}));\r\nexport default function AppPhotoresistorGrid() {\r\n  const [MIN, setMIN] = useState('');\r\n  const [AVG, setAVG] = useState('');\r\n  const [MAX, setMAX] = useState('');\r\n  const [CURRENT, setCURRENT] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getPhotoresistor').then((response) => {\r\n      setAVG(response.data.at(0).AVERAGE);\r\n      setMIN(response.data.at(0).MINIMUM);\r\n      setMAX(response.data.at(0).MAXIMUM);\r\n      setCURRENT(response.data.at(0).CURRENT);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Page>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Luminosity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {CURRENT}Lm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Minimum Luminosity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MIN}Lm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Luminosity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {AVG}Lm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Maximum Luminosity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MAX}Lm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppPhotoresistorSensor.js",["1195","1196","1197"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppGasGrid.js",["1198","1199","1200","1201","1202","1203"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '20%',\r\n  height: '169px',\r\n  backgroundColor: 'transparent'\r\n}));\r\nexport default function AppGasGrids() {\r\n  const [GAS1, setGAS1] = useState('');\r\n  const [GAS2, setGAS2] = useState('');\r\n  const [GAS3, setGAS3] = useState('');\r\n  const [GAS4, setGAS4] = useState('');\r\n  const [GAS5, setGAS5] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getGas').then((response) => {\r\n      setGAS1(response.data.at(0).GAS1);\r\n      setGAS2(response.data.at(0).GAS2);\r\n      setGAS3(response.data.at(0).GAS3);\r\n      setGAS4(response.data.at(0).GAS4);\r\n      setGAS5(response.data.at(0).GAS5);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Page>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <RootStyle item xs={1.6} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                GAS 1\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {GAS1}ppm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={1.6} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                GAS 2\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {GAS2}ppm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={1.6} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                GAS 3\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {GAS3}ppm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={1.6} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                GAS 4\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {GAS4}ppm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={1.6} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                GAS 5\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {GAS5}ppm\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppGasSensor.js",["1204"],[],"C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppAmperageSensor.js",["1205"],[],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Power Draw (mW)',\r\n    type: 'line',\r\n    data: [12500, 13500, 9500, 3500, 15500, 17400, 6300, 3200, 1100, 8000, 11000]\r\n  }\r\n];\r\n\r\nexport default function AppAmperageSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 0,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 50,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 70,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Power Draw (mW) over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'Left' }}\r\n      />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppAmperageGrid.js",["1206","1207","1208","1209","1210","1211"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '25%',\r\n  height: '169px',\r\n  backgroundColor: 'transparent'\r\n}));\r\nexport default function AppAmperageGrids() {\r\n  const [MIN, setMIN] = useState('');\r\n  const [AVG, setAVG] = useState('');\r\n  const [MAX, setMAX] = useState('');\r\n  const [CURRENT, setCURRENT] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getAmperage').then((response) => {\r\n      setAVG(response.data.at(0).AVERAGE);\r\n      setMIN(response.data.at(0).MINIMUM);\r\n      setMAX(response.data.at(0).MAXIMUM);\r\n      setCURRENT(response.data.at(0).CURRENT);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Page>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Power Draw:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {CURRENT}W\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Minimum Power Draw:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MIN}W\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Power Draw:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {AVG}W\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Maximum Power Draw:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MAX}W\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppVoltageGrid.js",["1212","1213","1214","1215","1216","1217"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '25%',\r\n  height: '169px',\r\n  backgroundColor: 'transparent'\r\n}));\r\nexport default function AppVoltageGrids() {\r\n  const [MIN, setMIN] = useState('');\r\n  const [AVG, setAVG] = useState('');\r\n  const [MAX, setMAX] = useState('');\r\n  const [CURRENT, setCURRENT] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getVoltage').then((response) => {\r\n      setAVG(response.data.at(0).AVERAGE);\r\n      setMIN(response.data.at(0).MINIMUM);\r\n      setMAX(response.data.at(0).MAXIMUM);\r\n      setCURRENT(response.data.at(0).CURRENT);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Page>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Voltage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {CURRENT}V\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Minimum Voltage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MIN}V\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Voltage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {AVG}V\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Maximum Voltage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MAX}V\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppVoltageSensor.js",["1218"],[],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Voltage (mV)',\r\n    type: 'line',\r\n    data: [13500, 13500, 13500, 13500, 13500, 13400, 13300, 13200, 13100, 13000, 11000]\r\n  }\r\n];\r\n\r\nexport default function AppVoltageSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 0,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 10,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 50,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Battery Voltage (mV) over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'Left' }}\r\n      />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppHumidityGrid.js",["1219","1220","1221","1222","1223","1224"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '25%',\r\n  height: '169px',\r\n  backgroundColor: 'transparent'\r\n}));\r\nexport default function AppHumidityGrids() {\r\n  const [MIN, setMIN] = useState('');\r\n  const [AVG, setAVG] = useState('');\r\n  const [MAX, setMAX] = useState('');\r\n  const [CURRENT, setCURRENT] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getHumidity').then((response) => {\r\n      setAVG(response.data.at(0).AVERAGE);\r\n      setMIN(response.data.at(0).MINIMUM);\r\n      setMAX(response.data.at(0).MAXIMUM);\r\n      setCURRENT(response.data.at(0).CURRENT);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Page>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Humidity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {CURRENT}%\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Minimum Humidity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MIN}%\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Humidity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {AVG}%\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Maximum Humidity:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MAX}%\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppTemperatureGrids.js",["1225","1226","1227","1228","1229","1230"],[],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '25%',\r\n  height: '169px',\r\n  backgroundColor: 'transparent'\r\n}));\r\n\r\nexport default function AppTemperatureGrids() {\r\n  const [MIN, setMIN] = useState('');\r\n  const [AVG, setAVG] = useState('');\r\n  const [MAX, setMAX] = useState('');\r\n  const [CURRENT, setCURRENT] = useState('');\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getTemperature').then((response) => {\r\n      setAVG(response.data.at(0).AVERAGE);\r\n      setMIN(response.data.at(0).MINIMUM);\r\n      setMAX(response.data.at(0).MAXIMUM);\r\n      setCURRENT(response.data.at(0).CURRENT);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Page>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {CURRENT}°c\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Minimum Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MIN}°c\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {AVG}°c\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2} align=\"center\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Maximum Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {MAX}°c\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppHumiditySensor.js",["1231"],[],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Humidity (%)',\r\n    type: 'line',\r\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\r\n  }\r\n];\r\n\r\nexport default function AppHumiditySensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader title=\"Humidity (%) over Time\" style={{ color: '#45a29e', textAlign: 'Left' }} />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\src\\pages\\Widgets\\AppTempSensor.js",["1232"],[],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Temperature (C)',\r\n    type: 'line',\r\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\r\n  }\r\n];\r\n\r\nexport default function AppTempSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Temperature (C) over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'Left' }}\r\n      />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n",{"ruleId":"1233","replacedBy":"1234"},{"ruleId":"1235","replacedBy":"1236"},{"ruleId":"1237","replacedBy":"1238"},{"ruleId":"1239","replacedBy":"1240"},{"ruleId":"1241","replacedBy":"1242"},{"ruleId":"1243","replacedBy":"1244"},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1251","line":5,"column":10,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1252","line":5,"column":16,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1253","line":8,"column":10,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1254","line":8,"column":24,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1255","line":8,"column":39,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":54},{"ruleId":"1245","severity":1,"message":"1256","line":10,"column":8,"nodeType":"1247","messageId":"1248","endLine":10,"endColumn":13},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1252","line":5,"column":16,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1251","line":14,"column":10,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1252","line":14,"column":16,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1257","line":131,"column":23,"nodeType":"1247","messageId":"1248","endLine":131,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1258","line":3,"column":10,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1259","line":4,"column":17,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":26},{"ruleId":"1245","severity":1,"message":"1260","line":4,"column":38,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":47},{"ruleId":"1245","severity":1,"message":"1261","line":14,"column":3,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1262","line":19,"column":3,"nodeType":"1247","messageId":"1248","endLine":19,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1263","line":23,"column":10,"nodeType":"1247","messageId":"1248","endLine":23,"endColumn":13},{"ruleId":"1245","severity":1,"message":"1264","line":23,"column":15,"nodeType":"1247","messageId":"1248","endLine":23,"endColumn":24},{"ruleId":"1245","severity":1,"message":"1265","line":24,"column":8,"nodeType":"1247","messageId":"1248","endLine":24,"endColumn":17},{"ruleId":"1245","severity":1,"message":"1266","line":25,"column":8,"nodeType":"1247","messageId":"1248","endLine":25,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1267","line":26,"column":8,"nodeType":"1247","messageId":"1248","endLine":26,"endColumn":19},{"ruleId":"1245","severity":1,"message":"1268","line":29,"column":7,"nodeType":"1247","messageId":"1248","endLine":29,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1269","line":2,"column":51,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":55},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1270","line":5,"column":65,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":72},{"ruleId":"1245","severity":1,"message":"1253","line":11,"column":10,"nodeType":"1247","messageId":"1248","endLine":11,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1254","line":11,"column":24,"nodeType":"1247","messageId":"1248","endLine":11,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1255","line":11,"column":39,"nodeType":"1247","messageId":"1248","endLine":11,"endColumn":54},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1273","line":8,"column":8,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1252","line":9,"column":10,"nodeType":"1247","messageId":"1248","endLine":9,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1246","line":9,"column":18,"nodeType":"1247","messageId":"1248","endLine":9,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1246","line":7,"column":10,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1275","line":8,"column":8,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":17},{"ruleId":"1245","severity":1,"message":"1274","line":10,"column":10,"nodeType":"1247","messageId":"1248","endLine":10,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1276","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":24},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":23,"column":35,"nodeType":"1247","messageId":"1248","endLine":23,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1279","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":25},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1276","line":7,"column":10,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":24},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1280","line":37,"column":9,"nodeType":"1247","messageId":"1248","endLine":37,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1281","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":18},{"ruleId":"1245","severity":1,"message":"1274","line":7,"column":10,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1282","line":13,"column":8,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":17},{"ruleId":"1245","severity":1,"message":"1283","line":14,"column":8,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1284","line":15,"column":8,"nodeType":"1247","messageId":"1248","endLine":15,"endColumn":23},{"ruleId":"1245","severity":1,"message":"1285","line":16,"column":8,"nodeType":"1247","messageId":"1248","endLine":16,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1258","line":6,"column":15,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":19},{"ruleId":"1245","severity":1,"message":"1252","line":6,"column":21,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":27},{"ruleId":"1245","severity":1,"message":"1271","line":6,"column":37,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":47},{"ruleId":"1245","severity":1,"message":"1286","line":6,"column":49,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":55},{"ruleId":"1245","severity":1,"message":"1277","line":6,"column":57,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":62},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1246","line":10,"column":3,"nodeType":"1247","messageId":"1248","endLine":10,"endColumn":7},{"ruleId":"1245","severity":1,"message":"1272","line":13,"column":8,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1273","line":14,"column":8,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1274","line":16,"column":10,"nodeType":"1247","messageId":"1248","endLine":16,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":21,"column":35,"nodeType":"1247","messageId":"1248","endLine":21,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":4,"column":45,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":51},{"ruleId":"1245","severity":1,"message":"1272","line":6,"column":8,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1235","replacedBy":"1287"},{"ruleId":"1237","replacedBy":"1288"},{"ruleId":"1239","replacedBy":"1289"},{"ruleId":"1241","replacedBy":"1290"},{"ruleId":"1243","replacedBy":"1291"},{"ruleId":"1292","severity":2,"message":"1293","line":16,"column":29,"nodeType":null,"messageId":"1294","endLine":16,"endColumn":29,"fix":"1295","suppressions":"1296"},{"ruleId":"1292","severity":2,"message":"1297","line":17,"column":3,"nodeType":null,"messageId":"1294","endLine":17,"endColumn":3,"fix":"1298","suppressions":"1299"},{"ruleId":"1292","severity":2,"message":"1300","line":18,"column":1,"nodeType":null,"messageId":"1301","endLine":18,"endColumn":3,"fix":"1302","suppressions":"1303"},{"ruleId":"1292","severity":2,"message":"1297","line":19,"column":1,"nodeType":null,"messageId":"1294","endLine":19,"endColumn":1,"fix":"1304","suppressions":"1305"},{"ruleId":"1292","severity":2,"message":"1306","line":20,"column":1,"nodeType":null,"messageId":"1301","endLine":20,"endColumn":91,"fix":"1307","suppressions":"1308"},{"ruleId":"1292","severity":2,"message":"1309","line":43,"column":23,"nodeType":null,"messageId":"1294","endLine":43,"endColumn":23,"fix":"1310","suppressions":"1311"},{"ruleId":"1292","severity":2,"message":"1312","line":44,"column":1,"nodeType":null,"messageId":"1301","endLine":44,"endColumn":66,"fix":"1313","suppressions":"1314"},{"ruleId":"1292","severity":2,"message":"1315","line":55,"column":12,"nodeType":null,"messageId":"1316","endLine":56,"endColumn":5,"fix":"1317","suppressions":"1318"},{"ruleId":"1292","severity":2,"message":"1319","line":70,"column":27,"nodeType":null,"messageId":"1294","endLine":70,"endColumn":27,"fix":"1320","suppressions":"1321"},{"ruleId":"1292","severity":2,"message":"1322","line":71,"column":1,"nodeType":null,"messageId":"1301","endLine":71,"endColumn":77,"fix":"1323","suppressions":"1324"},{"ruleId":"1292","severity":2,"message":"1325","line":105,"column":11,"nodeType":null,"messageId":"1294","endLine":105,"endColumn":11,"fix":"1326","suppressions":"1327"},{"ruleId":"1292","severity":2,"message":"1328","line":106,"column":74,"nodeType":null,"messageId":"1294","endLine":106,"endColumn":74,"fix":"1329","suppressions":"1330"},{"ruleId":"1292","severity":2,"message":"1331","line":125,"column":14,"nodeType":null,"messageId":"1301","endLine":127,"endColumn":7,"fix":"1332","suppressions":"1333"},{"ruleId":"1334","severity":2,"message":"1335","line":15,"column":1,"nodeType":"1336","messageId":"1337","endLine":28,"endColumn":2,"suppressions":"1338"},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1252","line":5,"column":16,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1258","line":3,"column":10,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1259","line":4,"column":17,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":26},{"ruleId":"1245","severity":1,"message":"1260","line":4,"column":38,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":47},{"ruleId":"1245","severity":1,"message":"1261","line":14,"column":3,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1262","line":19,"column":3,"nodeType":"1247","messageId":"1248","endLine":19,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1263","line":23,"column":10,"nodeType":"1247","messageId":"1248","endLine":23,"endColumn":13},{"ruleId":"1245","severity":1,"message":"1264","line":23,"column":15,"nodeType":"1247","messageId":"1248","endLine":23,"endColumn":24},{"ruleId":"1245","severity":1,"message":"1265","line":24,"column":8,"nodeType":"1247","messageId":"1248","endLine":24,"endColumn":17},{"ruleId":"1245","severity":1,"message":"1266","line":25,"column":8,"nodeType":"1247","messageId":"1248","endLine":25,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1267","line":26,"column":8,"nodeType":"1247","messageId":"1248","endLine":26,"endColumn":19},{"ruleId":"1245","severity":1,"message":"1268","line":29,"column":7,"nodeType":"1247","messageId":"1248","endLine":29,"endColumn":12},{"ruleId":"1292","severity":2,"message":"1339","line":83,"column":16,"nodeType":null,"messageId":"1301","endLine":83,"endColumn":59,"fix":"1340","suppressions":"1341"},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1251","line":5,"column":10,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1252","line":5,"column":16,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1253","line":8,"column":10,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1254","line":8,"column":24,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1255","line":8,"column":39,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":54},{"ruleId":"1245","severity":1,"message":"1256","line":10,"column":8,"nodeType":"1247","messageId":"1248","endLine":10,"endColumn":13},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1251","line":14,"column":10,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1252","line":14,"column":16,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1342","line":49,"column":10,"nodeType":"1247","messageId":"1248","endLine":49,"endColumn":20},{"ruleId":"1245","severity":1,"message":"1257","line":63,"column":23,"nodeType":"1247","messageId":"1248","endLine":63,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1249","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1250","line":3,"column":18,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1270","line":5,"column":65,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":72},{"ruleId":"1245","severity":1,"message":"1253","line":11,"column":10,"nodeType":"1247","messageId":"1248","endLine":11,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1254","line":11,"column":24,"nodeType":"1247","messageId":"1248","endLine":11,"endColumn":37},{"ruleId":"1245","severity":1,"message":"1255","line":11,"column":39,"nodeType":"1247","messageId":"1248","endLine":11,"endColumn":54},{"ruleId":"1245","severity":1,"message":"1269","line":2,"column":51,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":55},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":23,"column":35,"nodeType":"1247","messageId":"1248","endLine":23,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1273","line":8,"column":8,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1252","line":9,"column":10,"nodeType":"1247","messageId":"1248","endLine":9,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1246","line":9,"column":18,"nodeType":"1247","messageId":"1248","endLine":9,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1246","line":1,"column":10,"nodeType":"1247","messageId":"1248","endLine":1,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1279","line":2,"column":8,"nodeType":"1247","messageId":"1248","endLine":2,"endColumn":25},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1276","line":7,"column":10,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":24},{"ruleId":"1245","severity":1,"message":"1246","line":7,"column":10,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1275","line":8,"column":8,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":17},{"ruleId":"1245","severity":1,"message":"1274","line":10,"column":10,"nodeType":"1247","messageId":"1248","endLine":10,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1276","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":24},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1280","line":37,"column":9,"nodeType":"1247","messageId":"1248","endLine":37,"endColumn":14},{"ruleId":"1245","severity":1,"message":"1281","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":18},{"ruleId":"1343","severity":2,"message":"1344","line":5,"column":3,"nodeType":"1345","messageId":"1346","endLine":5,"endColumn":9,"suppressions":"1347"},{"ruleId":"1343","severity":2,"message":"1348","line":9,"column":3,"nodeType":"1345","messageId":"1346","endLine":9,"endColumn":6,"suppressions":"1349"},{"ruleId":"1343","severity":2,"message":"1350","line":13,"column":3,"nodeType":"1345","messageId":"1346","endLine":13,"endColumn":9,"suppressions":"1351"},{"ruleId":"1343","severity":2,"message":"1352","line":17,"column":3,"nodeType":"1345","messageId":"1346","endLine":17,"endColumn":9,"suppressions":"1353"},{"ruleId":"1343","severity":2,"message":"1354","line":21,"column":3,"nodeType":"1345","messageId":"1346","endLine":21,"endColumn":9,"suppressions":"1355"},{"ruleId":"1343","severity":2,"message":"1356","line":25,"column":3,"nodeType":"1345","messageId":"1346","endLine":25,"endColumn":12,"suppressions":"1357"},{"ruleId":"1343","severity":2,"message":"1358","line":29,"column":3,"nodeType":"1345","messageId":"1346","endLine":29,"endColumn":21,"suppressions":"1359"},{"ruleId":"1245","severity":1,"message":"1258","line":6,"column":15,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":19},{"ruleId":"1245","severity":1,"message":"1252","line":6,"column":21,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":27},{"ruleId":"1245","severity":1,"message":"1271","line":6,"column":37,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":47},{"ruleId":"1245","severity":1,"message":"1286","line":6,"column":49,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":55},{"ruleId":"1245","severity":1,"message":"1277","line":6,"column":57,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":62},{"ruleId":"1360","severity":1,"message":"1361","line":42,"column":6,"nodeType":"1362","endLine":42,"endColumn":16,"suggestions":"1363","suppressions":"1364"},{"ruleId":"1245","severity":1,"message":"1274","line":7,"column":10,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1282","line":13,"column":8,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":17},{"ruleId":"1245","severity":1,"message":"1283","line":14,"column":8,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":22},{"ruleId":"1245","severity":1,"message":"1284","line":15,"column":8,"nodeType":"1247","messageId":"1248","endLine":15,"endColumn":23},{"ruleId":"1245","severity":1,"message":"1285","line":16,"column":8,"nodeType":"1247","messageId":"1248","endLine":16,"endColumn":28},{"ruleId":"1245","severity":1,"message":"1274","line":4,"column":10,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1246","line":10,"column":3,"nodeType":"1247","messageId":"1248","endLine":10,"endColumn":7},{"ruleId":"1245","severity":1,"message":"1272","line":13,"column":8,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1273","line":14,"column":8,"nodeType":"1247","messageId":"1248","endLine":14,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1274","line":16,"column":10,"nodeType":"1247","messageId":"1248","endLine":16,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":21,"column":35,"nodeType":"1247","messageId":"1248","endLine":21,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":4,"column":45,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":51},{"ruleId":"1245","severity":1,"message":"1272","line":6,"column":8,"nodeType":"1247","messageId":"1248","endLine":6,"endColumn":16},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1252","line":3,"column":3,"nodeType":"1247","messageId":"1248","endLine":3,"endColumn":9},{"ruleId":"1245","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1247","messageId":"1248","endLine":5,"endColumn":8},{"ruleId":"1245","severity":1,"message":"1262","line":7,"column":3,"nodeType":"1247","messageId":"1248","endLine":7,"endColumn":12},{"ruleId":"1245","severity":1,"message":"1270","line":8,"column":3,"nodeType":"1247","messageId":"1248","endLine":8,"endColumn":10},{"ruleId":"1245","severity":1,"message":"1274","line":13,"column":10,"nodeType":"1247","messageId":"1248","endLine":13,"endColumn":15},{"ruleId":"1245","severity":1,"message":"1278","line":18,"column":35,"nodeType":"1247","messageId":"1248","endLine":18,"endColumn":40},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},{"ruleId":"1245","severity":1,"message":"1271","line":4,"column":33,"nodeType":"1247","messageId":"1248","endLine":4,"endColumn":43},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["1365"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'plusFill' is defined but never used.","'RouterLink' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'BlogPostCard' is defined but never used.","'BlogPostsSort' is defined but never used.","'BlogPostsSearch' is defined but never used.","'POSTS' is defined but never used.","'setRowsPerPage' is assigned a value but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'Slider' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'maxHeight' is defined but never used.","'PropTypes' is defined but never used.","'NumberFormat' is defined but never used.","'DataService' is defined but never used.","'marks' is assigned a value but never used.","'item' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'SendIcon' is defined but never used.","'Refresh' is defined but never used.","'alpha' is defined but never used.","'bugFilled' is defined but never used.","'fShortenNumber' is defined but never used.","'Stack' is defined but never used.","'theme' is defined but never used.","'alerttrianglefill' is defined but never used.","'theme' is assigned a value but never used.","'useTheme' is defined but never used.","'Searchbar' is defined but never used.","'AccountPopover' is defined but never used.","'LanguagePopover' is defined but never used.","'NotificationsPopover' is defined but never used.","'Avatar' is defined but never used.",["1365"],[],[],[],[],"prettier/prettier","Insert `␍⏎··`","insert",{"range":"1366","text":"1367"},["1368"],"Insert `··`",{"range":"1369","text":"1370"},["1371"],"Replace `··` with `····`","replace",{"range":"1372","text":"1373"},["1374"],{"range":"1375","text":"1370"},["1376"],"Replace `··window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)` with `····window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)␍⏎`",{"range":"1377","text":"1378"},["1379"],"Insert `␍⏎············`",{"range":"1380","text":"1381"},["1382"],"Replace `············'worker.·To·learn·more,·visit·https://bit.ly/CRA-PWA'` with `··············'worker.·To·learn·more,·visit·https://bit.ly/CRA-PWA'␍⏎··········`",{"range":"1383","text":"1384"},["1385"],"Delete `␍⏎····`","delete",{"range":"1386","text":"1387"},["1388"],"Insert `␍⏎················`",{"range":"1389","text":"1390"},["1391"],"Replace `················'tabs·for·this·page·are·closed.·See·https://bit.ly/CRA-PWA.'` with `··················'tabs·for·this·page·are·closed.·See·https://bit.ly/CRA-PWA.'␍⏎··············`",{"range":"1392","text":"1393"},["1394"],"Insert `␍⏎········`",{"range":"1395","text":"1396"},["1397"],"Insert `␍⏎······`",{"range":"1398","text":"1399"},["1400"],"Replace `␍⏎······.serviceWorker␍⏎······` with `.serviceWorker`",{"range":"1401","text":"1402"},["1403"],"react/prefer-stateless-function","Component should be written as a pure function","ClassDeclaration","componentShouldBePure",["1404"],"Replace `\"http://localhost:3001/api/SubtmitSettings\"` with `'http://localhost:3001/api/SubtmitSettings'`",{"range":"1405","text":"1406"},["1407"],"'createData' is defined but never used.","class-methods-use-this","Expected 'this' to be used by class method 'getAll'.","FunctionExpression","missingThis",["1408"],"Expected 'this' to be used by class method 'get'.",["1409"],"Expected 'this' to be used by class method 'create'.",["1410"],"Expected 'this' to be used by class method 'update'.",["1411"],"Expected 'this' to be used by class method 'delete'.",["1412"],"Expected 'this' to be used by class method 'deleteAll'.",["1413"],"Expected 'this' to be used by class method 'fintutorialsyTitle'.",["1414"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isOpenSidebar' and 'onCloseSidebar'. Either include them or remove the dependency array. If 'onCloseSidebar' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1415"],["1416"],"padding-line-between-statements",[660,660],"\r\n  ",{"kind":"1417","justification":"1387"},[707,707],"  ",{"kind":"1417","justification":"1387"},[748,750],"    ",{"kind":"1417","justification":"1387"},[791,791],{"kind":"1417","justification":"1387"},[844,934],"    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n",{"kind":"1417","justification":"1387"},[2021,2021],"\r\n            ",{"kind":"1417","justification":"1387"},[2081,2146],"              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          ",{"kind":"1417","justification":"1387"},[2361,2367],"",{"kind":"1417","justification":"1387"},[3016,3016],"\r\n                ",{"kind":"1417","justification":"1387"},[3073,3149],"                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              ",{"kind":"1417","justification":"1387"},[4276,4276],"\r\n        ",{"kind":"1417","justification":"1387"},[4377,4377],"\r\n      ",{"kind":"1417","justification":"1387"},[4973,5003],".serviceWorker",{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},[2672,2715],"'http://localhost:3001/api/SubtmitSettings'",{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"kind":"1417","justification":"1387"},{"desc":"1418","fix":"1419"},{"kind":"1417","justification":"1387"},"directive","Update the dependencies array to be: [isOpenSidebar, onCloseSidebar, pathname]",{"range":"1420","text":"1421"},[1297,1307],"[isOpenSidebar, onCloseSidebar, pathname]"]
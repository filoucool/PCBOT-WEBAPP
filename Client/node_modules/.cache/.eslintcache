[{"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\index.js":"1","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\serviceWorker.js":"2","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\App.js":"3","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\routes.js":"4","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\globalStyles.js":"5","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\BaseOptionChart.js":"6","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\ScrollToTop.js":"7","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\index.js":"8","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\LogoOnlyLayout.js":"9","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SensorData.js":"10","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SystemHealth.js":"11","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\EventViewer.js":"12","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Settings.js":"13","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\DashboardApp.js":"14","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Page404.js":"15","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\LiveCamera.js":"16","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\palette.js":"17","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\typography.js":"18","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shape.js":"19","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shadows.js":"20","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\index.js":"21","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Logo.js":"22","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Page.js":"23","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\blog.js":"24","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRamUsage.js":"25","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGpuTemp.js":"26","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDataTabs.js":"27","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppSuccessReports.js":"28","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRessourceMonitor.js":"29","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\HealthGrid.js":"30","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCpuTemp.js":"31","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCurrentTask.js":"32","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppLatestEvent.js":"33","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppErrorReports.js":"34","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTask.js":"35","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTime.js":"36","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\index.js":"37","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardNavbar.js":"38","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardSidebar.js":"39","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\index.js":"40","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\index.js":"41","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\index.js":"42","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatNumber.js":"43","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\mockImages.js":"44","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatTime.js":"45","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Autocomplete.js":"46","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\NotificationsPopover.js":"47","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\SidebarConfig.js":"48","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\index.js":"49","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\MotionContainer.js":"50","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppWeeklySales.js":"51","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSort.js":"52","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTrafficBySite.js":"53","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppBugsOverTime.js":"54","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTasks.js":"55","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewUsers.js":"56","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewsUpdate.js":"57","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\index.js":"58","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\MenuPopover.js":"59","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Scrollbar.js":"60","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\Wrap.js":"61","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\index.js":"62","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceOut.js":"63","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceIn.js":"64","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppItemOrders.js":"65","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppConversionRates.js":"66","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js":"67","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppWarningsReports.js":"68","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostCard.js":"69","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\NavSection.js":"70","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\LanguagePopover.js":"71","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\AccountPopover.js":"72","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\Searchbar.js":"73","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\index.js":"74","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\SvgIconStyle.js":"75","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\account.js":"76","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\MHidden.js":"77","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\IconButton.js":"78","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Typography.js":"79","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Backdrop.js":"80","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Tooltip.js":"81","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Button.js":"82","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Input.js":"83","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Paper.js":"84","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Lists.js":"85","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Card.js":"86","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorGrid.js":"87","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorSensor.js":"88","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasGrid.js":"89","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasSensor.js":"90","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageSensor.js":"91","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageGrid.js":"92","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageGrid.js":"93","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageSensor.js":"94","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumidityGrid.js":"95","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTemperatureGrids.js":"96","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTempSensor.js":"97","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumiditySensor.js":"98","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\services\\db.services.js":"99","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\http-common.js":"100"},{"size":523,"mtime":1640791616047,"results":"101","hashOfConfig":"102"},{"size":5040,"mtime":1631941131000,"results":"103","hashOfConfig":"102"},{"size":808,"mtime":1645982043811,"results":"104","hashOfConfig":"102"},{"size":1453,"mtime":1640791686564,"results":"105","hashOfConfig":"102"},{"size":1876,"mtime":1631941131000,"results":"106","hashOfConfig":"102"},{"size":5404,"mtime":1631941131000,"results":"107","hashOfConfig":"102"},{"size":321,"mtime":1631941131000,"results":"108","hashOfConfig":"102"},{"size":1028,"mtime":1631941131000,"results":"109","hashOfConfig":"102"},{"size":778,"mtime":1631941131000,"results":"110","hashOfConfig":"102"},{"size":874,"mtime":1640496585146,"results":"111","hashOfConfig":"102"},{"size":1331,"mtime":1640504959330,"results":"112","hashOfConfig":"102"},{"size":6172,"mtime":1640489679429,"results":"113","hashOfConfig":"102"},{"size":23573,"mtime":1646005799893,"results":"114","hashOfConfig":"102"},{"size":2205,"mtime":1640793482839,"results":"115","hashOfConfig":"102"},{"size":1855,"mtime":1631941131000,"results":"116","hashOfConfig":"102"},{"size":2175,"mtime":1640791537583,"results":"117","hashOfConfig":"102"},{"size":2881,"mtime":1631941131000,"results":"118","hashOfConfig":"102"},{"size":2082,"mtime":1631941131000,"results":"119","hashOfConfig":"102"},{"size":179,"mtime":1631941131000,"results":"120","hashOfConfig":"102"},{"size":3936,"mtime":1631941131000,"results":"121","hashOfConfig":"102"},{"size":1218,"mtime":1631941131000,"results":"122","hashOfConfig":"102"},{"size":345,"mtime":1640294322675,"results":"123","hashOfConfig":"102"},{"size":536,"mtime":1631941131000,"results":"124","hashOfConfig":"102"},{"size":1922,"mtime":1631941131000,"results":"125","hashOfConfig":"102"},{"size":2010,"mtime":1640504805880,"results":"126","hashOfConfig":"102"},{"size":2049,"mtime":1640504792615,"results":"127","hashOfConfig":"102"},{"size":2427,"mtime":1645937965533,"results":"128","hashOfConfig":"102"},{"size":1607,"mtime":1646063821460,"results":"129","hashOfConfig":"102"},{"size":2383,"mtime":1640405888795,"results":"130","hashOfConfig":"102"},{"size":6005,"mtime":1640505782157,"results":"131","hashOfConfig":"102"},{"size":1961,"mtime":1640504771146,"results":"132","hashOfConfig":"102"},{"size":1475,"mtime":1640405882383,"results":"133","hashOfConfig":"102"},{"size":2719,"mtime":1640405333329,"results":"134","hashOfConfig":"102"},{"size":1581,"mtime":1646063825483,"results":"135","hashOfConfig":"102"},{"size":2058,"mtime":1640405809481,"results":"136","hashOfConfig":"102"},{"size":1922,"mtime":1640405561867,"results":"137","hashOfConfig":"102"},{"size":719,"mtime":1631941131000,"results":"138","hashOfConfig":"102"},{"size":2269,"mtime":1640754703101,"results":"139","hashOfConfig":"102"},{"size":2371,"mtime":1640368601180,"results":"140","hashOfConfig":"102"},{"size":92,"mtime":1631941131000,"results":"141","hashOfConfig":"102"},{"size":182,"mtime":1631941131000,"results":"142","hashOfConfig":"102"},{"size":963,"mtime":1640405762930,"results":"143","hashOfConfig":"102"},{"size":599,"mtime":1631941131000,"results":"144","hashOfConfig":"102"},{"size":348,"mtime":1631941131000,"results":"145","hashOfConfig":"102"},{"size":509,"mtime":1631941131000,"results":"146","hashOfConfig":"102"},{"size":272,"mtime":1631941131000,"results":"147","hashOfConfig":"102"},{"size":7455,"mtime":1631941131000,"results":"148","hashOfConfig":"102"},{"size":1214,"mtime":1640296144609,"results":"149","hashOfConfig":"102"},{"size":64,"mtime":1631941131000,"results":"150","hashOfConfig":"102"},{"size":616,"mtime":1631941131000,"results":"151","hashOfConfig":"102"},{"size":1517,"mtime":1631941131000,"results":"152","hashOfConfig":"102"},{"size":574,"mtime":1631941131000,"results":"153","hashOfConfig":"102"},{"size":2072,"mtime":1631941131000,"results":"154","hashOfConfig":"102"},{"size":1513,"mtime":1643395005934,"results":"155","hashOfConfig":"102"},{"size":2041,"mtime":1631941131000,"results":"156","hashOfConfig":"102"},{"size":1491,"mtime":1631941131000,"results":"157","hashOfConfig":"102"},{"size":2415,"mtime":1631941131000,"results":"158","hashOfConfig":"102"},{"size":50,"mtime":1631941131000,"results":"159","hashOfConfig":"102"},{"size":1464,"mtime":1631941131000,"results":"160","hashOfConfig":"102"},{"size":1478,"mtime":1631941131000,"results":"161","hashOfConfig":"102"},{"size":445,"mtime":1631941131000,"results":"162","hashOfConfig":"102"},{"size":57,"mtime":1631941131000,"results":"163","hashOfConfig":"102"},{"size":686,"mtime":1631941131000,"results":"164","hashOfConfig":"102"},{"size":1573,"mtime":1631941131000,"results":"165","hashOfConfig":"102"},{"size":1516,"mtime":1631941131000,"results":"166","hashOfConfig":"102"},{"size":1344,"mtime":1631941131000,"results":"167","hashOfConfig":"102"},{"size":2241,"mtime":1631941131000,"results":"168","hashOfConfig":"102"},{"size":1615,"mtime":1646063824150,"results":"169","hashOfConfig":"102"},{"size":5136,"mtime":1631941131000,"results":"170","hashOfConfig":"102"},{"size":4846,"mtime":1640364929149,"results":"171","hashOfConfig":"102"},{"size":2035,"mtime":1631941131000,"results":"172","hashOfConfig":"102"},{"size":2989,"mtime":1631941131000,"results":"173","hashOfConfig":"102"},{"size":2322,"mtime":1631941131000,"results":"174","hashOfConfig":"102"},{"size":48,"mtime":1631941131000,"results":"175","hashOfConfig":"102"},{"size":886,"mtime":1631941131000,"results":"176","hashOfConfig":"102"},{"size":244,"mtime":1631941131000,"results":"177","hashOfConfig":"102"},{"size":829,"mtime":1631941131000,"results":"178","hashOfConfig":"102"},{"size":564,"mtime":1631941131000,"results":"179","hashOfConfig":"102"},{"size":344,"mtime":1631941131000,"results":"180","hashOfConfig":"102"},{"size":748,"mtime":1631941131000,"results":"181","hashOfConfig":"102"},{"size":339,"mtime":1631941131000,"results":"182","hashOfConfig":"102"},{"size":1041,"mtime":1631941131000,"results":"183","hashOfConfig":"102"},{"size":1587,"mtime":1631941131000,"results":"184","hashOfConfig":"102"},{"size":294,"mtime":1631941131000,"results":"185","hashOfConfig":"102"},{"size":693,"mtime":1631941131000,"results":"186","hashOfConfig":"102"},{"size":796,"mtime":1631941131000,"results":"187","hashOfConfig":"102"},{"size":4486,"mtime":1646062211838,"results":"188","hashOfConfig":"102"},{"size":1909,"mtime":1640690905806,"results":"189","hashOfConfig":"102"},{"size":5158,"mtime":1646062498888,"results":"190","hashOfConfig":"102"},{"size":1957,"mtime":1640494307528,"results":"191","hashOfConfig":"102"},{"size":1992,"mtime":1640490427512,"results":"192","hashOfConfig":"102"},{"size":4209,"mtime":1646061749511,"results":"193","hashOfConfig":"102"},{"size":4223,"mtime":1646062130021,"results":"194","hashOfConfig":"102"},{"size":1999,"mtime":1640489363109,"results":"195","hashOfConfig":"102"},{"size":4215,"mtime":1646061923961,"results":"196","hashOfConfig":"102"},{"size":4243,"mtime":1646061665473,"results":"197","hashOfConfig":"102"},{"size":1962,"mtime":1640484017738,"results":"198","hashOfConfig":"102"},{"size":1938,"mtime":1640488675671,"results":"199","hashOfConfig":"102"},{"size":626,"mtime":1645982187799,"results":"200","hashOfConfig":"102"},{"size":166,"mtime":1645982094583,"results":"201","hashOfConfig":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},"1ag39r7",{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"204"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"204"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"204"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"204"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"204"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"204"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"204"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"204"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"204"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"204"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"204"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"204"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"204"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"204"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"204"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"204"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"204"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"204"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"204"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"204"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"204"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"204"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"204"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"204"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\index.js",[],["427","428","429","430","431","432"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\serviceWorker.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\App.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\routes.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\globalStyles.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\BaseOptionChart.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\ScrollToTop.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\LogoOnlyLayout.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SensorData.js",["433","434","435","436","437","438","439","440","441"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../components/_dashboard/blog';\n//\nimport POSTS from '../_mocks_/blog';\nimport DataTabs from './Widgets/AppDataTabs';\n\nexport default function SensorData() {\n  return (\n    <Page title=\"Sensor Data\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Sensor Data\n          </Typography>\n        </Stack>\n        <DataTabs />\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\SystemHealth.js",["442","443","444","445"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\n\nimport CpuTemp from './Widgets/AppCpuTemp';\nimport RamUsage from './Widgets/AppRamUsage';\nimport GpuTemp from './Widgets/AppGpuTemp';\nimport HealthGrid from './Widgets/HealthGrid';\n\nexport default function SystemHealth() {\n  return (\n    <Page title=\"System Health\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            System Health and Monitoring\n          </Typography>\n        </Stack>\n        <Grid container spacing={{ xs: 1, sm: 2, lg: 3 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n          <Grid item xs={12} md={6} lg={2.6}>\n            <CpuTemp />\n          </Grid>\n          <Grid item xs={12} md={6} lg={2.6}>\n            <GpuTemp />\n          </Grid>\n          <Grid item xs={12} md={6} lg={2.6}>\n            <RamUsage />\n          </Grid>\n          <Grid item xs={8}>\n            <HealthGrid />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\EventViewer.js",["446","447","448","449","450","451"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  { id: 'Event', label: 'Event', minWidth: 300 },\n  {\n    id: 'Type',\n    label: 'Type',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'Severity',\n    label: 'Severity',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'datetime',\n    label: 'Date/Time',\n    minWidth: 170,\n    align: 'right'\n  }\n];\n\nfunction createData(Event, Type, Severity, datetime) {\n  return { Event, Type, Severity, datetime };\n}\n\nconst rows = [\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    'Error',\n    'High',\n    '23 Dec 2020 23:38'\n  )\n];\n\n// ----------------------------------------------------------------------\n\nexport default function EventViewer() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Page title=\"Event Viewer\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Event Viewer\n          </Typography>\n        </Stack>\n        <Paper sx={{ width: '100%', overflow: 'hidden' }} style={{ backgroundColor: '#1f2833' }}>\n          <TableContainer sx={{ minHeight: 693 }}>\n            <Table stickyHeader aria-label=\"sticky table\" style={{ backgroundColor: '#c5c6c7' }}>\n              <TableHead style={{ backgroundColor: '#c5c6c7' }}>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{\n                        minWidth: column.minWidth,\n                        color: '#fff',\n                        backgroundColor: '#45a29e',\n                        fontWeight: 'bolder'\n                      }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell\n                          key={column.id}\n                          align={column.align}\n                          style={{\n                            minWidth: column.minWidth,\n                            color: '#45a29e',\n                            backgroundColor: '#1f2833',\n                            fontSize: '1.2em',\n                            fontFamily: 'monospace'\n                          }}\n                        >\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            style={{\n              color: '#45a29e',\n              backgroundColor: '#1f2833',\n              fontSize: '1.2em',\n              fontFamily: 'monospace'\n            }}\n          />\n        </Paper>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Settings.js",["452","453","454","455","456","457","458","459","460","461","462","463"],"/* eslint-disable react/no-unused-state */\nimport { Icon } from '@iconify/react';\nimport { Link } from 'react-router-dom';\nimport React, { Component, useState, useEffect } from 'react';\nimport Axios from 'axios';\n\n// material\nimport {\n  Grid,\n  Button,\n  Container,\n  Stack,\n  Typography,\n  Slider,\n  Divider,\n  FormGroup,\n  FormControlLabel,\n  Switch,\n  TextField\n} from '@mui/material';\n// components\nimport Tooltip from '@mui/material/Tooltip';\nimport { Box, maxHeight } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport DataService from '../services/db.services';\nimport Page from '../components/Page';\n\nconst marks = [\n  {\n    value: 0,\n    label: '0%'\n  },\n  {\n    value: 20,\n    label: '20%'\n  },\n  {\n    value: 40,\n    label: '40%'\n  },\n  {\n    value: 60,\n    label: '60%'\n  },\n  {\n    value: 80,\n    label: '80%'\n  },\n  {\n    value: 100,\n    label: '100%'\n  }\n];\n\nexport default function Settings() {\n  const [PCBLEDS, setPCBLEDS] = useState(''); // PCB leds on/off\n  const [FRONTLEDS, setFRONTLEDS] = useState(''); // front leds on/off\n  const [COMMLEDS, setCOMMLEDS] = useState(''); // communication Ai on/off\n  const [BEACONLED, setBEACONLED] = useState(''); // beacon led on/off\n\n  const [CONVAI, setCONVAI] = useState(''); // conversationnal ai on/off\n  const [ORECOGN, setORECOGN] = useState(''); // object recognition on/off\n  const [HRECOGN, setHRECOGN] = useState(''); // human recognition on/off\n  const [EMAPPING, setEMAPPING] = useState(''); // environement mapping on/off\n\n  const [FCOLLISION, setFCOLLISION] = useState(''); // front collision sensing on/off\n  const [SCOLLISION, setSCOLLISION] = useState(''); // side collision sensing on/off\n  const [FEDGESENSNG, setFEDGESENSNG] = useState(''); // front edge sensing on/off\n  const [BEDGESENSNG, setBEDGESENSNG] = useState(''); // back edge sensing on/off\n\n  const [GAS, setGAS] = useState(''); // front collision sensing on/off\n  const [TEMPERATURE, setTEMPERATURE] = useState(''); // side collision sensing on/off\n  const [HUMIDITY, setHUMIDITY] = useState(''); // front edge sensing on/off\n  const [TILT, setTILT] = useState(''); // back edge sensing on/off\n  const [PHOTORES, setPHOTORES] = useState(''); // front collision sensing on/off\n  const [FLAME, setFLAME] = useState(''); // side collision sensing on/off\n  const [SMOKE, setSMOKE] = useState(''); // front edge sensing on/off\n  const [GPS, setGPS] = useState(''); // back edge sensing on/off\n\n  const sumbitSettings = () => {\n    // eslint-disable-next-line prettier/prettier\n    Axios.post(\"http://localhost:3001/api/SubtmitSettings\", {\n      FLED: FRONTLEDS,\n      PCBLED: PCBLEDS,\n      COMMLED: COMMLEDS,\n      BEACON: BEACONLED,\n\n      CONVAII: CONVAI,\n      ORECOGNN: ORECOGN,\n      HRECOGNN: HRECOGN,\n      EMAPPINGG: EMAPPING,\n\n      FCOLLISIONN: FCOLLISION,\n      SCOLLISIONN: SCOLLISION,\n      FEDGESENSNGG: FEDGESENSNG,\n      BEDGESENSNGG: BEDGESENSNG,\n\n      GASS: GAS,\n      TEMPERATUREE: TEMPERATURE,\n      HUMIDITYY: HUMIDITY,\n      TILTT: TILT,\n      PHOTORESS: PHOTORES,\n      FLAMEE: FLAME,\n      SMOKEE: SMOKE,\n      GPSS: GPS\n    }).then(() => {\n      alert('success!');\n    });\n  };\n\n  return (\n    <Page title=\"Settings\">\n      <Container maxWidth=\"xl\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={0}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Settings\n          </Typography>\n        </Stack>\n        <Container maxWidth=\"xl\">\n          <Grid paddingTop={1}>\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Lights & Leds\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Front Lights 12V\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setFRONTLEDS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    color=\"red\"\n                    style={{ color: '#fff', alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Top Pcb Status LEDs\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setPCBLEDS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Serial Communication LEDs\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setCOMMLEDS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Beacon LED\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setBEACONLED(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid paddingTop={1}>\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Artificial Intelligence\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Conversational AI\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setCONVAI(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Object Recognition\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setORECOGN(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Human Recognition\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setHRECOGN(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*This setting will greatly affect CPU & GPU performance & temperatures*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Environment Mapping\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setEMAPPING(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid paddingTop={1}>\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Collision & Edge Detection\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Front Collision Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setFCOLLISION(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Side Collision Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setSCOLLISION(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Front Edge Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setFEDGESENSNG(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n              <Grid item xs={2} style={{ color: '#fff' }}>\n                <Tooltip\n                  disableFocusListener\n                  disableTouchListener\n                  title=\"*By turning off this setting, the robot may commit suicide*\"\n                >\n                  <FormGroup>\n                    <Typography\n                      variant=\"h7\"\n                      gutterBottom\n                      style={{ color: '#45a29e', alignSelf: 'center' }}\n                    >\n                      Back Edge Sensing\n                    </Typography>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          onChange={(e) => {\n                            setBEDGESENSNG(e.target.checked);\n                          }}\n                        />\n                      }\n                      label=\"OFF/ON\"\n                      style={{ alignSelf: 'center' }}\n                    />\n                  </FormGroup>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid\n            paddingTop={1}\n            style={{\n              overflow: 'hidden'\n            }}\n          >\n            <Divider>\n              <Typography variant=\"h5\" gutterBottom style={{ color: '#66fcf1' }}>\n                Sensors\n              </Typography>\n            </Divider>\n            <Grid container spacing={{ xs: 10 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Gas\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setGAS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Temperature\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setTEMPERATURE(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Humidity\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setHUMIDITY(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Tilt\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setTILT(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Photoresistor\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setPHOTORES(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Flame\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setFLAME(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    Smoke\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setSMOKE(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n              <Grid item xs={1} style={{ color: '#fff' }}>\n                <FormGroup>\n                  <Typography\n                    variant=\"h7\"\n                    gutterBottom\n                    style={{ color: '#45a29e', alignSelf: 'center' }}\n                  >\n                    GPS\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={(e) => {\n                          setGPS(e.target.checked);\n                        }}\n                      />\n                    }\n                    label=\"OFF/ON\"\n                    style={{ alignSelf: 'center' }}\n                  />\n                </FormGroup>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid container paddingTop={2}>\n            <Divider orientation=\"horizontal\" flexItem />\n\n            <Grid item xs={12} style={{ color: '#fff' }} align=\"center\">\n              <Button\n                onClick={sumbitSettings}\n                color=\"primary\"\n                variant=\"contained\"\n                style={{\n                  color: '#fff',\n                  fontWeight: 'bolder',\n                  fontSize: '1.1em',\n                  backgroundColor: '#45a29e',\n                  maxWidth: '300px',\n                  maxHeight: '30px',\n                  minWidth: '150px',\n                  minHeight: '55px',\n                  top: '38px',\n                  boxShadow: 'none'\n                }}\n              >\n                Submit Changes\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\DashboardApp.js",["464"],"// material\nimport { Box, Grid, Container, Typography, Stack, item } from '@mui/material';\n\n// components\nimport Page from '../components/Page';\nimport { AppWebsiteVisits, AppWarningsReports } from '../components/_dashboard/app';\nimport AppSuccessReports from './Widgets/AppSuccessReports';\nimport CurrentTask from './Widgets/AppCurrentTask';\nimport LinearWithValueLabel from './Widgets/AppRessourceMonitor';\nimport AppErrorReports from './Widgets/AppErrorReports';\nimport AppLatestEvent from './Widgets/AppLatestEvent';\nimport AppDistributionOfTime from './Widgets/AppDistributionOfTime';\nimport AppDistributionOfTask from './Widgets/AppDistributionOfTask';\n// ----------------------------------------------------------------------\n\nexport default function DashboardApp() {\n  return (\n    <Page title=\"Dashboard\">\n      <Container maxWidth=\"xl\">\n        <Box sx={{ pb: 5 }}>\n          <Typography style={{ color: '#66fcf1' }} variant=\"h4\">\n            Hi Félix, Here's whats happening!\n          </Typography>\n        </Box>\n\n        <Grid container spacing={{ xs: 1, sm: 2, lg: 3 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n          <Grid item xs={1} sm={1} md={1}>\n            <Stack spacing={2}>\n              <item>\n                <AppErrorReports />\n              </item>\n              <item>\n                <AppWarningsReports />\n              </item>\n              <item>\n                <AppSuccessReports />\n              </item>\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <AppLatestEvent />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={3}>\n            <Stack spacing={2}>\n              <item>\n                <LinearWithValueLabel />\n              </item>\n              <item>\n                <CurrentTask />\n              </item>\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={9}>\n            <AppWebsiteVisits />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <AppDistributionOfTime />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={4}>\n            <AppDistributionOfTask />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Page404.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\LiveCamera.js",["465","466","467","468","469","470","471"],"import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { Grid, Button, Container, Stack, Typography, TextField, Divider } from '@mui/material';\n// components\nimport { Joystick } from 'react-joystick-component';\n\nimport SendIcon from '@mui/icons-material/Send';\nimport Page from '../components/Page';\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../components/_dashboard/blog';\nimport Image from './dummy.png'; // Import using relative path\n\nexport default function LiveCamera() {\n  return (\n    <Page title=\"Live View\">\n      <Container maxWidth=\"xl\" overflow=\"hidden\" minHeight=\"1800px\">\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={0}>\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\n            Live View\n          </Typography>\n        </Stack>\n        <Grid container columns={{ xs: 8, sm: 8, md: 8, lg: 8 }} minHeight=\"769px\">\n          <Grid\n            item\n            xs={8}\n            style={{\n              minWidth: '1296px',\n              minHeight: '729px',\n              maxHeight: '729px',\n              backgroundImage: `url(${Image})`\n            }}\n          >\n            <Grid xs={1} style={{ top: '525px', left: '3.6%', position: 'relative' }}>\n              <Joystick size={150} baseColor=\"#45a29e\" stickColor=\"#c5c6c7\" />\n            </Grid>\n            <Grid xs={1} style={{ top: '81%', left: '57.5%', position: 'relative' }}>\n              <TextField\n                style={{\n                  maxWidth: '500px',\n                  minWidth: '450px'\n                }}\n                color=\"primary\"\n                textInputStyle={{ color: 'green' }}\n                label=\"Command\"\n              />\n            </Grid>\n            <Grid xs={1} style={{ top: '75%', left: '88.5%', position: 'relative' }}>\n              <Button variant=\"contained\" endIcon={<SendIcon />} style={{ boxShadow: 'none' }}>\n                Send Command\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\palette.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\typography.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shape.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\shadows.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Logo.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Page.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\blog.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRamUsage.js",["472"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: 'Robot Sensors',\r\n    type: 'line',\r\n    data: [30, 52, 59, 36, 25, 36, 30, 45, 35, 64, 39]\r\n  }\r\n];\r\n\r\nexport default function RamUsage() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader title=\"Ram Usage  over Time\" style={{ color: '#45a29e', textAlign: 'center' }} />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGpuTemp.js",["473"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: 'Robot Sensors',\r\n    type: 'line',\r\n    data: [36, 30, 45, 35, 64, 52, 30, 25, 59, 36, 39]\r\n  }\r\n];\r\n\r\nexport default function GpuTemp() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 10,\r\n            color: '#ff4747',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 40,\r\n            color: '#fff647',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 60,\r\n            color: '#4cd93d',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 90,\r\n            color: '#47edff',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Graphics Card Temperature over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'center' }}\r\n      />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDataTabs.js",["474","475","476","477"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport SendIcon from '@mui/icons-material/Send';\nimport Refresh from '@iconify/icons-eva/refresh-fill';\nimport { Button, Icon } from '@mui/material';\nimport AppTempSensor from './AppTempSensor';\nimport AppHumiditySensor from './AppHumiditySensor';\nimport AppTemperatureGrids from './AppTemperatureGrids';\nimport AppHumidityGrids from './AppHumidityGrid';\nimport AppVoltageSensor from './AppVoltageSensor';\nimport AppVoltageGrids from './AppVoltageGrid';\nimport AppAmperageGrids from './AppAmperageGrid';\nimport AppAmperageSensor from './AppAmperageSensor';\nimport AppGassSensor from './AppGasSensor';\nimport AppGasGrids from './AppGasGrid';\nimport AppPhotoresistorSensor from './AppPhotoresistorSensor';\nimport AppPhotoresistorGrid from './AppPhotoresistorGrid';\n\nexport default function DataTabs() {\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab label=\"Temperature\" value=\"1\" />\n            <Tab label=\"Humidity\" value=\"2\" />\n            <Tab label=\"Voltage\" value=\"3\" />\n            <Tab label=\"Amperage\" value=\"4\" />\n            <Tab label=\"Gas\" value=\"5\" />\n            <Tab label=\"Photoresistor\" value=\"6\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"1\">\n          <AppTempSensor />\n          <AppTemperatureGrids />\n        </TabPanel>\n        <TabPanel value=\"2\">\n          <AppHumiditySensor />\n          <AppHumidityGrids />\n        </TabPanel>\n        <TabPanel value=\"3\">\n          <AppVoltageSensor />\n          <AppVoltageGrids />\n        </TabPanel>\n        <TabPanel value=\"4\">\n          <AppAmperageSensor />\n          <AppAmperageGrids />\n        </TabPanel>\n        <TabPanel value=\"5\">\n          <AppGassSensor />\n          <AppGasGrids />\n        </TabPanel>\n        <TabPanel value=\"6\">\n          <AppPhotoresistorSensor />\n          <AppPhotoresistorGrid />\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppSuccessReports.js",["478"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppRessourceMonitor.js",["479","480","481","482"],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nimport { Icon } from '@iconify/react';\nimport bugFilled from '@iconify/icons-ant-design/bug-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../utils/formatNumber';\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress\n          variant=\"determinate\"\n          {...props}\n          style={{ padding: '15px' }}\n          color=\"inherit\"\n        />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography\n          style={{ color: '#66fcf1' }}\n          variant=\"body2\"\n          color=\"text.secondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  padding: theme.spacing(2.3, 2.7),\n  color: '#66fcf1',\n  backgroundColor: '#1f2833'\n}));\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired\n};\n\nexport default function LinearWithValueLabel() {\n  return (\n    <RootStyle>\n      <Typography\n        variant=\"h5\"\n        sx={{ opacity: 1 }}\n        style={{ fontWeight: 'bold', textAlign: 'Left' }}\n      >\n        Ressource Monitor\n      </Typography>\n      <Box sx={{ width: '100%' }}>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n          CPU:\n        </Typography>\n        <LinearProgressWithLabel value={40} />\n      </Box>\n      <Box sx={{ width: '100%' }}>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n          GPU:\n        </Typography>\n        <LinearProgressWithLabel value={90} />\n      </Box>\n      <Box sx={{ width: '100%' }}>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n          RAM:\n        </Typography>\n        <LinearProgressWithLabel value={30} />\n      </Box>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\HealthGrid.js",["483","484","485","486","487","488"],"import {\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Divider,\r\n  Card\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Page from '../../components/Page';\r\n\r\nconst ram1 = 6.2;\r\nconst ram2 = 5.8;\r\nconst cpu1 = 43;\r\nconst cpu2 = 51;\r\nconst gpu1 = 48;\r\nconst gpu2 = 57;\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  color: '#000000',\r\n  width: '33%',\r\n  height: '129px',\r\n  backgroundColor: 'transparent',\r\n  overflow: 'hidden'\r\n}));\r\nexport default function HealthGrid() {\r\n  return (\r\n    <Page overflow=\"hidden\">\r\n      <Container maxWidth=\"xl\" overflow=\"hidden\">\r\n        <Grid\r\n          container\r\n          spacing={{ xs: 2 }}\r\n          columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}\r\n          overflow=\"hidden\"\r\n        >\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Cpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {cpu1}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Gpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {gpu1}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Current Ram Usage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {ram1}Gb\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Cpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {cpu2}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Gpu Temperature:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {gpu2}°C\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n          <RootStyle item xs={2.6} align=\"center\" overflow=\"hidden\">\r\n            <Grid\r\n              style={{\r\n                color: '#45a29e',\r\n                borderRadius: '20px',\r\n                backgroundColor: '#1f2833',\r\n                width: '90%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\r\n                Average Ram usage:\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\r\n                {ram2}Gb\r\n              </Typography>\r\n            </Grid>\r\n          </RootStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCpuTemp.js",["489"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: 'Robot Sensors',\n    type: 'line',\n    data: [35, 64, 52, 59, 30, 25, 36, 36, 30, 45, 39]\n  }\n];\n\nexport default function CpuTemp() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 10,\n            color: '#ff4747',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 60,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#47edff',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Processor Temperature over Time\"\n        style={{ color: '#45a29e', textAlign: 'center' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppCurrentTask.js",["490","491","492","493"],"import { Icon } from '@iconify/react';\nimport alerttrianglefill from '@iconify/icons-eva/alert-triangle-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, CircularProgress, Typography } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'Left',\n  padding: theme.spacing(4.4, 3),\n  color: '#66fcf1',\n  backgroundColor: '#1f2833'\n}));\n\n// ----------------------------------------------------------------------\nconst current = 'Moving to Target location';\nconst next = 'Analysing Target';\n\nexport default function CurrentTask() {\n  return (\n    <RootStyle>\n      <Typography variant=\"h5\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n        Current Task:\n      </Typography>\n\n      <Typography variant=\"h4\" style={{ color: '#45a29e', padding: (5, 5) }}>\n        {current}{' '}\n        <CircularProgress\n          variant=\"indeterminate\"\n          disableShrink\n          size={18}\n          thickness={4}\n          style={{ color: '#66fcf1' }}\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" sx={{ opacity: 1 }} style={{ fontWeight: 'bold' }}>\n        Next Task:\n      </Typography>\n\n      <Typography variant=\"h4\" style={{ color: '#45a29e', padding: (5, 5) }}>\n        {next}\n      </Typography>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppLatestEvent.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppErrorReports.js",["494"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTask.js",["495"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Card, CardHeader } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_HEIGHT = 392;\nconst LEGEND_HEIGHT = 72;\n\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\n  height: CHART_HEIGHT,\n  marginTop: theme.spacing(2),\n  '& .apexcharts-canvas svg': {\n    height: CHART_HEIGHT\n  },\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\n    overflow: 'visible'\n  },\n  '& .apexcharts-legend': {\n    height: LEGEND_HEIGHT,\n    alignContent: 'center',\n    position: 'relative !important',\n    borderTop: `solid 1px ${theme.palette.divider}`,\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [{ name: 'Series 1', data: [80, 50, 30, 40, 100, 20] }];\n\nexport default function AppDistributionOfTask() {\n  const theme = useTheme();\n\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: {\n      width: 2,\n      colors: ['#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1', '#66fcf1']\n    },\n    fill: {\n      opacity: 0.7,\n      colors: ['#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e']\n    },\n    legend: { floating: true, horizontalAlign: 'center' },\n    xaxis: {\n      categories: ['Standby', 'Talking', 'Confused', 'Thinking', 'Moving', 'In Error'],\n      labels: {\n        style: {\n          colors: ['#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e', '#45a29e']\n        }\n      }\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', color: '#66fcf1', boxShadow: 'none' }}>\n      <CardHeader title=\"Distribution of Tasks\" />\n      <ChartWrapperStyle dir=\"ltr\">\n        <ReactApexChart type=\"radar\" series={CHART_DATA} options={chartOptions} height={380} />\n      </ChartWrapperStyle>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppDistributionOfTime.js",["496"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Card, CardHeader } from '@mui/material';\n// utils\nimport { fNumber } from '../../utils/formatNumber';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_HEIGHT = 372;\nconst LEGEND_HEIGHT = 0;\n\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\n  height: CHART_HEIGHT,\n  marginTop: theme.spacing(5),\n  '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\n    overflow: 'visible'\n  },\n  '& .apexcharts-legend': {\n    height: LEGEND_HEIGHT,\n    alignContent: 'center',\n    position: 'relative !important',\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [4344, 5435, 1443, 4443];\n\nexport default function AppDistributionOfTime() {\n  const chartOptions = merge(BaseOptionChart(), {\n    colors: ['#45a29e', '#91dbd5', '#1bf5e3', '#28bdb2'],\n    labels: ['Path Finding', 'Moving', 'Standby', 'Turning'],\n    legend: { show: false },\n    dataLabels: { enabled: true },\n    tooltip: {\n      fillSeriesColor: false,\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: (seriesName) => `${seriesName}`\n        }\n      }\n    },\n    plotOptions: {\n      pie: { donut: { labels: { show: false } } }\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', color: '#66fcf1', boxShadow: 'none' }}>\n      <CardHeader title=\"Distribution of Time\" />\n      <ChartWrapperStyle dir=\"ltr\">\n        <ReactApexChart type=\"pie\" series={CHART_DATA} options={chartOptions} height={360} />\n      </ChartWrapperStyle>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardNavbar.js",["497","498","499","500","501"],"import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Icon } from '@iconify/react';\nimport BellFill from '@iconify/icons-eva/bell-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Stack, AppBar, Toolbar, IconButton, Badge } from '@mui/material';\n// components\nimport { useNavigate } from 'react-router-dom';\nimport { MHidden } from '../../components/@material-extend';\n//\nimport Searchbar from './Searchbar';\nimport AccountPopover from './AccountPopover';\nimport LanguagePopover from './LanguagePopover';\nimport NotificationsPopover from './NotificationsPopover';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\nconst APPBAR_MOBILE = 64;\nconst APPBAR_DESKTOP = 92;\n\nconst RootStyle = styled(AppBar)(({ theme }) => ({\n  boxShadow: 'none',\n  backdropFilter: 'blur(6px)',\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n  backgroundColor: '#1f2833',\n  [theme.breakpoints.up('lg')]: {\n    width: `calc(100% - ${DRAWER_WIDTH + 1}px)`\n  }\n}));\n\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\n  minHeight: APPBAR_MOBILE,\n  [theme.breakpoints.up('lg')]: {\n    minHeight: APPBAR_DESKTOP,\n    padding: theme.spacing(0, 5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardNavbar.propTypes = {\n  onOpenSidebar: PropTypes.func\n};\n\nexport default function DashboardNavbar({ onOpenSidebar }) {\n  const navigate = useNavigate();\n\n  function handleClick() {\n    navigate('/dashboard/EventViewer');\n  }\n  return (\n    <RootStyle>\n      <ToolbarStyle>\n        <MHidden width=\"lgUp\">\n          <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\n            <Icon icon={BellFill} />\n          </IconButton>\n        </MHidden>\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={{ xs: 0.5, sm: 1.5 }}>\n          <IconButton\n            aria-label=\"Notifications\"\n            onClick={() => {\n              handleClick();\n            }}\n          >\n            <Badge badgeContent={99} color=\"secondary\">\n              <Icon icon={BellFill} />\n            </Badge>\n          </IconButton>\n        </Stack>\n      </ToolbarStyle>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\DashboardSidebar.js",["502","503","504","505","506"],"import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\n// components\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\nimport { MHidden } from '../../components/@material-extend';\n//\nimport sidebarConfig from './SidebarConfig';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH,\n    backgroundColor: 'red'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\n\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: '100%',\n        '& .simplebar-content': { height: '100%', display: 'flex', flexDirection: 'column' }\n      }}\n    >\n      <Box sx={{ px: 2.5, py: 3 }}>\n        <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\n          <Logo />\n        </Box>\n      </Box>\n\n      <NavSection navConfig={sidebarConfig} />\n\n      <Box sx={{ flexGrow: 1 }} />\n    </Scrollbar>\n  );\n  return (\n    <RootStyle style={{ backgroundColor: '#1f2833' }}>\n      <MHidden width=\"lgUp\">\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      <MHidden width=\"lgDown\">\n        <Drawer\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: DRAWER_WIDTH,\n              bgcolor: '#1f2833'\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatNumber.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\mockImages.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\utils\\formatTime.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Autocomplete.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\NotificationsPopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\SidebarConfig.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\charts\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\MotionContainer.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppWeeklySales.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSort.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTrafficBySite.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppBugsOverTime.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppTasks.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewUsers.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppNewsUpdate.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\MenuPopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\Scrollbar.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\Wrap.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceOut.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\animate\\variants\\bounce\\BounceIn.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppItemOrders.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\app\\AppConversionRates.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppWarningsReports.js",["507"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\_dashboard\\blog\\BlogPostCard.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\NavSection.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\LanguagePopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\AccountPopover.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\layouts\\dashboard\\Searchbar.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\index.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\SvgIconStyle.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\_mocks_\\account.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\components\\@material-extend\\MHidden.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\IconButton.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Typography.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Backdrop.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Tooltip.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Button.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Input.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Paper.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Lists.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\theme\\overrides\\Card.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorGrid.js",["508","509","510","511","512","513","514","515","516"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppPhotoresistorSensor.js",["517","518","519"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography, Button } from '@mui/material';\r\n//\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Luminosity (Lm)',\r\n    type: 'line',\r\n    data: [400, 725, 536, 730, 645, 735, 564, 552, 659, 536, 639]\r\n  }\r\n];\r\n\r\nexport default function AppPhotoresistorSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 1,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        colorStops: [\r\n          {\r\n            offset: 1,\r\n            color: '#fff',\r\n            opacity: 1\r\n          },\r\n          {\r\n            offset: 100,\r\n            color: '#000000',\r\n            opacity: 1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader\r\n        title=\"Luminosity (Lm) over Time\"\r\n        style={{ color: '#45a29e', textAlign: 'Left' }}\r\n      />\r\n\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasGrid.js",["520","521","522","523","524","525"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppGasSensor.js",["526"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../components/charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: ' Gas 1',\r\n    type: 'line',\r\n    data: [1100, 8000, 11000, 12500, 13500, 9500, 3500, 17400, 6300, 3200, 15500]\r\n  },\r\n  {\r\n    name: ' Gas 2',\r\n    type: 'line',\r\n    data: [17400, 6300, 3200, 1100, 8000, 11000, 12500, 13500, 9500, 3500, 15500]\r\n  },\r\n  {\r\n    name: ' Gas 3',\r\n    type: 'line',\r\n    data: [3500, 15500, 17400, 12500, 13500, 9500, 6300, 3200, 1100, 8000, 11000]\r\n  },\r\n  {\r\n    name: ' Gas 4',\r\n    type: 'line',\r\n    data: [12500, 13500, 9500, 6300, 3500, 15500, 17400, 3200, 1100, 8000, 11000]\r\n  },\r\n  {\r\n    name: ' Gas 5',\r\n    type: 'line',\r\n    data: [9500, 6300, 3200, 1100, 8000, 3500, 15500, 17400, 12500, 13500, 11000]\r\n  }\r\n];\r\n\r\nexport default function AppGasSensor() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    stroke: { width: '3', curve: 'smooth' },\r\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\r\n    legend: { show: false },\r\n    labels: [\r\n      '01/01/2003',\r\n      '02/01/2003',\r\n      '03/01/2003',\r\n      '04/01/2003',\r\n      '05/01/2003',\r\n      '06/01/2003',\r\n      '07/01/2003',\r\n      '08/01/2003',\r\n      '09/01/2003',\r\n      '10/01/2003',\r\n      '11/01/2003'\r\n    ],\r\n    xaxis: { type: 'datetime' },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\r\n      <CardHeader title=\"Gas Particles (%)\" style={{ color: '#45a29e', textAlign: 'Left' }} />\r\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\r\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageSensor.js",["527"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Power Draw (mW)',\n    type: 'line',\n    data: [12500, 13500, 9500, 3500, 15500, 17400, 6300, 3200, 1100, 8000, 11000]\n  }\n];\n\nexport default function AppAmperageSensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 0,\n            color: '#ff4747',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 70,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#4cd93d',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Power Draw (mW) over Time\"\n        style={{ color: '#45a29e', textAlign: 'Left' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageGrid.js",["528","529","530","531","532","533"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppAmperageGrid.js",["534","535","536","537","538","539"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppVoltageSensor.js",["540"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Voltage (mV)',\n    type: 'line',\n    data: [13500, 13500, 13500, 13500, 13500, 13400, 13300, 13200, 13100, 13000, 11000]\n  }\n];\n\nexport default function AppVoltageSensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 0,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 10,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '#ff4747',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Battery Voltage (mV) over Time\"\n        style={{ color: '#45a29e', textAlign: 'Left' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumidityGrid.js",["541","542","543","544","545","546"],"import {\n  Grid,\n  Button,\n  Container,\n  Stack,\n  Typography,\n  TextField,\n  Divider,\n  Card\n} from '@mui/material';\n// components\n\nimport { alpha, styled } from '@mui/material/styles';\nimport Axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Page from '../../components/Page';\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  color: '#000000',\n  width: '25%',\n  height: '169px',\n  backgroundColor: 'transparent'\n}));\nexport default function AppHumidityGrids() {\n  const [MIN, setMIN] = useState('');\n  const [AVG, setAVG] = useState('');\n  const [MAX, setMAX] = useState('');\n  const [CURRENT, setCURRENT] = useState('');\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/getHumidity').then((response) => {\n      setAVG(response.data.at(0).AVERAGE);\n      setMIN(response.data.at(0).MINIMUM);\n      setMAX(response.data.at(0).MAXIMUM);\n      setCURRENT(response.data.at(0).CURRENT);\n    });\n  }, []);\n  return (\n    <Page>\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={{ xs: 0 }} columns={{ xs: 8, sm: 8, md: 8, lg: 8 }}>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Current Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {CURRENT}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Minimum Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {MIN}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Average Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {AVG}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n          <RootStyle item xs={2} align=\"center\">\n            <Grid\n              style={{\n                color: '#45a29e',\n                borderRadius: '20px',\n                backgroundColor: '#1f2833',\n                width: '90%',\n                height: '80%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n            >\n              <Typography variant=\"h4\" gutterBottom style={{ color: '#45a29e' }}>\n                Maximum Humidity:\n              </Typography>\n              <Typography variant=\"h2\" gutterBottom style={{ color: '#66fcf1' }}>\n                {MAX}%\n              </Typography>\n            </Grid>\n          </RootStyle>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTemperatureGrids.js",["547","548","549","550","551","552"],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppTempSensor.js",["553"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Temperature (C)',\n    type: 'line',\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n  }\n];\n\nexport default function AppTempSensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 10,\n            color: '#ff4747',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 60,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#47edff',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader\n        title=\"Temperature (C) over Time\"\n        style={{ color: '#45a29e', textAlign: 'Left' }}\n      />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\pages\\Widgets\\AppHumiditySensor.js",["554"],"import { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\n//\nimport { BaseOptionChart } from '../../components/charts';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [\n  {\n    name: ' Humidity (%)',\n    type: 'line',\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n  }\n];\n\nexport default function AppHumiditySensor() {\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { width: '3', curve: 'smooth' },\n    plotOptions: { bar: { columnWidth: '11%', borderRadius: 4 } },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 1,\n        opacityFrom: 1,\n        opacityTo: 1,\n        colorStops: [\n          {\n            offset: 10,\n            color: '#47edff',\n            opacity: 1\n          },\n          {\n            offset: 40,\n            color: '#4cd93d',\n            opacity: 1\n          },\n          {\n            offset: 60,\n            color: '#fff647',\n            opacity: 1\n          },\n          {\n            offset: 90,\n            color: '#ff4747',\n            opacity: 1\n          }\n        ]\n      }\n    },\n    labels: [\n      '01/01/2003',\n      '02/01/2003',\n      '03/01/2003',\n      '04/01/2003',\n      '05/01/2003',\n      '06/01/2003',\n      '07/01/2003',\n      '08/01/2003',\n      '09/01/2003',\n      '10/01/2003',\n      '11/01/2003'\n    ],\n    xaxis: { type: 'datetime' },\n    tooltip: {\n      shared: true,\n      intersect: false\n    }\n  });\n\n  return (\n    <Card style={{ backgroundColor: '#1f2833', boxShadow: 'none' }}>\n      <CardHeader title=\"Humidity (%) over Time\" style={{ color: '#45a29e', textAlign: 'Left' }} />\n      <Box sx={{ p: 3, pb: 1 }} dir=\"ltr\">\n        <ReactApexChart type=\"line\" series={CHART_DATA} options={chartOptions} height={364} />\n      </Box>\n    </Card>\n  );\n}\n","C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\services\\db.services.js",[],"C:\\Users\\Filouuuuuu\\Desktop\\robot webapp\\src\\http-common.js",[],{"ruleId":"555","replacedBy":"556"},{"ruleId":"557","replacedBy":"558"},{"ruleId":"559","replacedBy":"560"},{"ruleId":"561","replacedBy":"562"},{"ruleId":"563","replacedBy":"564"},{"ruleId":"565","replacedBy":"566"},{"ruleId":"567","severity":1,"message":"568","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":14},{"ruleId":"567","severity":1,"message":"571","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":16},{"ruleId":"567","severity":1,"message":"572","line":3,"column":18,"nodeType":"569","messageId":"570","endLine":3,"endColumn":28},{"ruleId":"567","severity":1,"message":"573","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":14},{"ruleId":"567","severity":1,"message":"574","line":5,"column":16,"nodeType":"569","messageId":"570","endLine":5,"endColumn":22},{"ruleId":"567","severity":1,"message":"575","line":8,"column":10,"nodeType":"569","messageId":"570","endLine":8,"endColumn":22},{"ruleId":"567","severity":1,"message":"576","line":8,"column":24,"nodeType":"569","messageId":"570","endLine":8,"endColumn":37},{"ruleId":"567","severity":1,"message":"577","line":8,"column":39,"nodeType":"569","messageId":"570","endLine":8,"endColumn":54},{"ruleId":"567","severity":1,"message":"578","line":10,"column":8,"nodeType":"569","messageId":"570","endLine":10,"endColumn":13},{"ruleId":"567","severity":1,"message":"568","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":14},{"ruleId":"567","severity":1,"message":"571","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":16},{"ruleId":"567","severity":1,"message":"572","line":3,"column":18,"nodeType":"569","messageId":"570","endLine":3,"endColumn":28},{"ruleId":"567","severity":1,"message":"574","line":5,"column":16,"nodeType":"569","messageId":"570","endLine":5,"endColumn":22},{"ruleId":"567","severity":1,"message":"568","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":14},{"ruleId":"567","severity":1,"message":"571","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":16},{"ruleId":"567","severity":1,"message":"572","line":3,"column":18,"nodeType":"569","messageId":"570","endLine":3,"endColumn":28},{"ruleId":"567","severity":1,"message":"573","line":14,"column":10,"nodeType":"569","messageId":"570","endLine":14,"endColumn":14},{"ruleId":"567","severity":1,"message":"574","line":14,"column":16,"nodeType":"569","messageId":"570","endLine":14,"endColumn":22},{"ruleId":"567","severity":1,"message":"579","line":131,"column":23,"nodeType":"569","messageId":"570","endLine":131,"endColumn":37},{"ruleId":"567","severity":1,"message":"568","line":2,"column":10,"nodeType":"569","messageId":"570","endLine":2,"endColumn":14},{"ruleId":"567","severity":1,"message":"580","line":3,"column":10,"nodeType":"569","messageId":"570","endLine":3,"endColumn":14},{"ruleId":"567","severity":1,"message":"581","line":4,"column":17,"nodeType":"569","messageId":"570","endLine":4,"endColumn":26},{"ruleId":"567","severity":1,"message":"582","line":4,"column":38,"nodeType":"569","messageId":"570","endLine":4,"endColumn":47},{"ruleId":"567","severity":1,"message":"583","line":14,"column":3,"nodeType":"569","messageId":"570","endLine":14,"endColumn":9},{"ruleId":"567","severity":1,"message":"584","line":19,"column":3,"nodeType":"569","messageId":"570","endLine":19,"endColumn":12},{"ruleId":"567","severity":1,"message":"585","line":23,"column":10,"nodeType":"569","messageId":"570","endLine":23,"endColumn":13},{"ruleId":"567","severity":1,"message":"586","line":23,"column":15,"nodeType":"569","messageId":"570","endLine":23,"endColumn":24},{"ruleId":"567","severity":1,"message":"587","line":24,"column":8,"nodeType":"569","messageId":"570","endLine":24,"endColumn":17},{"ruleId":"567","severity":1,"message":"588","line":25,"column":8,"nodeType":"569","messageId":"570","endLine":25,"endColumn":20},{"ruleId":"567","severity":1,"message":"589","line":26,"column":8,"nodeType":"569","messageId":"570","endLine":26,"endColumn":19},{"ruleId":"567","severity":1,"message":"590","line":29,"column":7,"nodeType":"569","messageId":"570","endLine":29,"endColumn":12},{"ruleId":"567","severity":1,"message":"591","line":2,"column":51,"nodeType":"569","messageId":"570","endLine":2,"endColumn":55},{"ruleId":"567","severity":1,"message":"568","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":14},{"ruleId":"567","severity":1,"message":"571","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":16},{"ruleId":"567","severity":1,"message":"572","line":3,"column":18,"nodeType":"569","messageId":"570","endLine":3,"endColumn":28},{"ruleId":"567","severity":1,"message":"592","line":5,"column":65,"nodeType":"569","messageId":"570","endLine":5,"endColumn":72},{"ruleId":"567","severity":1,"message":"575","line":11,"column":10,"nodeType":"569","messageId":"570","endLine":11,"endColumn":22},{"ruleId":"567","severity":1,"message":"576","line":11,"column":24,"nodeType":"569","messageId":"570","endLine":11,"endColumn":37},{"ruleId":"567","severity":1,"message":"577","line":11,"column":39,"nodeType":"569","messageId":"570","endLine":11,"endColumn":54},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"594","line":7,"column":8,"nodeType":"569","messageId":"570","endLine":7,"endColumn":16},{"ruleId":"567","severity":1,"message":"595","line":8,"column":8,"nodeType":"569","messageId":"570","endLine":8,"endColumn":15},{"ruleId":"567","severity":1,"message":"574","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":16},{"ruleId":"567","severity":1,"message":"568","line":9,"column":18,"nodeType":"569","messageId":"570","endLine":9,"endColumn":22},{"ruleId":"567","severity":1,"message":"596","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":15},{"ruleId":"567","severity":1,"message":"568","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":14},{"ruleId":"567","severity":1,"message":"597","line":8,"column":8,"nodeType":"569","messageId":"570","endLine":8,"endColumn":17},{"ruleId":"567","severity":1,"message":"596","line":10,"column":10,"nodeType":"569","messageId":"570","endLine":10,"endColumn":15},{"ruleId":"567","severity":1,"message":"598","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":24},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"596","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":23,"column":35,"nodeType":"569","messageId":"570","endLine":23,"endColumn":40},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"568","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":14},{"ruleId":"567","severity":1,"message":"601","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":25},{"ruleId":"567","severity":1,"message":"596","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":15},{"ruleId":"567","severity":1,"message":"598","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":24},{"ruleId":"567","severity":1,"message":"596","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":15},{"ruleId":"567","severity":1,"message":"602","line":37,"column":9,"nodeType":"569","messageId":"570","endLine":37,"endColumn":14},{"ruleId":"567","severity":1,"message":"603","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":18},{"ruleId":"567","severity":1,"message":"596","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":15},{"ruleId":"567","severity":1,"message":"604","line":13,"column":8,"nodeType":"569","messageId":"570","endLine":13,"endColumn":17},{"ruleId":"567","severity":1,"message":"605","line":14,"column":8,"nodeType":"569","messageId":"570","endLine":14,"endColumn":22},{"ruleId":"567","severity":1,"message":"606","line":15,"column":8,"nodeType":"569","messageId":"570","endLine":15,"endColumn":23},{"ruleId":"567","severity":1,"message":"607","line":16,"column":8,"nodeType":"569","messageId":"570","endLine":16,"endColumn":28},{"ruleId":"567","severity":1,"message":"580","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":19},{"ruleId":"567","severity":1,"message":"574","line":6,"column":21,"nodeType":"569","messageId":"570","endLine":6,"endColumn":27},{"ruleId":"567","severity":1,"message":"593","line":6,"column":37,"nodeType":"569","messageId":"570","endLine":6,"endColumn":47},{"ruleId":"567","severity":1,"message":"608","line":6,"column":49,"nodeType":"569","messageId":"570","endLine":6,"endColumn":55},{"ruleId":"567","severity":1,"message":"599","line":6,"column":57,"nodeType":"569","messageId":"570","endLine":6,"endColumn":62},{"ruleId":"567","severity":1,"message":"596","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":15},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"568","line":10,"column":3,"nodeType":"569","messageId":"570","endLine":10,"endColumn":7},{"ruleId":"567","severity":1,"message":"594","line":13,"column":8,"nodeType":"569","messageId":"570","endLine":13,"endColumn":16},{"ruleId":"567","severity":1,"message":"595","line":14,"column":8,"nodeType":"569","messageId":"570","endLine":14,"endColumn":15},{"ruleId":"567","severity":1,"message":"596","line":16,"column":10,"nodeType":"569","messageId":"570","endLine":16,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":21,"column":35,"nodeType":"569","messageId":"570","endLine":21,"endColumn":40},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"574","line":4,"column":45,"nodeType":"569","messageId":"570","endLine":4,"endColumn":51},{"ruleId":"567","severity":1,"message":"594","line":6,"column":8,"nodeType":"569","messageId":"570","endLine":6,"endColumn":16},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"596","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":18,"column":35,"nodeType":"569","messageId":"570","endLine":18,"endColumn":40},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"596","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":18,"column":35,"nodeType":"569","messageId":"570","endLine":18,"endColumn":40},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"596","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":18,"column":35,"nodeType":"569","messageId":"570","endLine":18,"endColumn":40},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"596","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":18,"column":35,"nodeType":"569","messageId":"570","endLine":18,"endColumn":40},{"ruleId":"567","severity":1,"message":"574","line":3,"column":3,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"599","line":5,"column":3,"nodeType":"569","messageId":"570","endLine":5,"endColumn":8},{"ruleId":"567","severity":1,"message":"584","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":12},{"ruleId":"567","severity":1,"message":"592","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":10},{"ruleId":"567","severity":1,"message":"596","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":15},{"ruleId":"567","severity":1,"message":"600","line":18,"column":35,"nodeType":"569","messageId":"570","endLine":18,"endColumn":40},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},{"ruleId":"567","severity":1,"message":"593","line":4,"column":33,"nodeType":"569","messageId":"570","endLine":4,"endColumn":43},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["609"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'plusFill' is defined but never used.","'RouterLink' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'BlogPostCard' is defined but never used.","'BlogPostsSort' is defined but never used.","'BlogPostsSearch' is defined but never used.","'POSTS' is defined but never used.","'setRowsPerPage' is assigned a value but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'Slider' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'maxHeight' is defined but never used.","'PropTypes' is defined but never used.","'NumberFormat' is defined but never used.","'DataService' is defined but never used.","'marks' is assigned a value but never used.","'item' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'SendIcon' is defined but never used.","'Refresh' is defined but never used.","'alpha' is defined but never used.","'bugFilled' is defined but never used.","'fShortenNumber' is defined but never used.","'Stack' is defined but never used.","'theme' is defined but never used.","'alerttrianglefill' is defined but never used.","'theme' is assigned a value but never used.","'useTheme' is defined but never used.","'Searchbar' is defined but never used.","'AccountPopover' is defined but never used.","'LanguagePopover' is defined but never used.","'NotificationsPopover' is defined but never used.","'Avatar' is defined but never used.","padding-line-between-statements"]
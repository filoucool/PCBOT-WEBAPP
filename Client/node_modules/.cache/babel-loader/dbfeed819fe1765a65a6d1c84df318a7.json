{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felix\\\\OneDrive\\\\Desktop\\\\material-kit-react-main\\\\src\\\\pages\\\\EventViewer.js\",\n    _s = $RefreshSig$();\n\nimport { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow'; // material\n\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material'; // components\n\nimport Page from '../components/Page'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'Event',\n  label: 'Event',\n  minWidth: 300\n}, {\n  id: 'Type',\n  label: 'Type',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'Severity',\n  label: 'Severity',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'datetime',\n  label: 'Date/Time',\n  minWidth: 170,\n  align: 'right'\n}];\n\nfunction createData(Event, Type, Severity, datetime) {\n  return {\n    Event,\n    Type,\n    Severity,\n    datetime\n  };\n}\n\nconst rows = [createData('This is an error, a warning, a notification of any other event', '23 Dec 2020 23:38', 'Error', 'High'), createData('This is an error, a warning, a notification of any other event', 1403500365, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 60483973, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 327167434, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 37602103, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 25475400, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 83019200, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 4857000, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 126577691, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 126317000, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 67022000, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 67545757, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 146793744, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 200962417, '23 Dec 2020 23:38'), createData('This is an error, a warning, a notification of any other event', 210147125, '23 Dec 2020 23:38')]; // ----------------------------------------------------------------------\n\nexport default function EventViewer() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Event Viewer\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Event Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          sx: {\n            maxHeight: 640\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  style: {\n                    minWidth: column.minWidth\n                  },\n                  children: column.label\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 100],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventViewer, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = EventViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventViewer\");","map":{"version":3,"sources":["C:/Users/felix/OneDrive/Desktop/material-kit-react-main/src/pages/EventViewer.js"],"names":["Icon","plusFill","Link","RouterLink","React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Grid","Button","Container","Stack","Typography","Page","columns","id","label","minWidth","align","createData","Event","Type","Severity","datetime","rows","EventViewer","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","map","column","slice","row","format","code","length"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,UAAzC,QAA2D,eAA3D,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE,OAAtB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CADc,EAEd;AACEF,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAFc,EAQd;AACEH,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CARc,EAcd;AACEH,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAdc,CAAhB;;AAsBA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqD;AACnD,SAAO;AAAEH,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXL,UAAU,CACR,gEADQ,EAER,mBAFQ,EAGR,OAHQ,EAIR,MAJQ,CADC,EAOXA,UAAU,CACR,gEADQ,EAER,UAFQ,EAGR,mBAHQ,CAPC,EAYXA,UAAU,CACR,gEADQ,EAER,QAFQ,EAGR,mBAHQ,CAZC,EAiBXA,UAAU,CACR,gEADQ,EAER,SAFQ,EAGR,mBAHQ,CAjBC,EAsBXA,UAAU,CACR,gEADQ,EAER,QAFQ,EAGR,mBAHQ,CAtBC,EA2BXA,UAAU,CACR,gEADQ,EAER,QAFQ,EAGR,mBAHQ,CA3BC,EAgCXA,UAAU,CACR,gEADQ,EAER,QAFQ,EAGR,mBAHQ,CAhCC,EAqCXA,UAAU,CACR,gEADQ,EAER,OAFQ,EAGR,mBAHQ,CArCC,EA0CXA,UAAU,CACR,gEADQ,EAER,SAFQ,EAGR,mBAHQ,CA1CC,EA+CXA,UAAU,CACR,gEADQ,EAER,SAFQ,EAGR,mBAHQ,CA/CC,EAoDXA,UAAU,CACR,gEADQ,EAER,QAFQ,EAGR,mBAHQ,CApDC,EAyDXA,UAAU,CACR,gEADQ,EAER,QAFQ,EAGR,mBAHQ,CAzDC,EA8DXA,UAAU,CACR,gEADQ,EAER,SAFQ,EAGR,mBAHQ,CA9DC,EAmEXA,UAAU,CACR,gEADQ,EAER,SAFQ,EAGR,mBAHQ,CAnEC,EAwEXA,UAAU,CACR,gEADQ,EAER,SAFQ,EAGR,mBAHQ,CAxEC,CAAb,C,CA+EA;;AAEA,eAAe,SAASM,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB5B,KAAK,CAAC6B,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC/B,KAAK,CAAC6B,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3CN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AACzCF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,cAAZ;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,UAAU,EAAC,QAAlC;AAA2C,QAAA,cAAc,EAAC,eAA1D;AAA0E,QAAA,EAAE,EAAE,CAA9E;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE;AAAEU,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAAX;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,EAAE,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAApB;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,YAAY,MAAnB;AAAoB,0BAAW,cAA/B;AAAA,oCACE,QAAC,SAAD;AAAA,qCACE,QAAC,QAAD;AAAA,0BACGzB,OAAO,CAAC0B,GAAR,CAAaC,MAAD,iBACX,QAAC,SAAD;AAEE,kBAAA,KAAK,EAAEA,MAAM,CAACvB,KAFhB;AAGE,kBAAA,KAAK,EAAE;AAAED,oBAAAA,QAAQ,EAAEwB,MAAM,CAACxB;AAAnB,mBAHT;AAAA,4BAKGwB,MAAM,CAACzB;AALV,mBACOyB,MAAM,CAAC1B,EADd;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,SAAD;AAAA,wBACGS,IAAI,CAACkB,KAAL,CAAWhB,IAAI,GAAGG,WAAlB,EAA+BH,IAAI,GAAGG,WAAP,GAAqBA,WAApD,EAAiEW,GAAjE,CAAsEG,GAAD,iBACpE,QAAC,QAAD;AAAU,gBAAA,KAAK,MAAf;AAAgB,gBAAA,IAAI,EAAC,UAArB;AAAgC,gBAAA,QAAQ,EAAE,CAAC,CAA3C;AAAA,0BACG7B,OAAO,CAAC0B,GAAR,CAAaC,MAAD,IAAY;AACvB,wBAAML,KAAK,GAAGO,GAAG,CAACF,MAAM,CAAC1B,EAAR,CAAjB;AACA,sCACE,QAAC,SAAD;AAA2B,oBAAA,KAAK,EAAE0B,MAAM,CAACvB,KAAzC;AAAA,8BACGuB,MAAM,CAACG,MAAP,IAAiB,OAAOR,KAAP,KAAiB,QAAlC,GACGK,MAAM,CAACG,MAAP,CAAcR,KAAd,CADH,GAEGA;AAHN,qBAAgBK,MAAM,CAAC1B,EAAvB;AAAA;AAAA;AAAA;AAAA,0BADF;AAOD,iBATA;AADH,iBAAmD4B,GAAG,CAACE,IAAvD;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkCE,QAAC,eAAD;AACE,UAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADtB;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,KAAK,EAAErB,IAAI,CAACsB,MAHd;AAIE,UAAA,WAAW,EAAEjB,WAJf;AAKE,UAAA,IAAI,EAAEH,IALR;AAME,UAAA,YAAY,EAAEK,gBANhB;AAOE,UAAA,mBAAmB,EAAEG;AAPvB;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GAnEuBT,W;;KAAAA,W","sourcesContent":["import { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n// material\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  { id: 'Event', label: 'Event', minWidth: 300 },\n  {\n    id: 'Type',\n    label: 'Type',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'Severity',\n    label: 'Severity',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'datetime',\n    label: 'Date/Time',\n    minWidth: 170,\n    align: 'right'\n  }\n];\n\nfunction createData(Event, Type, Severity, datetime) {\n  return { Event, Type, Severity, datetime };\n}\n\nconst rows = [\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    '23 Dec 2020 23:38',\n    'Error',\n    'High'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    1403500365,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    60483973,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    327167434,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    37602103,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    25475400,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    83019200,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    4857000,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    126577691,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    126317000,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    67022000,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    67545757,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    146793744,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    200962417,\n    '23 Dec 2020 23:38'\n  ),\n  createData(\n    'This is an error, a warning, a notification of any other event',\n    210147125,\n    '23 Dec 2020 23:38'\n  )\n];\n\n// ----------------------------------------------------------------------\n\nexport default function EventViewer() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    <Page title=\"Event Viewer\">\n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Event Viewer\n          </Typography>\n        </Stack>\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n          <TableContainer sx={{ maxHeight: 640 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
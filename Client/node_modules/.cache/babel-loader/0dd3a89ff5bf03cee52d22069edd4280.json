{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Filouuuuuu\\\\PCBOT-WEBAPP\\\\Client\\\\src\\\\pages\\\\EventViewer.js\",\n    _s = $RefreshSig$();\n\nimport { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow'; // material\n\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material'; // components\n\nimport Axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Page from '../components/Page'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'Event',\n  label: 'Event',\n  minWidth: 300\n}, {\n  id: 'Type',\n  label: 'Type',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'Severity',\n  label: 'Severity',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'datetime',\n  label: 'Date/Time',\n  minWidth: 170,\n  align: 'right'\n}];\n\nfunction createData(Event, Type, Severity, datetime) {\n  return {\n    Event,\n    Type,\n    Severity,\n    datetime\n  };\n} // const rows = [\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   ),\n//   createData(\n//     'This is an error, a warning, a notification of any other event',\n//     'Error',\n//     'High',\n//     '23 Dec 2020 23:38'\n//   )\n// ];\n// ----------------------------------------------------------------------\n\n\nexport default function EventViewer() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const [EVENTS, setEVENTS] = useState([]);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/getEvents').then(response => {\n      setEVENTS(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Event Viewer\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          style: {\n            color: '#66fcf1'\n          },\n          children: \"Event Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventViewer, \"wSf6S8oHGTDdZMZ5rERJlVIvu3A=\");\n\n_c = EventViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventViewer\");","map":{"version":3,"sources":["C:/Users/Filouuuuuu/PCBOT-WEBAPP/Client/src/pages/EventViewer.js"],"names":["Icon","plusFill","Link","RouterLink","React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Grid","Button","Container","Stack","Typography","Axios","useEffect","useState","Page","columns","id","label","minWidth","align","createData","Event","Type","Severity","datetime","EventViewer","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","EVENTS","setEVENTS","get","then","response","data","console","log","color"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,UAAzC,QAA2D,eAA3D,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE,OAAtB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CADc,EAEd;AACEF,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAFc,EAQd;AACEH,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CARc,EAcd;AACEH,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAdc,CAAhB;;AAsBA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqD;AACnD,SAAO;AAAEH,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,GAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB9B,KAAK,CAACgB,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChC,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMiB,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3CL,IAAAA,OAAO,CAACK,OAAD,CAAP;AACD,GAFD;;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACwB,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAuDC,QAAD,IAAc;AAClEH,MAAAA,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,cAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,UAAU,EAAC,QAAlC;AAA2C,QAAA,cAAc,EAAC,eAA1D;AAA0E,QAAA,EAAE,EAAE,CAA9E;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,YAAY,MAArC;AAAsC,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED;;GA7FuBhB,W;;KAAAA,W","sourcesContent":["import { Icon } from '@iconify/react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n// material\r\nimport { Grid, Button, Container, Stack, Typography } from '@mui/material';\r\n// components\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from '../components/Page';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst columns = [\r\n  { id: 'Event', label: 'Event', minWidth: 300 },\r\n  {\r\n    id: 'Type',\r\n    label: 'Type',\r\n    minWidth: 170,\r\n    align: 'right'\r\n  },\r\n  {\r\n    id: 'Severity',\r\n    label: 'Severity',\r\n    minWidth: 170,\r\n    align: 'right'\r\n  },\r\n  {\r\n    id: 'datetime',\r\n    label: 'Date/Time',\r\n    minWidth: 170,\r\n    align: 'right'\r\n  }\r\n];\r\n\r\nfunction createData(Event, Type, Severity, datetime) {\r\n  return { Event, Type, Severity, datetime };\r\n}\r\n\r\n// const rows = [\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   ),\r\n//   createData(\r\n//     'This is an error, a warning, a notification of any other event',\r\n//     'Error',\r\n//     'High',\r\n//     '23 Dec 2020 23:38'\r\n//   )\r\n// ];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EventViewer() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const [EVENTS, setEVENTS] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:3001/api/getEvents').then((response) => {\r\n      setEVENTS(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Page title=\"Event Viewer\">\r\n      <Container maxWidth=\"xl\">\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n          <Typography variant=\"h4\" gutterBottom style={{ color: '#66fcf1' }}>\r\n            Event Viewer\r\n          </Typography>\r\n        </Stack>\r\n        {/* \r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }} style={{ backgroundColor: '#1f2833' }}>\r\n          <TableContainer sx={{ minHeight: 693 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\" style={{ backgroundColor: '#c5c6c7' }}>\r\n              <TableHead style={{ backgroundColor: '#c5c6c7' }}>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        minWidth: column.minWidth,\r\n                        color: '#fff',\r\n                        backgroundColor: '#45a29e',\r\n                        fontWeight: 'bolder'\r\n                      }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {EVENTS.map((row) => (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell\r\n                          key={column.id}\r\n                          align={column.align}\r\n                          style={{\r\n                            minWidth: column.minWidth,\r\n                            color: '#45a29e',\r\n                            backgroundColor: '#1f2833',\r\n                            fontSize: '1.2em',\r\n                            fontFamily: 'monospace'\r\n                          }}\r\n                        >\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={EVENTS.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            style={{\r\n              color: '#45a29e',\r\n              backgroundColor: '#1f2833',\r\n              fontSize: '1.2em',\r\n              fontFamily: 'monospace'\r\n            }}\r\n          />\r\n        </Paper>\r\n         */}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
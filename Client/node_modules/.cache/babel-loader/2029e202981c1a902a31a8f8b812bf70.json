{"ast":null,"code":"/**\r\n * SimpleBar.js - v5.3.5\r\n * Scrollbars, simpler.\r\n * https://grsmto.github.io/simplebar/\r\n *\r\n * Made by Adrien Denat from a fork by Jonathan Nicol\r\n * Under MIT License\r\n */\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\n\nfunction getElementWindow(element) {\n  if (!element || !element.ownerDocument || !element.ownerDocument.defaultView) {\n    return window;\n  }\n\n  return element.ownerDocument.defaultView;\n}\n\nfunction getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n\n  return element.ownerDocument;\n}\n\nvar cachedScrollbarWidth = null;\nvar cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', function () {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nfunction scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    var document = getElementDocument(el);\n\n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n\n    var body = document.body;\n    var box = document.createElement('div');\n    box.classList.add('simplebar-hide-scrollbar');\n    body.appendChild(box);\n    var width = box.getBoundingClientRect().right;\n    body.removeChild(box);\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n\nvar SimpleBar = /*#__PURE__*/function () {\n  function SimpleBar(element, options) {\n    var _this = this;\n\n    this.onScroll = function () {\n      var elWindow = getElementWindow(_this.el);\n\n      if (!_this.scrollXTicking) {\n        elWindow.requestAnimationFrame(_this.scrollX);\n        _this.scrollXTicking = true;\n      }\n\n      if (!_this.scrollYTicking) {\n        elWindow.requestAnimationFrame(_this.scrollY);\n        _this.scrollYTicking = true;\n      }\n    };\n\n    this.scrollX = function () {\n      if (_this.axis.x.isOverflowing) {\n        _this.showScrollbar('x');\n\n        _this.positionScrollbar('x');\n      }\n\n      _this.scrollXTicking = false;\n    };\n\n    this.scrollY = function () {\n      if (_this.axis.y.isOverflowing) {\n        _this.showScrollbar('y');\n\n        _this.positionScrollbar('y');\n      }\n\n      _this.scrollYTicking = false;\n    };\n\n    this.onMouseEnter = function () {\n      _this.showScrollbar('x');\n\n      _this.showScrollbar('y');\n    };\n\n    this.onMouseMove = function (e) {\n      _this.mouseX = e.clientX;\n      _this.mouseY = e.clientY;\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseMoveForAxis('x');\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseMoveForAxis('y');\n      }\n    };\n\n    this.onMouseLeave = function () {\n      _this.onMouseMove.cancel();\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseLeaveForAxis('x');\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseLeaveForAxis('y');\n      }\n\n      _this.mouseX = -1;\n      _this.mouseY = -1;\n    };\n\n    this.onWindowResize = function () {\n      // Recalculate scrollbarWidth in case it's a zoom\n      _this.scrollbarWidth = _this.getScrollbarWidth();\n\n      _this.hideNativeScrollbar();\n    };\n\n    this.hideScrollbars = function () {\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n\n      if (!_this.isWithinBounds(_this.axis.y.track.rect)) {\n        _this.axis.y.scrollbar.el.classList.remove(_this.classNames.visible);\n\n        _this.axis.y.isVisible = false;\n      }\n\n      if (!_this.isWithinBounds(_this.axis.x.track.rect)) {\n        _this.axis.x.scrollbar.el.classList.remove(_this.classNames.visible);\n\n        _this.axis.x.isVisible = false;\n      }\n    };\n\n    this.onPointerEvent = function (e) {\n      var isWithinTrackXBounds, isWithinTrackYBounds;\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);\n      } // If any pointer event is called on the scrollbar\n\n\n      if (isWithinTrackXBounds || isWithinTrackYBounds) {\n        // Preventing the event's default action stops text being\n        // selectable during the drag.\n        e.preventDefault(); // Prevent event leaking\n\n        e.stopPropagation();\n\n        if (e.type === 'mousedown') {\n          if (isWithinTrackXBounds) {\n            _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();\n\n            if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {\n              _this.onDragStart(e, 'x');\n            } else {\n              _this.onTrackClick(e, 'x');\n            }\n          }\n\n          if (isWithinTrackYBounds) {\n            _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();\n\n            if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {\n              _this.onDragStart(e, 'y');\n            } else {\n              _this.onTrackClick(e, 'y');\n            }\n          }\n        }\n      }\n    };\n\n    this.drag = function (e) {\n      var eventOffset;\n      var track = _this.axis[_this.draggedAxis].track;\n      var trackSize = track.rect[_this.axis[_this.draggedAxis].sizeAttr];\n      var scrollbar = _this.axis[_this.draggedAxis].scrollbar;\n      var contentSize = _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollSizeAttr];\n      var hostSize = parseInt(_this.elStyles[_this.axis[_this.draggedAxis].sizeAttr], 10);\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (_this.draggedAxis === 'y') {\n        eventOffset = e.pageY;\n      } else {\n        eventOffset = e.pageX;\n      } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n\n\n      var dragPos = eventOffset - track.rect[_this.axis[_this.draggedAxis].offsetAttr] - _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.\n\n      var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.\n\n      var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL\n\n      if (_this.draggedAxis === 'x') {\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? scrollPos - (trackSize + scrollbar.size) : scrollPos;\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollPos : scrollPos;\n      }\n\n      _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] = scrollPos;\n    };\n\n    this.onEndDrag = function (e) {\n      var elDocument = getElementDocument(_this.el);\n      var elWindow = getElementWindow(_this.el);\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.el.classList.remove(_this.classNames.dragging);\n\n      elDocument.removeEventListener('mousemove', _this.drag, true);\n      elDocument.removeEventListener('mouseup', _this.onEndDrag, true);\n      _this.removePreventClickId = elWindow.setTimeout(function () {\n        // Remove these asynchronously so we still suppress click events\n        // generated simultaneously with mouseup.\n        elDocument.removeEventListener('click', _this.preventClick, true);\n        elDocument.removeEventListener('dblclick', _this.preventClick, true);\n        _this.removePreventClickId = null;\n      });\n    };\n\n    this.preventClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = Object.assign({}, SimpleBar.defaultOptions, {}, options);\n    this.classNames = Object.assign({}, SimpleBar.defaultOptions.classNames, {}, this.options.classNames);\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null; // Don't re-instantiate over an existing one\n\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(this.hideScrollbars.bind(this), this.options.timeout);\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n    this.init();\n  }\n  /**\r\n   * Static properties\r\n   */\n\n  /**\r\n   * Helper to fix browsers inconsistency on RTL:\r\n   *  - Firefox inverts the scrollbar initial position\r\n   *  - IE11 inverts both scrollbar position and scrolling offset\r\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\r\n   */\n\n\n  SimpleBar.getRtlHelpers = function getRtlHelpers() {\n    var dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML = '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    var scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    var dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    var dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(dummyContainerChild);\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left && dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left !== 0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  };\n\n  SimpleBar.getOffset = function getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    var elDocument = getElementDocument(el);\n    var elWindow = getElementWindow(el);\n    return {\n      top: rect.top + (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left: rect.left + (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  };\n\n  var _proto = SimpleBar.prototype;\n\n  _proto.init = function init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this); // We stop here on server-side\n\n    if (canUseDOM) {\n      this.initDOM();\n      this.scrollbarWidth = this.getScrollbarWidth();\n      this.recalculate();\n      this.initListeners();\n    }\n  };\n\n  _proto.initDOM = function initDOM() {\n    var _this2 = this; // make sure this element doesn't have the elements yet\n\n\n    if (Array.prototype.filter.call(this.el.children, function (child) {\n      return child.classList.contains(_this2.classNames.wrapper);\n    }).length) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(\".\" + this.classNames.wrapper);\n      this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector(\".\" + this.classNames.contentWrapper);\n      this.contentEl = this.options.contentNode || this.el.querySelector(\".\" + this.classNames.contentEl);\n      this.offsetEl = this.el.querySelector(\".\" + this.classNames.offset);\n      this.maskEl = this.el.querySelector(\".\" + this.classNames.mask);\n      this.placeholderEl = this.findChild(this.wrapperEl, \".\" + this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverEl);\n      this.axis.x.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.horizontal);\n      this.axis.y.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.vertical);\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      var track = document.createElement('div');\n      var scrollbar = document.createElement('div');\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n      track.appendChild(scrollbar);\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\".\" + this.classNames.scrollbar);\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  };\n\n  _proto.initListeners = function initListeners() {\n    var _this3 = this;\n\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize\n\n    elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38\n\n    var resizeObserverStarted = false;\n    var resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(function () {\n      if (!resizeObserverStarted) return;\n\n      _this3.recalculate();\n    });\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n    elWindow.requestAnimationFrame(function () {\n      resizeObserverStarted = true;\n    }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  };\n\n  _proto.recalculate = function recalculate() {\n    var elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n    var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    var contentElOffsetWidth = this.contentEl.offsetWidth;\n    var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n    var elOverflowX = this.elStyles.overflowX;\n    var elOverflowY = this.elStyles.overflowY;\n    this.contentEl.style.padding = this.elStyles.paddingTop + \" \" + this.elStyles.paddingRight + \" \" + this.elStyles.paddingBottom + \" \" + this.elStyles.paddingLeft;\n    this.wrapperEl.style.margin = \"-\" + this.elStyles.paddingTop + \" -\" + this.elStyles.paddingRight + \" -\" + this.elStyles.paddingBottom + \" -\" + this.elStyles.paddingLeft;\n    var contentElScrollHeight = this.contentEl.scrollHeight;\n    var contentElScrollWidth = this.contentEl.scrollWidth;\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size\n\n    this.placeholderEl.style.width = isWidthAuto ? contentElOffsetWidth + \"px\" : 'auto';\n    this.placeholderEl.style.height = contentElScrollHeight + \"px\";\n    var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing = contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow\n\n    this.axis.x.isOverflowing = elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing = elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n    this.axis.x.forceVisible = this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible = this.options.forceVisible === 'y' || this.options.forceVisible === true;\n    this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n\n    var offsetForXScrollbar = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;\n    var offsetForYScrollbar = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;\n    this.axis.x.isOverflowing = this.axis.x.isOverflowing && contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing = this.axis.y.isOverflowing && contentElScrollHeight > contentWrapperElOffsetHeight - offsetForXScrollbar;\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n    this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + \"px\";\n    this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + \"px\";\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n  /**\r\n   * Calculate scrollbar size\r\n   */\n  ;\n\n  _proto.getScrollbarSize = function getScrollbarSize(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var scrollbarSize;\n    var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.\n\n    scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  };\n\n  _proto.positionScrollbar = function positionScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollOffset : scrollOffset;\n    var scrollPourcent = scrollOffset / (contentSize - hostSize);\n    var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? handleOffset + (trackSize - scrollbar.size) : handleOffset;\n    scrollbar.el.style.transform = axis === 'x' ? \"translate3d(\" + handleOffset + \"px, 0, 0)\" : \"translate3d(0, \" + handleOffset + \"px, 0)\";\n  };\n\n  _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var track = this.axis[axis].track.el;\n    var scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    } // Even if forceVisible is enabled, scrollbar itself should be hidden\n\n\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  };\n\n  _proto.hideNativeScrollbar = function hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n    this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n  }\n  /**\r\n   * On scroll event handling\r\n   */\n  ;\n\n  _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    this.axis[axis].track.rect = this.axis[axis].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var isWithinScrollbarBoundsX = this.isWithinBounds(this.axis[axis].scrollbar.rect);\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  };\n\n  _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  };\n  /**\r\n   * Show scrollbar\r\n   */\n\n\n  _proto.showScrollbar = function showScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n  /**\r\n   * Hide Scrollbar\r\n   */\n  ;\n  /**\r\n   * on scrollbar handle drag movement starts\r\n   */\n\n\n  _proto.onDragStart = function onDragStart(e, axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var elDocument = getElementDocument(this.el);\n    var elWindow = getElementWindow(this.el);\n    var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n\n    var eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset = eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n    this.el.classList.add(this.classNames.dragging);\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n  /**\r\n   * Drag scrollbar handle\r\n   */\n  ;\n\n  _proto.onTrackClick = function onTrackClick(e, axis) {\n    var _this4 = this;\n\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.options.clickOnTrack) return;\n    var elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    var t = axis === 'y' ? this.mouseY - scrollbarOffset : this.mouseX - scrollbarOffset;\n    var dir = t < 0 ? -1 : 1;\n    var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    var scrollTo = function scrollTo() {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          var _this4$contentWrapper;\n\n          scrolled -= _this4.options.clickOnTrackSpeed;\n\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper = {}, _this4$contentWrapper[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper));\n\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          var _this4$contentWrapper2;\n\n          scrolled += _this4.options.clickOnTrackSpeed;\n\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper2 = {}, _this4$contentWrapper2[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper2));\n\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n  /**\r\n   * Getter for content element\r\n   */\n  ;\n\n  _proto.getContentElement = function getContentElement() {\n    return this.contentEl;\n  }\n  /**\r\n   * Getter for original scrolling element\r\n   */\n  ;\n\n  _proto.getScrollElement = function getScrollElement() {\n    return this.contentWrapperEl;\n  };\n\n  _proto.getScrollbarWidth = function getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar').display === 'none' || 'scrollbarWidth' in document.documentElement.style || '-ms-overflow-style' in document.documentElement.style) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  };\n\n  _proto.removeListeners = function removeListeners() {\n    var _this5 = this;\n\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    } // Cancel all debounced functions\n\n\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n  /**\r\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\r\n   */\n  ;\n\n  _proto.unMount = function unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n  /**\r\n   * Check if mouse is within bounds\r\n   */\n  ;\n\n  _proto.isWithinBounds = function isWithinBounds(bbox) {\n    return this.mouseX >= bbox.left && this.mouseX <= bbox.left + bbox.width && this.mouseY >= bbox.top && this.mouseY <= bbox.top + bbox.height;\n  }\n  /**\r\n   * Find element children matches query\r\n   */\n  ;\n\n  _proto.findChild = function findChild(el, query) {\n    var matches = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, function (child) {\n      return matches.call(child, query);\n    })[0];\n  };\n\n  return SimpleBar;\n}();\n\nSimpleBar.defaultOptions = {\n  autoHide: true,\n  forceVisible: false,\n  clickOnTrack: true,\n  clickOnTrackSpeed: 40,\n  classNames: {\n    contentEl: 'simplebar-content',\n    contentWrapper: 'simplebar-content-wrapper',\n    offset: 'simplebar-offset',\n    mask: 'simplebar-mask',\n    wrapper: 'simplebar-wrapper',\n    placeholder: 'simplebar-placeholder',\n    scrollbar: 'simplebar-scrollbar',\n    track: 'simplebar-track',\n    heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n    heightAutoObserverEl: 'simplebar-height-auto-observer',\n    visible: 'simplebar-visible',\n    horizontal: 'simplebar-horizontal',\n    vertical: 'simplebar-vertical',\n    hover: 'simplebar-hover',\n    dragging: 'simplebar-dragging'\n  },\n  scrollbarMinSize: 25,\n  scrollbarMaxSize: 0,\n  timeout: 1000\n};\nSimpleBar.instances = new WeakMap();\nexport default SimpleBar;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AA6BO,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;MAEtC,CAACA,OAAD,IACA,CAACA,OAAO,CAACC,aADT,IAEA,CAACD,OAAO,CAACC,aAARD,CAAsBE,aACvB;WACOC;;;SAEFH,OAAO,CAACC,aAARD,CAAsBE;;;AAGxB,SAASE,kBAAT,CAA4BJ,OAA5B,EAAqC;MACtC,CAACA,OAAD,IAAY,CAACA,OAAO,CAACC,eAAe;WAC/BI;;;SAEFL,OAAO,CAACC;;;ACzCjB,IAAIK,oBAAoB,GAAG,IAA3B;AACA,IAAIC,sBAAsB,GAAG,IAA7B;;AAEA,IAAIC,SAAJ,EAAe;AACbL,QAAM,CAACM,gBAAPN,CAAwB,QAAxBA,EAAkC,YAAM;QAClCI,sBAAsB,KAAKJ,MAAM,CAACO,kBAAkB;AACtDH,4BAAsB,GAAGJ,MAAM,CAACO,gBAAhCH;AACAD,0BAAoB,GAAG,IAAvBA;;AAHJ;;;AAQa,SAASK,cAAT,CAAwBC,EAAxB,EAA4B;MACrCN,oBAAoB,KAAK,MAAM;QAE3BD,QAAQ,GAAGD,kBAAkB,CAACQ,EAAD;;QAE/B,OAAOP,QAAP,KAAoB,aAAa;AACnCC,0BAAoB,GAAG,CAAvBA;aACOA;;;QAEHO,IAAI,GAAGR,QAAQ,CAACQ;QAChBC,GAAG,GAAGT,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;AAEZS,OAAG,CAACE,SAAJF,CAAcG,GAAdH,CAAkB,0BAAlBA;AAEAD,QAAI,CAACK,WAALL,CAAiBC,GAAjBD;QAEMM,KAAK,GAAGL,GAAG,CAACM,qBAAJN,GAA4BO;AAE1CR,QAAI,CAACS,WAALT,CAAiBC,GAAjBD;AAEAP,wBAAoB,GAAGa,KAAvBb;;;SAGKA;;;IC9BYiB;qBACPvB,SAASwB,SAAS;;;SAwe9BC,WAAW,YAAM;UACTC,QAAQ,GAAG3B,gBAAgB,CAAC4B,KAAI,CAACf,EAAN;;UAC7B,CAACe,KAAI,CAACC,gBAAgB;AACxBF,gBAAQ,CAACG,qBAATH,CAA+BC,KAAI,CAACG,OAApCJ;AACAC,aAAI,CAACC,cAAL,GAAsB,IAAtB;;;UAGE,CAACD,KAAI,CAACI,gBAAgB;AACxBL,gBAAQ,CAACG,qBAATH,CAA+BC,KAAI,CAACK,OAApCN;AACAC,aAAI,CAACI,cAAL,GAAsB,IAAtB;;AAjf0B;;SAqf9BD,UAAU,YAAM;UACVH,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYC,eAAe;AAC7BR,aAAI,CAACS,aAAL,CAAmB,GAAnB;;AACAT,aAAI,CAACU,iBAAL,CAAuB,GAAvB;;;AAGFV,WAAI,CAACC,cAAL,GAAsB,KAAtB;AA3f4B;;SA8f9BI,UAAU,YAAM;UACVL,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYH,eAAe;AAC7BR,aAAI,CAACS,aAAL,CAAmB,GAAnB;;AACAT,aAAI,CAACU,iBAAL,CAAuB,GAAvB;;;AAGFV,WAAI,CAACI,cAAL,GAAsB,KAAtB;AApgB4B;;SAugB9BQ,eAAe,YAAM;AACnBZ,WAAI,CAACS,aAAL,CAAmB,GAAnB;;AACAT,WAAI,CAACS,aAAL,CAAmB,GAAnB;AAzgB4B;;SA4gB9BI,cAAc,aAAK;AACjBb,WAAI,CAACc,MAAL,GAAcC,CAAC,CAACC,OAAhB;AACAhB,WAAI,CAACiB,MAAL,GAAcF,CAAC,CAACG,OAAhB;;UAEIlB,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYC,aAAZ,IAA6BR,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYY,cAAc;AACzDnB,aAAI,CAACoB,kBAAL,CAAwB,GAAxB;;;UAGEpB,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYH,aAAZ,IAA6BR,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYQ,cAAc;AACzDnB,aAAI,CAACoB,kBAAL,CAAwB,GAAxB;;AArhB0B;;SAmjB9BC,eAAe,YAAM;AACnBrB,WAAI,CAACa,WAAL,CAAiBS,MAAjB;;UAEItB,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYC,aAAZ,IAA6BR,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYY,cAAc;AACzDnB,aAAI,CAACuB,mBAAL,CAAyB,GAAzB;;;UAGEvB,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYH,aAAZ,IAA6BR,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYQ,cAAc;AACzDnB,aAAI,CAACuB,mBAAL,CAAyB,GAAzB;;;AAGFvB,WAAI,CAACc,MAAL,GAAc,CAAC,CAAf;AACAd,WAAI,CAACiB,MAAL,GAAc,CAAC,CAAf;AA/jB4B;;SAukB9BO,iBAAiB,YAAM;;AAErBxB,WAAI,CAAChB,cAAL,GAAsBgB,KAAI,CAACyB,iBAAL,EAAtB;;AAEAzB,WAAI,CAAC0B,mBAAL;AA3kB4B;;SAimB9BC,iBAAiB,YAAM;AACrB3B,WAAI,CAACM,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkBC,IAAlB,GAAyB7B,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkB3C,EAAlB,CAAqBQ,qBAArB,EAAzB;AACAO,WAAI,CAACM,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkBC,IAAlB,GAAyB7B,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkB3C,EAAlB,CAAqBQ,qBAArB,EAAzB;;UAEI,CAACO,KAAI,CAAC8B,cAAL,CAAoB9B,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkBC,IAAtC,GAA6C;AAChD7B,aAAI,CAACM,IAAL,CAAUK,CAAV,CAAYoB,SAAZ,CAAsB9C,EAAtB,CAAyBI,SAAzB,CAAmC2C,MAAnC,CAA0ChC,KAAI,CAACiC,UAAL,CAAgBC,OAA1D;;AACAlC,aAAI,CAACM,IAAL,CAAUK,CAAV,CAAYwB,SAAZ,GAAwB,KAAxB;;;UAGE,CAACnC,KAAI,CAAC8B,cAAL,CAAoB9B,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkBC,IAAtC,GAA6C;AAChD7B,aAAI,CAACM,IAAL,CAAUC,CAAV,CAAYwB,SAAZ,CAAsB9C,EAAtB,CAAyBI,SAAzB,CAAmC2C,MAAnC,CAA0ChC,KAAI,CAACiC,UAAL,CAAgBC,OAA1D;;AACAlC,aAAI,CAACM,IAAL,CAAUC,CAAV,CAAY4B,SAAZ,GAAwB,KAAxB;;AA5mB0B;;SAgnB9BC,iBAAiB,aAAK;UAChBC,sBAAsBC;AAE1BtC,WAAI,CAACM,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkBC,IAAlB,GAAyB7B,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkB3C,EAAlB,CAAqBQ,qBAArB,EAAzB;AACAO,WAAI,CAACM,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkBC,IAAlB,GAAyB7B,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkB3C,EAAlB,CAAqBQ,qBAArB,EAAzB;;UAEIO,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYC,aAAZ,IAA6BR,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYY,cAAc;AACzDkB,4BAAoB,GAAGrC,KAAI,CAAC8B,cAAL,CAAoB9B,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkBC,IAAtC,CAAvBQ;;;UAGErC,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYH,aAAZ,IAA6BR,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYQ,cAAc;AACzDmB,4BAAoB,GAAGtC,KAAI,CAAC8B,cAAL,CAAoB9B,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkBC,IAAtC,CAAvBS;AAXkB;;;UAehBD,oBAAoB,IAAIC,sBAAsB;;;AAGhDvB,SAAC,CAACwB,cAAFxB,GAHgD;;AAKhDA,SAAC,CAACyB,eAAFzB;;YAEIA,CAAC,CAAC0B,IAAF1B,KAAW,aAAa;cACtBsB,sBAAsB;AACxBrC,iBAAI,CAACM,IAAL,CAAUC,CAAV,CAAYwB,SAAZ,CAAsBF,IAAtB,GAA6B7B,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYwB,SAAZ,CAAsB9C,EAAtB,CAAyBQ,qBAAzB,EAA7B;;gBAEIO,KAAI,CAAC8B,cAAL,CAAoB9B,KAAI,CAACM,IAAL,CAAUC,CAAV,CAAYwB,SAAZ,CAAsBF,IAA1C,GAAiD;AACnD7B,mBAAI,CAAC0C,WAAL,CAAiB3B,CAAjB,EAAoB,GAApB;AADF,mBAEO;AACLf,mBAAI,CAAC2C,YAAL,CAAkB5B,CAAlB,EAAqB,GAArB;;;;cAIAuB,sBAAsB;AACxBtC,iBAAI,CAACM,IAAL,CAAUK,CAAV,CAAYoB,SAAZ,CAAsBF,IAAtB,GAA6B7B,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYoB,SAAZ,CAAsB9C,EAAtB,CAAyBQ,qBAAzB,EAA7B;;gBAEIO,KAAI,CAAC8B,cAAL,CAAoB9B,KAAI,CAACM,IAAL,CAAUK,CAAV,CAAYoB,SAAZ,CAAsBF,IAA1C,GAAiD;AACnD7B,mBAAI,CAAC0C,WAAL,CAAiB3B,CAAjB,EAAoB,GAApB;AADF,mBAEO;AACLf,mBAAI,CAAC2C,YAAL,CAAkB5B,CAAlB,EAAqB,GAArB;;;;;AAvpBoB;;SA4rB9B6B,OAAO,aAAK;UACNC;UACEjB,KAAK,GAAG5B,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4BlB;UACpCmB,SAAS,GAAGnB,KAAK,CAACC,IAAND,CAAW5B,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4BE,QAAvCpB;UACZG,SAAS,GAAG/B,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4Bf;UACxCkB,WAAW,GAAGjD,KAAI,CAACkD,gBAAL,CAClBlD,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4BK,cADV;UAGdC,QAAQ,GAAGC,QAAQ,CACvBrD,KAAI,CAACsD,QAAL,CAActD,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4BE,QAA1C,CADuB,EAEvB,EAFuB;AAKzBjC,OAAC,CAACwB,cAAFxB;AACAA,OAAC,CAACyB,eAAFzB;;UAEIf,KAAI,CAAC8C,WAAL,KAAqB,KAAK;AAC5BD,mBAAW,GAAG9B,CAAC,CAACwC,KAAhBV;AADF,aAEO;AACLA,mBAAW,GAAG9B,CAAC,CAACyC,KAAhBX;AAnBQ;;;UAuBNY,OAAO,GACTZ,WAAW,GACXjB,KAAK,CAACC,IAAND,CAAW5B,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4BY,UAAvC9B,CADAiB,GAEA7C,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4Ba,WA1BpB;;UA4BNC,QAAQ,GAAGH,OAAO,IAAIV,SAAS,GAAGhB,SAAS,CAAC8B,IAA1B,EA5BZ;;UA+BNC,SAAS,GAAGF,QAAQ,IAAIX,WAAW,GAAGG,QAAlB,EA/Bd;;UAkCNpD,KAAI,CAAC8C,WAAL,KAAqB,KAAK;AAC5BgB,iBAAS,GACP9D,KAAI,CAAC+D,KAAL,IAAcnE,SAAS,CAACoE,aAAVpE,GAA0BqE,sBAAxC,GACIH,SAAS,IAAIf,SAAS,GAAGhB,SAAS,CAAC8B,IAA1B,CADb,GAEIC,SAHNA;AAIAA,iBAAS,GACP9D,KAAI,CAAC+D,KAAL,IAAcnE,SAAS,CAACoE,aAAVpE,GAA0BsE,sBAAxC,GACI,CAACJ,SADL,GAEIA,SAHNA;;;AAMF9D,WAAI,CAACkD,gBAAL,CACElD,KAAI,CAACM,IAAL,CAAUN,KAAI,CAAC8C,WAAf,EAA4BqB,gBAD9B,IAEIL,SAFJ;AAzuB4B;;SAivB9BM,YAAY,aAAK;UACTC,UAAU,GAAG5F,kBAAkB,CAACuB,KAAI,CAACf,EAAN;UAC/Bc,QAAQ,GAAG3B,gBAAgB,CAAC4B,KAAI,CAACf,EAAN;AACjC8B,OAAC,CAACwB,cAAFxB;AACAA,OAAC,CAACyB,eAAFzB;;AAEAf,WAAI,CAACf,EAAL,CAAQI,SAAR,CAAkB2C,MAAlB,CAAyBhC,KAAI,CAACiC,UAAL,CAAgBqC,QAAzC;;AAEAD,gBAAU,CAACE,mBAAXF,CAA+B,WAA/BA,EAA4CrE,KAAI,CAAC4C,IAAjDyB,EAAuD,IAAvDA;AACAA,gBAAU,CAACE,mBAAXF,CAA+B,SAA/BA,EAA0CrE,KAAI,CAACoE,SAA/CC,EAA0D,IAA1DA;AACArE,WAAI,CAACwE,oBAAL,GAA4BzE,QAAQ,CAAC0E,UAAT1E,CAAoB,YAAM;;;AAGpDsE,kBAAU,CAACE,mBAAXF,CAA+B,OAA/BA,EAAwCrE,KAAI,CAAC0E,YAA7CL,EAA2D,IAA3DA;AACAA,kBAAU,CAACE,mBAAXF,CAA+B,UAA/BA,EAA2CrE,KAAI,CAAC0E,YAAhDL,EAA8D,IAA9DA;AACArE,aAAI,CAACwE,oBAAL,GAA4B,IAA5B;AAL0B,QAA5B;AA3vB4B;;SAuwB9BE,eAAe,aAAK;AAClB3D,OAAC,CAACwB,cAAFxB;AACAA,OAAC,CAACyB,eAAFzB;AAzwB4B;;SACvB9B,KAAKZ;SACLsG,oBAAoB;SACpB9E,UAAL+E,kBAAoBhF,SAAS,CAACiF,cAA9B,MAAiDhF,OAAjD;SACKoC,aAAL2C,kBACKhF,SAAS,CAACiF,cAAVjF,CAAyBqC,UAD9B,MAEK,KAAKpC,OAAL,CAAaoC,UAFlB;SAIK3B,OAAO;AACVC,OAAC,EAAE;AACD4D,wBAAgB,EAAE,YADjB;AAEDnB,gBAAQ,EAAE,OAFT;AAGDG,sBAAc,EAAE,aAHf;AAID2B,sBAAc,EAAE,aAJf;AAKDpB,kBAAU,EAAE,MALX;AAMDqB,oBAAY,EAAE,WANb;AAODpB,kBAAU,EAAE,CAPX;AAQDnD,qBAAa,EAAE,IARd;AASD2B,iBAAS,EAAE,KATV;AAUDhB,oBAAY,EAAE,KAVb;AAWDS,aAAK,EAAE,EAXN;AAYDG,iBAAS,EAAE;AAZV,OADO;AAeVpB,OAAC,EAAE;AACDwD,wBAAgB,EAAE,WADjB;AAEDnB,gBAAQ,EAAE,QAFT;AAGDG,sBAAc,EAAE,cAHf;AAID2B,sBAAc,EAAE,cAJf;AAKDpB,kBAAU,EAAE,KALX;AAMDqB,oBAAY,EAAE,WANb;AAODpB,kBAAU,EAAE,CAPX;AAQDnD,qBAAa,EAAE,IARd;AASD2B,iBAAS,EAAE,KATV;AAUDhB,oBAAY,EAAE,KAVb;AAWDS,aAAK,EAAE,EAXN;AAYDG,iBAAS,EAAE;AAZV;AAfO;SA8BPyC,uBAAuB,KAtCA;;QAyCxB5E,SAAS,CAACoF,SAAVpF,CAAoBqF,GAApBrF,CAAwB,KAAKX,EAA7BW,GAAkC;;;;SAIjCsF,cAAcC,QAAQ,CAAC,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAAD,EAA8B,EAA9B;SACtBvE,cAAcsE,QAAQ,CAAC,KAAKtE,WAAL,CAAiBuE,IAAjB,CAAsB,IAAtB,CAAD,EAA8B,EAA9B;SACtBzD,iBAAiB0D,QAAQ,CAC5B,KAAK1D,cAAL,CAAoByD,IAApB,CAAyB,IAAzB,CAD4B,EAE5B,KAAKvF,OAAL,CAAayF,OAFe;SAIzB9D,iBAAiB6D,QAAQ,CAAC,KAAK7D,cAAL,CAAoB4D,IAApB,CAAyB,IAAzB,CAAD,EAAiC,EAAjC,EAAqC;AACjEG,aAAO,EAAE;AADwD,KAArC;AAI9B3F,aAAS,CAACoE,aAAVpE,GAA0B4F,OAAO,CAAC5F,SAAS,CAACoE,aAAX,CAAjCpE;SAEK6F;;;;;;;;;;;;;;YAaAzB,gBAAP,yBAAuB;QACf0B,QAAQ,GAAGhH,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;AACjBgH,YAAQ,CAACC,SAATD,GACE,2GADFA;QAEME,gBAAgB,GAAGF,QAAQ,CAACG;AAClCnH,YAAQ,CAACQ,IAATR,CAAca,WAAdb,CAA0BkH,gBAA1BlH;QACMoH,mBAAmB,GAAGF,gBAAgB,CAACC;AAC7CD,oBAAgB,CAACG,UAAjBH,GAA8B,CAA9BA;QACMI,oBAAoB,GAAGpG,SAAS,CAACqG,SAAVrG,CAAoBgG,gBAApBhG;QACvBsG,yBAAyB,GAAGtG,SAAS,CAACqG,SAAVrG,CAAoBkG,mBAApBlG;AAClCgG,oBAAgB,CAACG,UAAjBH,GAA8B,GAA9BA;QACMO,qCAAqC,GAAGvG,SAAS,CAACqG,SAAVrG,CAC5CkG,mBAD4ClG;WAIvC;;AAELsE,4BAAsB,EACpB8B,oBAAoB,CAACI,IAArBJ,KAA8BE,yBAAyB,CAACE,IAAxDJ,IACAE,yBAAyB,CAACE,IAA1BF,GACEC,qCAAqC,CAACC,IADxCF,KAEE,CANC;;AAQLjC,4BAAsB,EACpB+B,oBAAoB,CAACI,IAArBJ,KAA8BE,yBAAyB,CAACE;AATrD;;;YAwCFH,YAAP,mBAAiBhH,EAAjB,EAAqB;QACb4C,IAAI,GAAG5C,EAAE,CAACQ,qBAAHR;QACPoF,UAAU,GAAG5F,kBAAkB,CAACQ,EAAD;QAC/Bc,QAAQ,GAAG3B,gBAAgB,CAACa,EAAD;WAE1B;AACLoH,SAAG,EACDxE,IAAI,CAACwE,GAALxE,IACC9B,QAAQ,CAACuG,WAATvG,IAAwBsE,UAAU,CAACkC,eAAXlC,CAA2BmC,SADpD3E,CAFG;AAILuE,UAAI,EACFvE,IAAI,CAACuE,IAALvE,IACC9B,QAAQ,CAAC0G,WAAT1G,IAAwBsE,UAAU,CAACkC,eAAXlC,CAA2B0B,UADpDlE;AALG;;;;;SAYT4D,uBAAO;;AAEL7F,aAAS,CAACoF,SAAVpF,CAAoB8G,GAApB9G,CAAwB,KAAKX,EAA7BW,EAAiC,IAAjCA,EAFK;;QAKDf,WAAW;WACR8H;WAEA3H,iBAAiB,KAAKyC,iBAAL;WAEjByD;WAEA0B;;;;SAITD,6BAAU;sBAAA;;;QAGNE,KAAK,CAACC,SAAND,CAAgBE,MAAhBF,CAAuBG,IAAvBH,CAA4B,KAAK5H,EAAL,CAAQgI,QAApCJ,EAA8C,iBAAK;aACjDK,KAAK,CAAC7H,SAAN6H,CAAgBC,QAAhBD,CAAyBE,MAAI,CAACnF,UAAL,CAAgBoF,OAAzCH;AADF,OAEEI,QACF;;WAEKC,YAAY,KAAKtI,EAAL,CAAQuI,aAAR,OAA0B,KAAKvF,UAAL,CAAgBoF,OAA1C;WACZnE,mBACH,KAAKrD,OAAL,CAAa4H,cAAb,IACA,KAAKxI,EAAL,CAAQuI,aAAR,OAA0B,KAAKvF,UAAL,CAAgByF,cAA1C;WACGC,YACH,KAAK9H,OAAL,CAAa+H,WAAb,IACA,KAAK3I,EAAL,CAAQuI,aAAR,OAA0B,KAAKvF,UAAL,CAAgB0F,SAA1C;WAEGE,WAAW,KAAK5I,EAAL,CAAQuI,aAAR,OAA0B,KAAKvF,UAAL,CAAgB6F,MAA1C;WACXC,SAAS,KAAK9I,EAAL,CAAQuI,aAAR,OAA0B,KAAKvF,UAAL,CAAgB+F,IAA1C;WAETC,gBAAgB,KAAKC,SAAL,CACnB,KAAKX,SADc,QAEf,KAAKtF,UAAL,CAAgBkG,WAFD;WAIhBC,8BAA8B,KAAKnJ,EAAL,CAAQuI,aAAR,OAC7B,KAAKvF,UAAL,CAAgBmG,2BADa;WAG9BC,uBAAuB,KAAKpJ,EAAL,CAAQuI,aAAR,OACtB,KAAKvF,UAAL,CAAgBoG,oBADM;WAGvB/H,KAAKC,EAAEqB,MAAM3C,KAAK,KAAKiJ,SAAL,CACrB,KAAKjJ,EADgB,QAEjB,KAAKgD,UAAL,CAAgBL,KAFC,SAEQ,KAAKK,UAAL,CAAgBqG,UAFxB;WAIlBhI,KAAKK,EAAEiB,MAAM3C,KAAK,KAAKiJ,SAAL,CACrB,KAAKjJ,EADgB,QAEjB,KAAKgD,UAAL,CAAgBL,KAFC,SAEQ,KAAKK,UAAL,CAAgBsG,QAFxB;AA/BzB,WAmCO;;WAEAhB,YAAY7I,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WACZwE,mBAAmBxE,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WACnBmJ,WAAWnJ,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WACXqJ,SAASrJ,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WACTiJ,YAAYjJ,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WACZuJ,gBAAgBvJ,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WAChB0J,8BAA8B1J,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WAC9B2J,uBAAuB3J,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;WAEvB6I,UAAUlI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBoF;WACxCnE,iBAAiB7D,UAAUC,IAAI,KAAK2C,UAAL,CAAgByF;WAC/CG,SAASxI,UAAUC,IAAI,KAAK2C,UAAL,CAAgB6F;WACvCC,OAAO1I,UAAUC,IAAI,KAAK2C,UAAL,CAAgB+F;WACrCL,UAAUtI,UAAUC,IAAI,KAAK2C,UAAL,CAAgB0F;WACxCM,cAAc5I,UAAUC,IAAI,KAAK2C,UAAL,CAAgBkG;WAC5CC,4BAA4B/I,UAAUC,IACzC,KAAK2C,UAAL,CAAgBmG;WAEbC,qBAAqBhJ,UAAUC,IAClC,KAAK2C,UAAL,CAAgBoG;;aAGX,KAAKpJ,EAAL,CAAQuJ,YAAY;aACpBb,UAAUpI,YAAY,KAAKN,EAAL,CAAQuJ;;;WAGhCtF,iBAAiB3D,YAAY,KAAKoI;WAClCE,SAAStI,YAAY,KAAK2D;WAC1B6E,OAAOxI,YAAY,KAAKsI;WACxBO,4BAA4B7I,YAAY,KAAK8I;WAC7Cd,UAAUhI,YAAY,KAAK6I;WAC3Bb,UAAUhI,YAAY,KAAKwI;WAC3BR,UAAUhI,YAAY,KAAK0I;WAC3BhJ,GAAGM,YAAY,KAAKgI;;;QAGvB,CAAC,KAAKjH,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkB3C,EAAnB,IAAyB,CAAC,KAAKqB,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkB3C,IAAI;UAC5C2C,KAAK,GAAGlD,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;UACRqD,SAAS,GAAGrD,QAAQ,CAACU,aAATV,CAAuB,KAAvBA;AAElBkD,WAAK,CAACvC,SAANuC,CAAgBtC,GAAhBsC,CAAoB,KAAKK,UAAL,CAAgBL,KAApCA;AACAG,eAAS,CAAC1C,SAAV0C,CAAoBzC,GAApByC,CAAwB,KAAKE,UAAL,CAAgBF,SAAxCA;AAEAH,WAAK,CAACrC,WAANqC,CAAkBG,SAAlBH;WAEKtB,KAAKC,EAAEqB,MAAM3C,KAAK2C,KAAK,CAAC6G,SAAN7G,CAAgB,IAAhBA;WAClBtB,KAAKC,EAAEqB,MAAM3C,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBqG;WAE9ChI,KAAKK,EAAEiB,MAAM3C,KAAK2C,KAAK,CAAC6G,SAAN7G,CAAgB,IAAhBA;WAClBtB,KAAKK,EAAEiB,MAAM3C,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBsG;WAE9CtJ,GAAGM,YAAY,KAAKe,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkB3C;WACjCA,GAAGM,YAAY,KAAKe,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkB3C;;;SAGnCqB,KAAKC,EAAEwB,UAAU9C,KAAK,KAAKqB,IAAL,CAAUC,CAAV,CAAYqB,KAAZ,CAAkB3C,EAAlB,CAAqBuI,aAArB,OACrB,KAAKvF,UAAL,CAAgBF,SADK;SAGtBzB,KAAKK,EAAEoB,UAAU9C,KAAK,KAAKqB,IAAL,CAAUK,CAAV,CAAYiB,KAAZ,CAAkB3C,EAAlB,CAAqBuI,aAArB,OACrB,KAAKvF,UAAL,CAAgBF,SADK;;QAIvB,CAAC,KAAKlC,OAAL,CAAa6I,UAAU;WACrBpI,KAAKC,EAAEwB,UAAU9C,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBC;WAClD5B,KAAKK,EAAEoB,UAAU9C,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBC;;;SAGpDjD,GAAG0J,aAAa,kBAAkB;;;SAGzC/B,yCAAgB;;;QACR7G,QAAQ,GAAG3B,gBAAgB,CAAC,KAAKa,EAAN,EADnB;;QAGV,KAAKY,OAAL,CAAa6I,UAAU;WACpBzJ,GAAGH,iBAAiB,cAAc,KAAK8B;;;KAG7C,aAAa,SAAS,YAAYgI,QAAQ,aAAK;AAC9CC,YAAI,CAAC5J,EAAL,CAAQH,gBAAR,CAAyBiC,CAAzB,EAA4B8H,MAAI,CAACzG,cAAjC,EAAiD,IAAjD;AADF;KAIC,cAAc,YAAY,aAAawG,QAAQ,aAAK;AACnDC,YAAI,CAAC5J,EAAL,CAAQH,gBAAR,CAAyBiC,CAAzB,EAA4B8H,MAAI,CAACzG,cAAjC,EAAiD;AAC/C0G,eAAO,EAAE,IADsC;AAE/CC,eAAO,EAAE;AAFsC,OAAjD;AADF;SAOK9J,GAAGH,iBAAiB,aAAa,KAAK+B;SACtC5B,GAAGH,iBAAiB,cAAc,KAAKuC;SAEvC6B,iBAAiBpE,iBAAiB,UAAU,KAAKgB,UArBxC;;AAwBdC,YAAQ,CAACjB,gBAATiB,CAA0B,QAA1BA,EAAoC,KAAKyB,cAAzCzB,EAxBc;;QA2BViJ,qBAAqB,GAAG;QACtBC,cAAc,GAAGlJ,QAAQ,CAACmJ,cAATnJ,IAA2BmJ;SAC7CD,iBAAiB,IAAIA,cAAJ,CAAmB,YAAM;UACzC,CAACD,uBAAuB;;AAC5BH,YAAI,CAAC3D,WAAL;AAFoB;SAKjB+D,eAAeE,QAAQ,KAAKlK;SAC5BgK,eAAeE,QAAQ,KAAKxB;AAEjC5H,YAAQ,CAACG,qBAATH,CAA+B,YAAM;AACnCiJ,2BAAqB,GAAG,IAAxBA;AADF,OArCc;;SA0CTI,mBAAmB,IAAIrJ,QAAQ,CAACsJ,gBAAb,CAA8B,KAAKnE,WAAnC;SAEnBkE,iBAAiBD,QAAQ,KAAKxB,WAAW;AAC5C2B,eAAS,EAAE,IADiC;AAE5CC,aAAO,EAAE,IAFmC;AAG5CC,mBAAa,EAAE;AAH6B;;;SAOhDtE,qCAAc;QACNnF,QAAQ,GAAG3B,gBAAgB,CAAC,KAAKa,EAAN;SAC5BqE,WAAWvD,QAAQ,CAAC0J,gBAAT1J,CAA0B,KAAKd,EAA/Bc;SACXgE,QAAQ,KAAKT,QAAL,CAAcoG,SAAd,KAA4B;QAEnCC,YAAY,GAAG,KAAKtB,oBAAL,CAA0BuB,YAA1B,IAA0C;QACzDC,WAAW,GAAG,KAAKxB,oBAAL,CAA0ByB,WAA1B,IAAyC;QACvDC,oBAAoB,GAAG,KAAKpC,SAAL,CAAemC;QAEtCE,2BAA2B,GAAG,KAAK9G,gBAAL,CAAsB4G;QAEpDG,WAAW,GAAG,KAAK3G,QAAL,CAAc4G;QAC5BC,WAAW,GAAG,KAAK7G,QAAL,CAAc8G;SAE7BzC,UAAU0C,MAAMC,UAAa,KAAKhH,QAAL,CAAciH,UAAd,GAAlC,GAAkC,GAA4B,KAAKjH,QAAL,CAAckH,YAA1C,GAAlC,GAAkC,GAA0D,KAAKlH,QAAL,CAAcmH,aAAxE,GAAlC,GAAkC,GAAyF,KAAKnH,QAAL,CAAcoH;SACpInD,UAAU8C,MAAMM,SAArB,MAAkC,KAAKrH,QAAL,CAAciH,UAAhD,UAA+D,KAAKjH,QAAL,CAAckH,YAA7E,UAA8F,KAAKlH,QAAL,CAAcmH,aAA5G,UAA8H,KAAKnH,QAAL,CAAcoH;QAEtIE,qBAAqB,GAAG,KAAKjD,SAAL,CAAekD;QACvCC,oBAAoB,GAAG,KAAKnD,SAAL,CAAeoD;SAEvC7H,iBAAiBmH,MAAMW,SAASrB,YAAY,GAAG,MAAH,GAAY,OApBjD;;SAuBP1B,cAAcoC,MAAM7K,QAAQqK,WAAW,GACrCE,oBADqC,UAExC;SACC9B,cAAcoC,MAAMW,SAAYJ,qBAArC;QAEMK,4BAA4B,GAAG,KAAK/H,gBAAL,CAAsB0G;SAEtDtJ,KAAKC,EAAEC,gBAAgBsK,oBAAoB,GAAGf;SAC9CzJ,KAAKK,EAAEH,gBACVoK,qBAAqB,GAAGK,6BAhCd;;SAmCP3K,KAAKC,EAAEC,gBACVyJ,WAAW,KAAK,QAAhBA,GAA2B,KAA3BA,GAAmC,KAAK3J,IAAL,CAAUC,CAAV,CAAYC;SAC5CF,KAAKK,EAAEH,gBACV2J,WAAW,KAAK,QAAhBA,GAA2B,KAA3BA,GAAmC,KAAK7J,IAAL,CAAUK,CAAV,CAAYH;SAE5CF,KAAKC,EAAEY,eACV,KAAKtB,OAAL,CAAasB,YAAb,KAA8B,GAA9B,IAAqC,KAAKtB,OAAL,CAAasB,YAAb,KAA8B;SAChEb,KAAKK,EAAEQ,eACV,KAAKtB,OAAL,CAAasB,YAAb,KAA8B,GAA9B,IAAqC,KAAKtB,OAAL,CAAasB,YAAb,KAA8B;SAEhEO,sBA7CO;;QAgDRwJ,mBAAmB,GAAG,KAAK5K,IAAL,CAAUC,CAAV,CAAYC,aAAZ,GACtB,KAAKxB,cADiB,GAEtB;QACAmM,mBAAmB,GAAG,KAAK7K,IAAL,CAAUK,CAAV,CAAYH,aAAZ,GACtB,KAAKxB,cADiB,GAEtB;SAECsB,KAAKC,EAAEC,gBACV,KAAKF,IAAL,CAAUC,CAAV,CAAYC,aAAZ,IACAsK,oBAAoB,GAAGd,2BAA2B,GAAGmB;SAClD7K,KAAKK,EAAEH,gBACV,KAAKF,IAAL,CAAUK,CAAV,CAAYH,aAAZ,IACAoK,qBAAqB,GACnBK,4BAA4B,GAAGC;SAE9B5K,KAAKC,EAAEwB,UAAU8B,OAAO,KAAKuH,gBAAL,CAAsB,GAAtB;SACxB9K,KAAKK,EAAEoB,UAAU8B,OAAO,KAAKuH,gBAAL,CAAsB,GAAtB;SAExB9K,KAAKC,EAAEwB,UAAU9C,GAAGoL,MAAM7K,QAAW,KAAKc,IAAL,CAAUC,CAAV,CAAYwB,SAAZ,CAAsB8B,IAAtB,GAA1C;SACKvD,KAAKK,EAAEoB,UAAU9C,GAAGoL,MAAMW,SAAY,KAAK1K,IAAL,CAAUK,CAAV,CAAYoB,SAAZ,CAAsB8B,IAAtB,GAA3C;SAEKnD,kBAAkB;SAClBA,kBAAkB;SAElB2K,sBAAsB;SACtBA,sBAAsB;;;;;;;SAM7BD,6CAAiB9K,IAAjB,EAA6B;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;QACX,CAAC,KAAKA,IAAL,CAAUA,IAAV,EAAgBE,eAAe;aAC3B;;;QAGHyC,WAAW,GAAG,KAAK0E,SAAL,CAAe,KAAKrH,IAAL,CAAUA,IAAV,EAAgB6C,cAA/B;QACdJ,SAAS,GAAG,KAAKzC,IAAL,CAAUA,IAAV,EAAgBsB,KAAhB,CAAsB3C,EAAtB,CAAyB,KAAKqB,IAAL,CAAUA,IAAV,EAAgBwE,cAAzC;QACdwG;QAEAC,cAAc,GAAGxI,SAAS,GAAGE,YATN;;AAY3BqI,iBAAa,GAAGE,IAAI,CAACC,GAALD,CACd,CAAC,EAAED,cAAc,GAAGxI,SAAnB,CADayI,EAEd,KAAK3L,OAAL,CAAa6L,gBAFCF,CAAhBF;;QAKI,KAAKzL,OAAL,CAAa8L,kBAAkB;AACjCL,mBAAa,GAAGE,IAAI,CAACI,GAALJ,CAASF,aAATE,EAAwB,KAAK3L,OAAL,CAAa8L,gBAArCH,CAAhBF;;;WAGKA;;;SAGT5K,+CAAkBJ,IAAlB,EAA8B;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;QACZ,CAAC,KAAKA,IAAL,CAAUA,IAAV,EAAgBE,eAAe;;;;QAI9ByC,WAAW,GAAG,KAAKC,gBAAL,CAAsB,KAAK5C,IAAL,CAAUA,IAAV,EAAgB6C,cAAtC;QACdJ,SAAS,GAAG,KAAKzC,IAAL,CAAUA,IAAV,EAAgBsB,KAAhB,CAAsB3C,EAAtB,CAAyB,KAAKqB,IAAL,CAAUA,IAAV,EAAgBwE,cAAzC;QACZ1B,QAAQ,GAAGC,QAAQ,CAAC,KAAKC,QAAL,CAAc,KAAKhD,IAAL,CAAUA,IAAV,EAAgB0C,QAA9B,CAAD,EAA0C,EAA1C;QACnBjB,SAAS,GAAG,KAAKzB,IAAL,CAAUA,IAAV,EAAgByB;QAE9B8J,YAAY,GAAG,KAAK3I,gBAAL,CAAsB,KAAK5C,IAAL,CAAUA,IAAV,EAAgB6D,gBAAtC;AACnB0H,gBAAY,GACVvL,IAAI,KAAK,GAATA,IACA,KAAKyD,KADLzD,IAEAV,SAAS,CAACoE,aAAVpE,GAA0BsE,sBAF1B5D,GAGI,CAACuL,YAHLvL,GAIIuL,YALNA;QAMIC,cAAc,GAAGD,YAAY,IAAI5I,WAAW,GAAGG,QAAlB;QAE7B2I,YAAY,GAAG,CAAC,EAAE,CAAChJ,SAAS,GAAGhB,SAAS,CAAC8B,IAAvB,IAA+BiI,cAAjC;AACpBC,gBAAY,GACVzL,IAAI,KAAK,GAATA,IACA,KAAKyD,KADLzD,IAEAV,SAAS,CAACoE,aAAVpE,GAA0BqE,sBAF1B3D,GAGIyL,YAAY,IAAIhJ,SAAS,GAAGhB,SAAS,CAAC8B,IAA1B,CAHhBvD,GAIIyL,YALNA;AAOAhK,aAAS,CAAC9C,EAAV8C,CAAasI,KAAbtI,CAAmBiK,SAAnBjK,GACEzB,IAAI,KAAK,GAATA,oBACmByL,YADnB,qCAEsBA,YAFtB,WADFhK;;;SAMFsJ,uDAAsB/K,IAAtB,EAAkC;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;QACdsB,KAAK,GAAG,KAAKtB,IAAL,CAAUA,IAAV,EAAgBsB,KAAhB,CAAsB3C;QAC9B8C,SAAS,GAAG,KAAKzB,IAAL,CAAUA,IAAV,EAAgByB,SAAhB,CAA0B9C;;QAExC,KAAKqB,IAAL,CAAUA,IAAV,EAAgBE,aAAhB,IAAiC,KAAKF,IAAL,CAAUA,IAAV,EAAgBa,cAAc;AACjES,WAAK,CAACyI,KAANzI,CAAYqK,UAAZrK,GAAyB,SAAzBA;WACKsB,iBAAiBmH,MAAM,KAAK/J,IAAL,CAAUA,IAAV,EAAgByE,gBAAgB;AAF9D,WAGO;AACLnD,WAAK,CAACyI,KAANzI,CAAYqK,UAAZrK,GAAyB,QAAzBA;WACKsB,iBAAiBmH,MAAM,KAAK/J,IAAL,CAAUA,IAAV,EAAgByE,gBAAgB;AAT9B;;;QAa5B,KAAKzE,IAAL,CAAUA,IAAV,EAAgBE,eAAe;AACjCuB,eAAS,CAACsI,KAAVtI,CAAgBmK,OAAhBnK,GAA0B,OAA1BA;AADF,WAEO;AACLA,eAAS,CAACsI,KAAVtI,CAAgBmK,OAAhBnK,GAA0B,MAA1BA;;;;SAIJL,qDAAsB;SACfmG,SAASwC,MAAM,KAAKtG,KAAL,GAAa,MAAb,GAAsB,WACxC,KAAKzD,IAAL,CAAUK,CAAV,CAAYH,aAAZ,IAA6B,KAAKF,IAAL,CAAUK,CAAV,CAAYQ,YAAzC,SACQ,KAAKnC,cADb,UAEI;SACD6I,SAASwC,MAAM8B,SAClB,KAAK7L,IAAL,CAAUC,CAAV,CAAYC,aAAZ,IAA6B,KAAKF,IAAL,CAAUC,CAAV,CAAYY,YAAzC,SACQ,KAAKnC,cADb,UAEI;;;;;;;SAuDRoC,iDAAmBd,IAAnB,EAA+B;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;SACZA,KAAKA,MAAMsB,MAAMC,OAAO,KAAKvB,IAAL,CAC3BA,IAD2B,EAE3BsB,KAF2B,CAErB3C,EAFqB,CAElBQ,qBAFkB;SAGxBa,KAAKA,MAAMyB,UAAUF,OAAO,KAAKvB,IAAL,CAC/BA,IAD+B,EAE/ByB,SAF+B,CAErB9C,EAFqB,CAElBQ,qBAFkB;QAI3B2M,wBAAwB,GAAG,KAAKtK,cAAL,CAC/B,KAAKxB,IAAL,CAAUA,IAAV,EAAgByB,SAAhB,CAA0BF,IADK;;QAI7BuK,0BAA0B;WACvB9L,KAAKA,MAAMyB,UAAU9C,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBoK;AAD7D,WAEO;WACA/L,KAAKA,MAAMyB,UAAU9C,GAAGI,UAAU2C,OAAO,KAAKC,UAAL,CAAgBoK;;;QAG5D,KAAKvK,cAAL,CAAoB,KAAKxB,IAAL,CAAUA,IAAV,EAAgBsB,KAAhB,CAAsBC,IAA1C,GAAiD;WAC9CpB,cAAcH;WACdA,KAAKA,MAAMsB,MAAM3C,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBoK;AAFzD,WAGO;WACA/L,KAAKA,MAAMsB,MAAM3C,GAAGI,UAAU2C,OAAO,KAAKC,UAAL,CAAgBoK;;;;SAmB9D9K,mDAAoBjB,IAApB,EAAgC;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;SACbA,KAAKA,MAAMsB,MAAM3C,GAAGI,UAAU2C,OAAO,KAAKC,UAAL,CAAgBoK;SACrD/L,KAAKA,MAAMyB,UAAU9C,GAAGI,UAAU2C,OAAO,KAAKC,UAAL,CAAgBoK;;;;;;;SAahE5L,uCAAcH,IAAd,EAA0B;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;QACRyB,SAAS,GAAG,KAAKzB,IAAL,CAAUA,IAAV,EAAgByB,SAAhB,CAA0B9C;;QAEtC,CAAC,KAAKqB,IAAL,CAAUA,IAAV,EAAgB6B,WAAW;AAC9BJ,eAAS,CAAC1C,SAAV0C,CAAoBzC,GAApByC,CAAwB,KAAKE,UAAL,CAAgBC,OAAxCH;WACKzB,KAAKA,MAAM6B,YAAY;;;QAG1B,KAAKtC,OAAL,CAAa6I,UAAU;WACpB/G;;;;;;;;;;;;SAuETe,mCAAY3B,CAAZ,EAAeT,IAAf,EAA2B;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;QACP+D,UAAU,GAAG5F,kBAAkB,CAAC,KAAKQ,EAAN;QAC/Bc,QAAQ,GAAG3B,gBAAgB,CAAC,KAAKa,EAAN;QAC3B8C,SAAS,GAAG,KAAKzB,IAAL,CAAUA,IAAV,EAAgByB,UAHT;;QAMnBc,WAAW,GAAGvC,IAAI,KAAK,GAATA,GAAeS,CAAC,CAACwC,KAAjBjD,GAAyBS,CAAC,CAACyC;SAC1ClD,KAAKA,MAAMqD,aACdd,WAAW,GAAGd,SAAS,CAACF,IAAVE,CAAe,KAAKzB,IAAL,CAAUA,IAAV,EAAgBoD,UAA/B3B;SACXe,cAAcxC;SAEdrB,GAAGI,UAAUC,IAAI,KAAK2C,UAAL,CAAgBqC;AAEtCD,cAAU,CAACvF,gBAAXuF,CAA4B,WAA5BA,EAAyC,KAAKzB,IAA9CyB,EAAoD,IAApDA;AACAA,cAAU,CAACvF,gBAAXuF,CAA4B,SAA5BA,EAAuC,KAAKD,SAA5CC,EAAuD,IAAvDA;;QACI,KAAKG,oBAAL,KAA8B,MAAM;AACtCH,gBAAU,CAACvF,gBAAXuF,CAA4B,OAA5BA,EAAqC,KAAKK,YAA1CL,EAAwD,IAAxDA;AACAA,gBAAU,CAACvF,gBAAXuF,CAA4B,UAA5BA,EAAwC,KAAKK,YAA7CL,EAA2D,IAA3DA;AAFF,WAGO;AACLtE,cAAQ,CAACuM,YAATvM,CAAsB,KAAKyE,oBAA3BzE;WACKyE,uBAAuB;;;;;;;;SAuFhC7B,qCAAa5B,CAAb,EAAgBT,IAAhB,EAA4B;;;QAAZA,IAAY;AAAZA,UAAY,GAAL,GAAPA;;;QACV,CAAC,KAAKT,OAAL,CAAa0M,cAAc;QAE1BxM,QAAQ,GAAG3B,gBAAgB,CAAC,KAAKa,EAAN;SAC5BqB,KAAKA,MAAMyB,UAAUF,OAAO,KAAKvB,IAAL,CAC/BA,IAD+B,EAE/ByB,SAF+B,CAErB9C,EAFqB,CAElBQ,qBAFkB;QAG3BsC,SAAS,GAAG,KAAKzB,IAAL,CAAUA,IAAV,EAAgByB;QAC5ByK,eAAe,GAAGzK,SAAS,CAACF,IAAVE,CAAe,KAAKzB,IAAL,CAAUA,IAAV,EAAgBoD,UAA/B3B;QAClBqB,QAAQ,GAAGC,QAAQ,CAAC,KAAKC,QAAL,CAAc,KAAKhD,IAAL,CAAUA,IAAV,EAAgB0C,QAA9B,CAAD,EAA0C,EAA1C;QACrByJ,QAAQ,GAAG,KAAKvJ,gBAAL,CAAsB,KAAK5C,IAAL,CAAUA,IAAV,EAAgB6D,gBAAtC;QACTuI,CAAC,GACLpM,IAAI,KAAK,GAATA,GACI,KAAKW,MAAL,GAAcuL,eADlBlM,GAEI,KAAKQ,MAAL,GAAc0L;QACdG,GAAG,GAAGD,CAAC,GAAG,CAAJA,GAAQ,CAAC,CAATA,GAAa;QACnBE,UAAU,GAAGD,GAAG,KAAK,CAAC,CAATA,GAAaF,QAAQ,GAAGrJ,QAAxBuJ,GAAmCF,QAAQ,GAAGrJ;;QAE3DyJ,QAAQ,GAAG,SAAXA,QAAW,GAAM;UACjBF,GAAG,KAAK,CAAC,GAAG;YACVF,QAAQ,GAAGG,YAAY;;;AACzBH,kBAAQ,IAAIK,MAAI,CAACjN,OAAL,CAAakN,iBAAzBN;;AACAK,gBAAI,CAAC5J,gBAAL,CAAsB2J,QAAtB,oDACGC,MAAI,CAACxM,IAAL,CAAUA,IAAV,EAAgBoD,UADnB,IACgC+I,QADhC;;AAGA1M,kBAAQ,CAACG,qBAATH,CAA+B8M,QAA/B9M;;AANJ,aAQO;YACD0M,QAAQ,GAAGG,YAAY;;;AACzBH,kBAAQ,IAAIK,MAAI,CAACjN,OAAL,CAAakN,iBAAzBN;;AACAK,gBAAI,CAAC5J,gBAAL,CAAsB2J,QAAtB,sDACGC,MAAI,CAACxM,IAAL,CAAUA,IAAV,EAAgBoD,UADnB,IACgC+I,QADhC;;AAGA1M,kBAAQ,CAACG,qBAATH,CAA+B8M,QAA/B9M;;;AAfN;;AAoBA8M,YAAQ;;;;;;;SAMVG,iDAAoB;WACX,KAAKrF;;;;;;;SAMdsF,+CAAmB;WACV,KAAK/J;;;SAGdzB,iDAAoB;;QAEd;;UAGAgI,gBAAgB,CAAC,KAAKvG,gBAAN,EAAwB,qBAAxB,CAAhBuG,CACGyC,OADHzC,KACe,MADfA,IAEA,oBAAoB/K,QAAQ,CAAC6H,eAAT7H,CAAyB2L,KAF7CZ,IAGA,wBAAwB/K,QAAQ,CAAC6H,eAAT7H,CAAyB2L,OACjD;eACO;AANT,aAOO;eACErL,cAAc,CAAC,KAAKC,EAAN;;AAVzB,MAYE,OAAO8B,CAAP,EAAU;aACH/B,cAAc,CAAC,KAAKC,EAAN;;;;SAIzBiO,6CAAkB;;;QACVnN,QAAQ,GAAG3B,gBAAgB,CAAC,KAAKa,EAAN,EADjB;;QAGZ,KAAKY,OAAL,CAAa6I,UAAU;WACpBzJ,GAAGsF,oBAAoB,cAAc,KAAK3D;;;KAGhD,aAAa,SAAS,YAAYgI,QAAQ,aAAK;AAC9CuE,YAAI,CAAClO,EAAL,CAAQsF,mBAAR,CAA4BxD,CAA5B,EAA+BoM,MAAI,CAAC/K,cAApC,EAAoD,IAApD;AADF;KAIC,cAAc,YAAY,aAAawG,QAAQ,aAAK;AACnDuE,YAAI,CAAClO,EAAL,CAAQsF,mBAAR,CAA4BxD,CAA5B,EAA+BoM,MAAI,CAAC/K,cAApC,EAAoD;AAClD0G,eAAO,EAAE,IADyC;AAElDC,eAAO,EAAE;AAFyC,OAApD;AADF;SAOK9J,GAAGsF,oBAAoB,aAAa,KAAK1D;SACzC5B,GAAGsF,oBAAoB,cAAc,KAAKlD;;QAE3C,KAAK6B,kBAAkB;WACpBA,iBAAiBqB,oBAAoB,UAAU,KAAKzE;;;AAG3DC,YAAQ,CAACwE,mBAATxE,CAA6B,QAA7BA,EAAuC,KAAKyB,cAA5CzB;;QAEI,KAAKqJ,kBAAkB;WACpBA,iBAAiBgE;;;QAGpB,KAAKnE,gBAAgB;WAClBA,eAAemE;AAhCN;;;SAoCXlI,YAAY5D;SACZT,YAAYS;SACZK,eAAeL;SACfE,eAAeF;;;;;;;SAMtB+L,6BAAU;SACHH;AACLtN,aAAS,CAACoF,SAAVpF,CAAoB0N,MAApB1N,CAA2B,KAAKX,EAAhCW;;;;;;;SAMFkC,yCAAeyL,IAAf,EAAqB;WAEjB,KAAKzM,MAAL,IAAeyM,IAAI,CAACnH,IAApB,IACA,KAAKtF,MAAL,IAAeyM,IAAI,CAACnH,IAALmH,GAAYA,IAAI,CAAC/N,KADhC,IAEA,KAAKyB,MAAL,IAAesM,IAAI,CAAClH,GAFpB,IAGA,KAAKpF,MAAL,IAAesM,IAAI,CAAClH,GAALkH,GAAWA,IAAI,CAACvC;;;;;;;SAOnC9C,+BAAUjJ,EAAV,EAAcuO,KAAd,EAAqB;QACbC,OAAO,GACXxO,EAAE,CAACwO,OAAHxO,IACAA,EAAE,CAACyO,qBADHzO,IAEAA,EAAE,CAAC0O,kBAFH1O,IAGAA,EAAE,CAAC2O;WACE/G,KAAK,CAACC,SAAND,CAAgBE,MAAhBF,CAAuBG,IAAvBH,CAA4B5H,EAAE,CAACgI,QAA/BJ,EAAyC,iBAAK;aACnD4G,OAAO,CAACzG,IAARyG,CAAavG,KAAbuG,EAAoBD,KAApBC;AADK,OAEL,CAFK5G;;;;;;AA95BUjH,UAmGZiF,cAnGYjF,GAmGK;AACtB8I,UAAQ,EAAE,IADY;AAEtBvH,cAAY,EAAE,KAFQ;AAGtBoL,cAAY,EAAE,IAHQ;AAItBQ,mBAAiB,EAAE,EAJG;AAKtB9K,YAAU,EAAE;AACV0F,aAAS,EAAE,mBADD;AAEVD,kBAAc,EAAE,2BAFN;AAGVI,UAAM,EAAE,kBAHE;AAIVE,QAAI,EAAE,gBAJI;AAKVX,WAAO,EAAE,mBALC;AAMVc,eAAW,EAAE,uBANH;AAOVpG,aAAS,EAAE,qBAPD;AAQVH,SAAK,EAAE,iBARG;AASVwG,+BAA2B,EAAE,wCATnB;AAUVC,wBAAoB,EAAE,gCAVZ;AAWVnG,WAAO,EAAE,mBAXC;AAYVoG,cAAU,EAAE,sBAZF;AAaVC,YAAQ,EAAE,oBAbA;AAcV8D,SAAK,EAAE,iBAdG;AAeV/H,YAAQ,EAAE;AAfA,GALU;AAsBtBoH,kBAAgB,EAAE,EAtBI;AAuBtBC,kBAAgB,EAAE,CAvBI;AAwBtBrG,SAAO,EAAE;AAxBa,CAnGL1F;AAAAA,UA6IZoF,SA7IYpF,GA6IA,IAAIiO,OAAJ,EA7IAjO","names":["getElementWindow","element","ownerDocument","defaultView","window","getElementDocument","document","cachedScrollbarWidth","cachedDevicePixelRatio","canUseDOM","addEventListener","devicePixelRatio","scrollbarWidth","el","body","box","createElement","classList","add","appendChild","width","getBoundingClientRect","right","removeChild","SimpleBar","options","onScroll","elWindow","_this","scrollXTicking","requestAnimationFrame","scrollX","scrollYTicking","scrollY","axis","x","isOverflowing","showScrollbar","positionScrollbar","y","onMouseEnter","onMouseMove","mouseX","e","clientX","mouseY","clientY","forceVisible","onMouseMoveForAxis","onMouseLeave","cancel","onMouseLeaveForAxis","onWindowResize","getScrollbarWidth","hideNativeScrollbar","hideScrollbars","track","rect","isWithinBounds","scrollbar","remove","classNames","visible","isVisible","onPointerEvent","isWithinTrackXBounds","isWithinTrackYBounds","preventDefault","stopPropagation","type","onDragStart","onTrackClick","drag","eventOffset","draggedAxis","trackSize","sizeAttr","contentSize","contentWrapperEl","scrollSizeAttr","hostSize","parseInt","elStyles","pageY","pageX","dragPos","offsetAttr","dragOffset","dragPerc","size","scrollPos","isRtl","getRtlHelpers","isRtlScrollbarInverted","isRtlScrollingInverted","scrollOffsetAttr","onEndDrag","elDocument","dragging","removeEventListener","removePreventClickId","setTimeout","preventClick","minScrollbarWidth","Object","defaultOptions","offsetSizeAttr","overflowAttr","instances","has","recalculate","throttle","bind","debounce","timeout","leading","memoize","init","dummyDiv","innerHTML","scrollbarDummyEl","firstElementChild","dummyContainerChild","scrollLeft","dummyContainerOffset","getOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","left","top","pageYOffset","documentElement","scrollTop","pageXOffset","set","initDOM","initListeners","Array","prototype","filter","call","children","child","contains","_this2","wrapper","length","wrapperEl","querySelector","scrollableNode","contentWrapper","contentEl","contentNode","offsetEl","offset","maskEl","mask","placeholderEl","findChild","placeholder","heightAutoObserverWrapperEl","heightAutoObserverEl","horizontal","vertical","firstChild","cloneNode","autoHide","setAttribute","forEach","_this3","capture","passive","resizeObserverStarted","resizeObserver","ResizeObserver","observe","mutationObserver","MutationObserver","childList","subtree","characterData","getComputedStyle","direction","isHeightAuto","offsetHeight","isWidthAuto","offsetWidth","contentElOffsetWidth","contentWrapperElOffsetWidth","elOverflowX","overflowX","elOverflowY","overflowY","style","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","contentElScrollHeight","scrollHeight","contentElScrollWidth","scrollWidth","height","contentWrapperElOffsetHeight","offsetForXScrollbar","offsetForYScrollbar","getScrollbarSize","toggleTrackVisibility","scrollbarSize","scrollbarRatio","Math","max","scrollbarMinSize","scrollbarMaxSize","min","scrollOffset","scrollPourcent","handleOffset","transform","visibility","display","bottom","isWithinScrollbarBoundsX","hover","clearTimeout","clickOnTrack","scrollbarOffset","scrolled","t","dir","scrollSize","scrollTo","_this4","clickOnTrackSpeed","getContentElement","getScrollElement","removeListeners","_this5","disconnect","unMount","delete","bbox","query","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","WeakMap"],"sources":["C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\node_modules\\simplebar\\src\\helpers.js","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\node_modules\\simplebar\\src\\scrollbar-width.js","C:\\Users\\Filouuuuuu\\PCBOT-WEBAPP\\Client\\node_modules\\simplebar\\src\\simplebar.js"],"sourcesContent":["// Helper function to retrieve options from element attributes\nexport const getOptions = function(obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case 'true':\n            acc[key] = true;\n            break;\n          case 'false':\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nexport function getElementWindow(element) {\n  if (\n    !element ||\n    !element.ownerDocument ||\n    !element.ownerDocument.defaultView\n  ) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\n\nexport function getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\n","import canUseDOM from 'can-use-dom';\nimport { getElementDocument } from \"./helpers\";\n\nlet cachedScrollbarWidth = null;\nlet cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', () => {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nexport default function scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    \n    const document = getElementDocument(el);\n    \n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    const body = document.body;\n    const box = document.createElement('div');\n\n    box.classList.add('simplebar-hide-scrollbar');\n\n    body.appendChild(box);\n\n    const width = box.getBoundingClientRect().right;\n\n    body.removeChild(box);\n\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport scrollbarWidth from './scrollbar-width';\nimport { getElementWindow, getElementDocument } from './helpers';\n\nexport default class SimpleBar {\n  constructor(element, options) {\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = { ...SimpleBar.defaultOptions, ...options };\n    this.classNames = {\n      ...SimpleBar.defaultOptions.classNames,\n      ...this.options.classNames\n    };\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null;\n\n    // Don't re-instantiate over an existing one\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(\n      this.hideScrollbars.bind(this),\n      this.options.timeout\n    );\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n\n    this.init();\n  }\n\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n  static getRtlHelpers() {\n    const dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML =\n      '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    const scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    const dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    const dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    const dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    const dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(\n      dummyContainerChild\n    );\n\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left &&\n        dummyContainerChildOffset.left -\n          dummyContainerScrollOffsetAfterScroll.left !==\n          0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  }\n\n  static defaultOptions = {\n    autoHide: true,\n    forceVisible: false,\n    clickOnTrack: true,\n    clickOnTrackSpeed: 40,\n    classNames: {\n      contentEl: 'simplebar-content',\n      contentWrapper: 'simplebar-content-wrapper',\n      offset: 'simplebar-offset',\n      mask: 'simplebar-mask',\n      wrapper: 'simplebar-wrapper',\n      placeholder: 'simplebar-placeholder',\n      scrollbar: 'simplebar-scrollbar',\n      track: 'simplebar-track',\n      heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n      heightAutoObserverEl: 'simplebar-height-auto-observer',\n      visible: 'simplebar-visible',\n      horizontal: 'simplebar-horizontal',\n      vertical: 'simplebar-vertical',\n      hover: 'simplebar-hover',\n      dragging: 'simplebar-dragging'\n    },\n    scrollbarMinSize: 25,\n    scrollbarMaxSize: 0,\n    timeout: 1000\n  };\n\n  static getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    const elDocument = getElementDocument(el);\n    const elWindow = getElementWindow(el);\n\n    return {\n      top:\n        rect.top +\n        (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left:\n        rect.left +\n        (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  }\n\n  static instances = new WeakMap();\n\n  init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this);\n\n    // We stop here on server-side\n    if (canUseDOM) {\n      this.initDOM();\n\n      this.scrollbarWidth = this.getScrollbarWidth();\n\n      this.recalculate();\n\n      this.initListeners();\n    }\n  }\n\n  initDOM() {\n    // make sure this element doesn't have the elements yet\n    if (\n      Array.prototype.filter.call(this.el.children, child =>\n        child.classList.contains(this.classNames.wrapper)\n      ).length\n    ) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`);\n      this.contentWrapperEl =\n        this.options.scrollableNode ||\n        this.el.querySelector(`.${this.classNames.contentWrapper}`);\n      this.contentEl =\n        this.options.contentNode ||\n        this.el.querySelector(`.${this.classNames.contentEl}`);\n\n      this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`);\n      this.maskEl = this.el.querySelector(`.${this.classNames.mask}`);\n\n      this.placeholderEl = this.findChild(\n        this.wrapperEl,\n        `.${this.classNames.placeholder}`\n      );\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverWrapperEl}`\n      );\n      this.heightAutoObserverEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverEl}`\n      );\n      this.axis.x.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.horizontal}`\n      );\n      this.axis.y.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.vertical}`\n      );\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(\n        this.classNames.heightAutoObserverWrapperEl\n      );\n      this.heightAutoObserverEl.classList.add(\n        this.classNames.heightAutoObserverEl\n      );\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      const track = document.createElement('div');\n      const scrollbar = document.createElement('div');\n\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n\n      track.appendChild(scrollbar);\n\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  }\n\n  initListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll);\n\n    // Browser zoom triggers a window resize\n    elWindow.addEventListener('resize', this.onWindowResize);\n\n    // Hack for https://github.com/WICG/ResizeObserver/issues/38\n    let resizeObserverStarted = false;\n    const resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(() => {\n      if (!resizeObserverStarted) return;\n      this.recalculate();\n    });\n\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n\n    elWindow.requestAnimationFrame(() => {\n      resizeObserverStarted = true;\n    });\n\n    // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  recalculate() {\n    const elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n\n    const isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    const isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    const contentElOffsetWidth = this.contentEl.offsetWidth;\n\n    const contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n\n    const elOverflowX = this.elStyles.overflowX;\n    const elOverflowY = this.elStyles.overflowY;\n\n    this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`;\n    this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`;\n\n    const contentElScrollHeight = this.contentEl.scrollHeight;\n    const contentElScrollWidth = this.contentEl.scrollWidth;\n\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n\n    // Determine placeholder size\n    this.placeholderEl.style.width = isWidthAuto\n      ? `${contentElOffsetWidth}px`\n      : 'auto';\n    this.placeholderEl.style.height = `${contentElScrollHeight}px`;\n\n    const contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing =\n      contentElScrollHeight > contentWrapperElOffsetHeight;\n\n    // Set isOverflowing to false if user explicitely set hidden overflow\n    this.axis.x.isOverflowing =\n      elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing =\n      elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n\n    this.axis.x.forceVisible =\n      this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible =\n      this.options.forceVisible === 'y' || this.options.forceVisible === true;\n\n    this.hideNativeScrollbar();\n\n    // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n    let offsetForXScrollbar = this.axis.x.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n    let offsetForYScrollbar = this.axis.y.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n\n    this.axis.x.isOverflowing =\n      this.axis.x.isOverflowing &&\n      contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing =\n      this.axis.y.isOverflowing &&\n      contentElScrollHeight >\n        contentWrapperElOffsetHeight - offsetForXScrollbar;\n\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n\n    this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`;\n    this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`;\n\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n\n  /**\n   * Calculate scrollbar size\n   */\n  getScrollbarSize(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    const contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    let scrollbarSize;\n\n    let scrollbarRatio = trackSize / contentSize;\n\n    // Calculate new height/position of drag handle.\n    scrollbarSize = Math.max(\n      ~~(scrollbarRatio * trackSize),\n      this.options.scrollbarMinSize\n    );\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  }\n\n  positionScrollbar(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    const contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    let scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollingInverted\n        ? -scrollOffset\n        : scrollOffset;\n    let scrollPourcent = scrollOffset / (contentSize - hostSize);\n\n    let handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n        ? handleOffset + (trackSize - scrollbar.size)\n        : handleOffset;\n\n    scrollbar.el.style.transform =\n      axis === 'x'\n        ? `translate3d(${handleOffset}px, 0, 0)`\n        : `translate3d(0, ${handleOffset}px, 0)`;\n  }\n\n  toggleTrackVisibility(axis = 'y') {\n    const track = this.axis[axis].track.el;\n    const scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    }\n\n    // Even if forceVisible is enabled, scrollbar itself should be hidden\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  }\n\n  hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n      this.axis.y.isOverflowing || this.axis.y.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n    this.offsetEl.style.bottom =\n      this.axis.x.isOverflowing || this.axis.x.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n  }\n\n  /**\n   * On scroll event handling\n   */\n  onScroll = () => {\n    const elWindow = getElementWindow(this.el);\n    if (!this.scrollXTicking) {\n      elWindow.requestAnimationFrame(this.scrollX);\n      this.scrollXTicking = true;\n    }\n\n    if (!this.scrollYTicking) {\n      elWindow.requestAnimationFrame(this.scrollY);\n      this.scrollYTicking = true;\n    }\n  };\n\n  scrollX = () => {\n    if (this.axis.x.isOverflowing) {\n      this.showScrollbar('x');\n      this.positionScrollbar('x');\n    }\n\n    this.scrollXTicking = false;\n  };\n\n  scrollY = () => {\n    if (this.axis.y.isOverflowing) {\n      this.showScrollbar('y');\n      this.positionScrollbar('y');\n    }\n\n    this.scrollYTicking = false;\n  };\n\n  onMouseEnter = () => {\n    this.showScrollbar('x');\n    this.showScrollbar('y');\n  };\n\n  onMouseMove = e => {\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseMoveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseMoveForAxis('y');\n    }\n  };\n\n  onMouseMoveForAxis(axis = 'y') {\n    this.axis[axis].track.rect = this.axis[\n      axis\n    ].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n\n    const isWithinScrollbarBoundsX = this.isWithinBounds(\n      this.axis[axis].scrollbar.rect\n    );\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  }\n\n  onMouseLeave = () => {\n    this.onMouseMove.cancel();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseLeaveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseLeaveForAxis('y');\n    }\n\n    this.mouseX = -1;\n    this.mouseY = -1;\n  };\n\n  onMouseLeaveForAxis(axis = 'y') {\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  }\n\n  onWindowResize = () => {\n    // Recalculate scrollbarWidth in case it's a zoom\n    this.scrollbarWidth = this.getScrollbarWidth();\n\n    this.hideNativeScrollbar();\n  };\n\n  /**\n   * Show scrollbar\n   */\n  showScrollbar(axis = 'y') {\n    let scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n\n  /**\n   * Hide Scrollbar\n   */\n  hideScrollbars = () => {\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (!this.isWithinBounds(this.axis.y.track.rect)) {\n      this.axis.y.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.y.isVisible = false;\n    }\n\n    if (!this.isWithinBounds(this.axis.x.track.rect)) {\n      this.axis.x.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.x.isVisible = false;\n    }\n  };\n\n  onPointerEvent = e => {\n    let isWithinTrackXBounds, isWithinTrackYBounds;\n\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      isWithinTrackXBounds = this.isWithinBounds(this.axis.x.track.rect);\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      isWithinTrackYBounds = this.isWithinBounds(this.axis.y.track.rect);\n    }\n\n    // If any pointer event is called on the scrollbar\n    if (isWithinTrackXBounds || isWithinTrackYBounds) {\n      // Preventing the event's default action stops text being\n      // selectable during the drag.\n      e.preventDefault();\n      // Prevent event leaking\n      e.stopPropagation();\n\n      if (e.type === 'mousedown') {\n        if (isWithinTrackXBounds) {\n          this.axis.x.scrollbar.rect = this.axis.x.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.x.scrollbar.rect)) {\n            this.onDragStart(e, 'x');\n          } else {\n            this.onTrackClick(e, 'x');\n          }\n        }\n\n        if (isWithinTrackYBounds) {\n          this.axis.y.scrollbar.rect = this.axis.y.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.y.scrollbar.rect)) {\n            this.onDragStart(e, 'y');\n          } else {\n            this.onTrackClick(e, 'y');\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  onDragStart(e, axis = 'y') {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n    const eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset =\n      eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n\n    this.el.classList.add(this.classNames.dragging);\n\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n\n  /**\n   * Drag scrollbar handle\n   */\n  drag = e => {\n    let eventOffset;\n    const track = this.axis[this.draggedAxis].track;\n    const trackSize = track.rect[this.axis[this.draggedAxis].sizeAttr];\n    const scrollbar = this.axis[this.draggedAxis].scrollbar;\n    const contentSize = this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollSizeAttr\n    ];\n    const hostSize = parseInt(\n      this.elStyles[this.axis[this.draggedAxis].sizeAttr],\n      10\n    );\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.draggedAxis === 'y') {\n      eventOffset = e.pageY;\n    } else {\n      eventOffset = e.pageX;\n    }\n\n    // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n    let dragPos =\n      eventOffset -\n      track.rect[this.axis[this.draggedAxis].offsetAttr] -\n      this.axis[this.draggedAxis].dragOffset;\n    // Convert the mouse position into a percentage of the scrollbar height/width.\n    let dragPerc = dragPos / (trackSize - scrollbar.size);\n\n    // Scroll the content by the same percentage.\n    let scrollPos = dragPerc * (contentSize - hostSize);\n\n    // Fix browsers inconsistency on RTL\n    if (this.draggedAxis === 'x') {\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n          ? scrollPos - (trackSize + scrollbar.size)\n          : scrollPos;\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted\n          ? -scrollPos\n          : scrollPos;\n    }\n\n    this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollOffsetAttr\n    ] = scrollPos;\n  };\n\n  /**\n   * End scroll handle drag\n   */\n  onEndDrag = e => {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.el.classList.remove(this.classNames.dragging);\n\n    elDocument.removeEventListener('mousemove', this.drag, true);\n    elDocument.removeEventListener('mouseup', this.onEndDrag, true);\n    this.removePreventClickId = elWindow.setTimeout(() => {\n      // Remove these asynchronously so we still suppress click events\n      // generated simultaneously with mouseup.\n      elDocument.removeEventListener('click', this.preventClick, true);\n      elDocument.removeEventListener('dblclick', this.preventClick, true);\n      this.removePreventClickId = null;\n    });\n  };\n\n  /**\n   * Handler to ignore click events during drag\n   */\n  preventClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  onTrackClick(e, axis = 'y') {\n    if (!this.options.clickOnTrack) return;\n\n    const elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n    const scrollbar = this.axis[axis].scrollbar;\n    const scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    let scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    const t =\n      axis === 'y'\n        ? this.mouseY - scrollbarOffset\n        : this.mouseX - scrollbarOffset;\n    const dir = t < 0 ? -1 : 1;\n    const scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    const scrollTo = () => {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          scrolled -= this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          scrolled += this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n\n  /**\n   * Getter for content element\n   */\n  getContentElement() {\n    return this.contentEl;\n  }\n\n  /**\n   * Getter for original scrolling element\n   */\n  getScrollElement() {\n    return this.contentWrapperEl;\n  }\n\n  getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (\n        getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n          .display === 'none' ||\n        'scrollbarWidth' in document.documentElement.style ||\n        '-ms-overflow-style' in document.documentElement.style\n      ) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  }\n\n  removeListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Cancel all debounced functions\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n\n  /**\n   * Check if mouse is within bounds\n   */\n  isWithinBounds(bbox) {\n    return (\n      this.mouseX >= bbox.left &&\n      this.mouseX <= bbox.left + bbox.width &&\n      this.mouseY >= bbox.top &&\n      this.mouseY <= bbox.top + bbox.height\n    );\n  }\n\n  /**\n   * Find element children matches query\n   */\n  findChild(el, query) {\n    const matches =\n      el.matches ||\n      el.webkitMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, child =>\n      matches.call(child, query)\n    )[0];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}